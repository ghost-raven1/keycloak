import {
  ASTERISK,
  ApplicationLauncherSeparator,
  Badge,
  BadgeToggle,
  Bullseye,
  Button,
  ButtonType,
  ButtonVariant,
  Checkbox,
  Chip,
  ChipGroup,
  Divider,
  DividerVariant,
  Dropdown,
  DropdownArrowContext,
  DropdownContext,
  DropdownDirection,
  DropdownGroup,
  DropdownItem,
  DropdownMenu,
  DropdownPosition,
  DropdownSeparator,
  DropdownToggle,
  DropdownToggleAction,
  DropdownToggleCheckbox,
  DropdownWithContext,
  EmptyState,
  EmptyStateBody,
  EmptyStateIcon,
  EmptyStatePrimary,
  EmptyStateSecondaryActions,
  EmptyStateVariant,
  FocusTrap,
  GenerateId,
  KEYHANDLER_DIRECTION,
  KEY_CODES,
  KebabToggle,
  KeyTypes,
  KeyboardHandler,
  Popover,
  PopoverPosition,
  Popper,
  SIDE,
  Select,
  SelectConsumer,
  SelectContext,
  SelectDirection,
  SelectFooterTabbableItems,
  SelectGroup,
  SelectOption,
  SelectPosition,
  SelectProvider,
  SelectVariant,
  Spinner,
  TextInput,
  TextInputBase,
  TextInputReadOnlyVariant,
  TextInputTypes,
  Title,
  TitleSizes,
  Tooltip,
  TooltipPosition,
  ValidatedOptions,
  bullseye_default,
  button_default,
  canUseDOM,
  capitalize,
  check_default,
  createRenderableFavorites,
  debounce,
  extendItemsWithFavorite,
  fillTemplate,
  findTabbableElements,
  form_control_default,
  form_default,
  formatBreakpointMods,
  getBreakpoint,
  getDefaultOUIAId,
  getNextIndex,
  getOUIAProps,
  getOpacityTransition,
  getResizeObserver,
  getTextWidth,
  getUniqueId,
  getVerticalBreakpoint,
  globalHeightBreakpoints,
  globalWidthBreakpoints,
  global_breakpoint_2xl_default,
  global_breakpoint_lg_default,
  global_breakpoint_md_default,
  global_breakpoint_xl_default,
  handleArrows,
  innerDimensions,
  isElementInView,
  isValidDate,
  keyHandler,
  pluralize,
  preventedEvents,
  setBreakpointCssVars,
  setTabIndex,
  sideElementIsOutOfView,
  spinnerSize,
  toCamel,
  trimLeft,
  useInterval,
  useIsomorphicLayoutEffect,
  useOUIAId,
  useOUIAProps
} from "./chunk-NPANE4JW.js";
import {
  require_react_dom
} from "./chunk-KX5CDAJP.js";
import {
  angle_double_left_icon_default,
  angle_double_right_icon_default,
  angle_left_icon_default,
  angle_right_icon_default,
  angle_up_icon_default,
  arrow_right_icon_default,
  attention_bell_icon_default,
  bars_icon_default,
  bell_icon_default,
  copy_icon_default,
  external_link_alt_icon_default,
  eye_icon_default,
  eye_slash_icon_default,
  file_icon_default,
  in_progress_icon_default,
  info_circle_icon_default,
  minus_icon_default,
  outlined_calendar_alt_icon_default,
  plus_icon_default,
  resources_full_icon_default,
  search_icon_default,
  th_icon_default
} from "./chunk-3CA7CIOS.js";
import {
  __awaiter,
  __generator,
  __read,
  __rest,
  __spread,
  __spreadArray,
  angle_down_icon_default,
  caret_down_icon_default,
  check_circle_icon_default,
  check_icon_default,
  exclamation_circle_icon_default,
  exclamation_triangle_icon_default,
  grip_vertical_icon_default,
  star_icon_default,
  times_circle_icon_default,
  times_icon_default
} from "./chunk-T6XLOOLQ.js";
import {
  require_react
} from "./chunk-F6MCTWDU.js";
import {
  css
} from "./chunk-2RPZLTUH.js";
import {
  avatar_default
} from "./chunk-S4FPVQBO.js";
import {
  __commonJS,
  __toESM
} from "./chunk-BQWMX7FD.js";

// ../../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "../../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment36 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment36;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// ../../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "../../node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// ../../node_modules/.pnpm/object-assign@4.1.1/node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "../../node_modules/.pnpm/object-assign@4.1.1/node_modules/object-assign/index.js"(exports, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
  }
});

// ../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// ../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/lib/has.js"(exports, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// ../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/checkPropTypes.js"(exports, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err.name = "Invariant Violation";
                throw err;
              }
              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error = ex;
            }
            if (error && !(error instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error instanceof Error && !(error.message in loggedTypeFailures)) {
              loggedTypeFailures[error.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// ../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement8, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement8(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement8(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// ../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "../../node_modules/.pnpm/prop-types@15.8.1/node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// ../../node_modules/.pnpm/attr-accept@1.1.3/node_modules/attr-accept/dist/index.js
var require_dist = __commonJS({
  "../../node_modules/.pnpm/attr-accept@1.1.3/node_modules/attr-accept/dist/index.js"(exports, module) {
    module.exports = function(t) {
      function n(e) {
        if (r[e])
          return r[e].exports;
        var o = r[e] = { i: e, l: false, exports: {} };
        return t[e].call(o.exports, o, o.exports, n), o.l = true, o.exports;
      }
      var r = {};
      return n.m = t, n.c = r, n.d = function(t2, r2, e) {
        n.o(t2, r2) || Object.defineProperty(t2, r2, { configurable: false, enumerable: true, get: e });
      }, n.n = function(t2) {
        var r2 = t2 && t2.__esModule ? function() {
          return t2.default;
        } : function() {
          return t2;
        };
        return n.d(r2, "a", r2), r2;
      }, n.o = function(t2, n2) {
        return Object.prototype.hasOwnProperty.call(t2, n2);
      }, n.p = "", n(n.s = 13);
    }([function(t, n) {
      var r = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
      "number" == typeof __g && (__g = r);
    }, function(t, n) {
      t.exports = function(t2) {
        return "object" == typeof t2 ? null !== t2 : "function" == typeof t2;
      };
    }, function(t, n) {
      var r = t.exports = { version: "2.5.0" };
      "number" == typeof __e && (__e = r);
    }, function(t, n, r) {
      t.exports = !r(4)(function() {
        return 7 != Object.defineProperty({}, "a", { get: function() {
          return 7;
        } }).a;
      });
    }, function(t, n) {
      t.exports = function(t2) {
        try {
          return !!t2();
        } catch (t3) {
          return true;
        }
      };
    }, function(t, n) {
      var r = {}.toString;
      t.exports = function(t2) {
        return r.call(t2).slice(8, -1);
      };
    }, function(t, n, r) {
      var e = r(32)("wks"), o = r(9), i = r(0).Symbol, u = "function" == typeof i;
      (t.exports = function(t2) {
        return e[t2] || (e[t2] = u && i[t2] || (u ? i : o)("Symbol." + t2));
      }).store = e;
    }, function(t, n, r) {
      var e = r(0), o = r(2), i = r(8), u = r(22), c = r(10), f = function(t2, n2, r2) {
        var a, s, p, l, v = t2 & f.F, y = t2 & f.G, h = t2 & f.S, d = t2 & f.P, x = t2 & f.B, g = y ? e : h ? e[n2] || (e[n2] = {}) : (e[n2] || {}).prototype, m = y ? o : o[n2] || (o[n2] = {}), b = m.prototype || (m.prototype = {});
        y && (r2 = n2);
        for (a in r2)
          s = !v && g && void 0 !== g[a], p = (s ? g : r2)[a], l = x && s ? c(p, e) : d && "function" == typeof p ? c(Function.call, p) : p, g && u(g, a, p, t2 & f.U), m[a] != p && i(m, a, l), d && b[a] != p && (b[a] = p);
      };
      e.core = o, f.F = 1, f.G = 2, f.S = 4, f.P = 8, f.B = 16, f.W = 32, f.U = 64, f.R = 128, t.exports = f;
    }, function(t, n, r) {
      var e = r(16), o = r(21);
      t.exports = r(3) ? function(t2, n2, r2) {
        return e.f(t2, n2, o(1, r2));
      } : function(t2, n2, r2) {
        return t2[n2] = r2, t2;
      };
    }, function(t, n) {
      var r = 0, e = Math.random();
      t.exports = function(t2) {
        return "Symbol(".concat(void 0 === t2 ? "" : t2, ")_", (++r + e).toString(36));
      };
    }, function(t, n, r) {
      var e = r(24);
      t.exports = function(t2, n2, r2) {
        if (e(t2), void 0 === n2)
          return t2;
        switch (r2) {
          case 1:
            return function(r3) {
              return t2.call(n2, r3);
            };
          case 2:
            return function(r3, e2) {
              return t2.call(n2, r3, e2);
            };
          case 3:
            return function(r3, e2, o) {
              return t2.call(n2, r3, e2, o);
            };
        }
        return function() {
          return t2.apply(n2, arguments);
        };
      };
    }, function(t, n) {
      t.exports = function(t2) {
        if (void 0 == t2)
          throw TypeError("Can't call method on  " + t2);
        return t2;
      };
    }, function(t, n, r) {
      var e = r(28), o = Math.min;
      t.exports = function(t2) {
        return t2 > 0 ? o(e(t2), 9007199254740991) : 0;
      };
    }, function(t, n, r) {
      "use strict";
      n.__esModule = true, n.default = function(t2, n2) {
        if (t2 && n2) {
          var r2 = Array.isArray(n2) ? n2 : n2.split(","), e = t2.name || "", o = t2.type || "", i = o.replace(/\/.*$/, "");
          return r2.some(function(t3) {
            var n3 = t3.trim();
            return "." === n3.charAt(0) ? e.toLowerCase().endsWith(n3.toLowerCase()) : n3.endsWith("/*") ? i === n3.replace(/\/.*$/, "") : o === n3;
          });
        }
        return true;
      }, r(14), r(34);
    }, function(t, n, r) {
      r(15), t.exports = r(2).Array.some;
    }, function(t, n, r) {
      "use strict";
      var e = r(7), o = r(25)(3);
      e(e.P + e.F * !r(33)([].some, true), "Array", { some: function(t2) {
        return o(this, t2, arguments[1]);
      } });
    }, function(t, n, r) {
      var e = r(17), o = r(18), i = r(20), u = Object.defineProperty;
      n.f = r(3) ? Object.defineProperty : function(t2, n2, r2) {
        if (e(t2), n2 = i(n2, true), e(r2), o)
          try {
            return u(t2, n2, r2);
          } catch (t3) {
          }
        if ("get" in r2 || "set" in r2)
          throw TypeError("Accessors not supported!");
        return "value" in r2 && (t2[n2] = r2.value), t2;
      };
    }, function(t, n, r) {
      var e = r(1);
      t.exports = function(t2) {
        if (!e(t2))
          throw TypeError(t2 + " is not an object!");
        return t2;
      };
    }, function(t, n, r) {
      t.exports = !r(3) && !r(4)(function() {
        return 7 != Object.defineProperty(r(19)("div"), "a", { get: function() {
          return 7;
        } }).a;
      });
    }, function(t, n, r) {
      var e = r(1), o = r(0).document, i = e(o) && e(o.createElement);
      t.exports = function(t2) {
        return i ? o.createElement(t2) : {};
      };
    }, function(t, n, r) {
      var e = r(1);
      t.exports = function(t2, n2) {
        if (!e(t2))
          return t2;
        var r2, o;
        if (n2 && "function" == typeof (r2 = t2.toString) && !e(o = r2.call(t2)))
          return o;
        if ("function" == typeof (r2 = t2.valueOf) && !e(o = r2.call(t2)))
          return o;
        if (!n2 && "function" == typeof (r2 = t2.toString) && !e(o = r2.call(t2)))
          return o;
        throw TypeError("Can't convert object to primitive value");
      };
    }, function(t, n) {
      t.exports = function(t2, n2) {
        return { enumerable: !(1 & t2), configurable: !(2 & t2), writable: !(4 & t2), value: n2 };
      };
    }, function(t, n, r) {
      var e = r(0), o = r(8), i = r(23), u = r(9)("src"), c = Function.toString, f = ("" + c).split("toString");
      r(2).inspectSource = function(t2) {
        return c.call(t2);
      }, (t.exports = function(t2, n2, r2, c2) {
        var a = "function" == typeof r2;
        a && (i(r2, "name") || o(r2, "name", n2)), t2[n2] !== r2 && (a && (i(r2, u) || o(r2, u, t2[n2] ? "" + t2[n2] : f.join(String(n2)))), t2 === e ? t2[n2] = r2 : c2 ? t2[n2] ? t2[n2] = r2 : o(t2, n2, r2) : (delete t2[n2], o(t2, n2, r2)));
      })(Function.prototype, "toString", function() {
        return "function" == typeof this && this[u] || c.call(this);
      });
    }, function(t, n) {
      var r = {}.hasOwnProperty;
      t.exports = function(t2, n2) {
        return r.call(t2, n2);
      };
    }, function(t, n) {
      t.exports = function(t2) {
        if ("function" != typeof t2)
          throw TypeError(t2 + " is not a function!");
        return t2;
      };
    }, function(t, n, r) {
      var e = r(10), o = r(26), i = r(27), u = r(12), c = r(29);
      t.exports = function(t2, n2) {
        var r2 = 1 == t2, f = 2 == t2, a = 3 == t2, s = 4 == t2, p = 6 == t2, l = 5 == t2 || p, v = n2 || c;
        return function(n3, c2, y) {
          for (var h, d, x = i(n3), g = o(x), m = e(c2, y, 3), b = u(g.length), _ = 0, w = r2 ? v(n3, b) : f ? v(n3, 0) : void 0; b > _; _++)
            if ((l || _ in g) && (h = g[_], d = m(h, _, x), t2)) {
              if (r2)
                w[_] = d;
              else if (d)
                switch (t2) {
                  case 3:
                    return true;
                  case 5:
                    return h;
                  case 6:
                    return _;
                  case 2:
                    w.push(h);
                }
              else if (s)
                return false;
            }
          return p ? -1 : a || s ? s : w;
        };
      };
    }, function(t, n, r) {
      var e = r(5);
      t.exports = Object("z").propertyIsEnumerable(0) ? Object : function(t2) {
        return "String" == e(t2) ? t2.split("") : Object(t2);
      };
    }, function(t, n, r) {
      var e = r(11);
      t.exports = function(t2) {
        return Object(e(t2));
      };
    }, function(t, n) {
      var r = Math.ceil, e = Math.floor;
      t.exports = function(t2) {
        return isNaN(t2 = +t2) ? 0 : (t2 > 0 ? e : r)(t2);
      };
    }, function(t, n, r) {
      var e = r(30);
      t.exports = function(t2, n2) {
        return new (e(t2))(n2);
      };
    }, function(t, n, r) {
      var e = r(1), o = r(31), i = r(6)("species");
      t.exports = function(t2) {
        var n2;
        return o(t2) && (n2 = t2.constructor, "function" != typeof n2 || n2 !== Array && !o(n2.prototype) || (n2 = void 0), e(n2) && null === (n2 = n2[i]) && (n2 = void 0)), void 0 === n2 ? Array : n2;
      };
    }, function(t, n, r) {
      var e = r(5);
      t.exports = Array.isArray || function(t2) {
        return "Array" == e(t2);
      };
    }, function(t, n, r) {
      var e = r(0), o = e["__core-js_shared__"] || (e["__core-js_shared__"] = {});
      t.exports = function(t2) {
        return o[t2] || (o[t2] = {});
      };
    }, function(t, n, r) {
      "use strict";
      var e = r(4);
      t.exports = function(t2, n2) {
        return !!t2 && e(function() {
          n2 ? t2.call(null, function() {
          }, 1) : t2.call(null);
        });
      };
    }, function(t, n, r) {
      r(35), t.exports = r(2).String.endsWith;
    }, function(t, n, r) {
      "use strict";
      var e = r(7), o = r(12), i = r(36), u = "".endsWith;
      e(e.P + e.F * r(38)("endsWith"), "String", { endsWith: function(t2) {
        var n2 = i(this, t2, "endsWith"), r2 = arguments.length > 1 ? arguments[1] : void 0, e2 = o(n2.length), c = void 0 === r2 ? e2 : Math.min(o(r2), e2), f = String(t2);
        return u ? u.call(n2, f, c) : n2.slice(c - f.length, c) === f;
      } });
    }, function(t, n, r) {
      var e = r(37), o = r(11);
      t.exports = function(t2, n2, r2) {
        if (e(n2))
          throw TypeError("String#" + r2 + " doesn't accept regex!");
        return String(o(t2));
      };
    }, function(t, n, r) {
      var e = r(1), o = r(5), i = r(6)("match");
      t.exports = function(t2) {
        var n2;
        return e(t2) && (void 0 !== (n2 = t2[i]) ? !!n2 : "RegExp" == o(t2));
      };
    }, function(t, n, r) {
      var e = r(6)("match");
      t.exports = function(t2) {
        var n2 = /./;
        try {
          "/./"[t2](n2);
        } catch (r2) {
          try {
            return n2[e] = false, !"/./"[t2](n2);
          } catch (t3) {
          }
        }
        return true;
      };
    }]);
  }
});

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModal.js
var React9 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Backdrop/backdrop.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Backdrop/backdrop.css";
var backdrop_default = {
  "backdrop": "pf-c-backdrop",
  "backdropOpen": "pf-c-backdrop__open"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalContainer.js
var React8 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalBoxContent.js
var React = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/AboutModalBox/about-modal-box.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/AboutModalBox/about-modal-box.css";
var about_modal_box_default = {
  "aboutModalBox": "pf-c-about-modal-box",
  "aboutModalBoxBrand": "pf-c-about-modal-box__brand",
  "aboutModalBoxBrandImage": "pf-c-about-modal-box__brand-image",
  "aboutModalBoxClose": "pf-c-about-modal-box__close",
  "aboutModalBoxContent": "pf-c-about-modal-box__content",
  "aboutModalBoxHeader": "pf-c-about-modal-box__header",
  "aboutModalBoxHero": "pf-c-about-modal-box__hero",
  "aboutModalBoxStrapline": "pf-c-about-modal-box__strapline",
  "button": "pf-c-button",
  "card": "pf-c-card",
  "modifiers": {
    "plain": "pf-m-plain"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Content/content.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Content/content.css";
var content_default = {
  "content": "pf-c-content",
  "modifiers": {
    "visited": "pf-m-visited",
    "plain": "pf-m-plain",
    "overpassFont": "pf-m-overpass-font"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalBoxContent.js
var AboutModalBoxContent = (_a) => {
  var { children, className = "", trademark, id, noAboutModalBoxContentContainer = false } = _a, props = __rest(_a, ["children", "className", "trademark", "id", "noAboutModalBoxContentContainer"]);
  return React.createElement(
    "div",
    Object.assign({ className: css(about_modal_box_default.aboutModalBoxContent, className), id }, props),
    React.createElement("div", { className: css("pf-c-about-modal-box__body") }, noAboutModalBoxContentContainer ? children : React.createElement("div", { className: css(content_default.content) }, children)),
    React.createElement("p", { className: css(about_modal_box_default.aboutModalBoxStrapline) }, trademark)
  );
};
AboutModalBoxContent.displayName = "AboutModalBoxContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalBoxHeader.js
var React2 = __toESM(require_react());
var AboutModalBoxHeader = (_a) => {
  var { className = "", productName = "", id } = _a, props = __rest(_a, ["className", "productName", "id"]);
  return React2.createElement(
    "div",
    Object.assign({ className: css(about_modal_box_default.aboutModalBoxHeader, className) }, props),
    React2.createElement(Title, { headingLevel: "h1", size: "4xl", id }, productName)
  );
};
AboutModalBoxHeader.displayName = "AboutModalBoxHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalBoxHero.js
var React3 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_about_modal_box__hero_sm_BackgroundImage.js
var c_about_modal_box__hero_sm_BackgroundImage = {
  "name": "--pf-c-about-modal-box__hero--sm--BackgroundImage",
  "value": 'url("../../assets/images/pfbg_992@2x.jpg")',
  "var": "var(--pf-c-about-modal-box__hero--sm--BackgroundImage)"
};
var c_about_modal_box_hero_sm_BackgroundImage_default = c_about_modal_box__hero_sm_BackgroundImage;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalBoxHero.js
var AboutModalBoxHero = (_a) => {
  var { className, backgroundImageSrc } = _a, props = __rest(_a, ["className", "backgroundImageSrc"]);
  return React3.createElement("div", Object.assign({ style: (
    /* eslint-disable camelcase */
    backgroundImageSrc !== "" ? { [c_about_modal_box_hero_sm_BackgroundImage_default.name]: `url(${backgroundImageSrc})` } : {}
  ), className: css(about_modal_box_default.aboutModalBoxHero, className) }, props));
};
AboutModalBoxHero.displayName = "AboutModalBoxHero";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalBoxBrand.js
var React4 = __toESM(require_react());
var AboutModalBoxBrand = (_a) => {
  var { className = "", src = "", alt } = _a, props = __rest(_a, ["className", "src", "alt"]);
  return React4.createElement(
    "div",
    Object.assign({ className: css(about_modal_box_default.aboutModalBoxBrand, className) }, props),
    React4.createElement("img", { className: css(about_modal_box_default.aboutModalBoxBrandImage), src, alt })
  );
};
AboutModalBoxBrand.displayName = "AboutModalBoxBrand";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalBoxCloseButton.js
var React5 = __toESM(require_react());
var AboutModalBoxCloseButton = (_a) => {
  var { className = "", onClose = () => void 0, "aria-label": ariaLabel = "Close Dialog" } = _a, props = __rest(_a, ["className", "onClose", "aria-label"]);
  return React5.createElement(
    "div",
    Object.assign({ className: css(about_modal_box_default.aboutModalBoxClose, className) }, props),
    React5.createElement(
      Button,
      { variant: "plain", onClick: onClose, "aria-label": ariaLabel },
      React5.createElement(times_icon_default, null)
    )
  );
};
AboutModalBoxCloseButton.displayName = "AboutModalBoxCloseButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalBox.js
var React6 = __toESM(require_react());
var AboutModalBox = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React6.createElement("div", Object.assign({ role: "dialog", "aria-modal": "true", className: css(about_modal_box_default.aboutModalBox, className) }, props), children);
};
AboutModalBox.displayName = "AboutModalBox";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Backdrop/Backdrop.js
var React7 = __toESM(require_react());
var Backdrop = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React7.createElement("div", Object.assign({}, props, { className: css(backdrop_default.backdrop, className) }), children);
};
Backdrop.displayName = "Backdrop";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModalContainer.js
var AboutModalContainer = (_a) => {
  var { children, className = "", isOpen = false, onClose = () => void 0, productName = "", trademark, brandImageSrc, brandImageAlt, backgroundImageSrc, closeButtonAriaLabel, aboutModalBoxHeaderId, aboutModalBoxContentId, disableFocusTrap = false } = _a, props = __rest(_a, ["children", "className", "isOpen", "onClose", "productName", "trademark", "brandImageSrc", "brandImageAlt", "backgroundImageSrc", "closeButtonAriaLabel", "aboutModalBoxHeaderId", "aboutModalBoxContentId", "disableFocusTrap"]);
  if (!isOpen) {
    return null;
  }
  return React8.createElement(
    Backdrop,
    null,
    React8.createElement(
      FocusTrap,
      { active: !disableFocusTrap, focusTrapOptions: { clickOutsideDeactivates: true, tabbableOptions: { displayCheck: "none" } }, className: css(bullseye_default.bullseye) },
      React8.createElement(
        AboutModalBox,
        { className, "aria-labelledby": aboutModalBoxHeaderId, "aria-describedby": aboutModalBoxContentId },
        React8.createElement(AboutModalBoxBrand, { src: brandImageSrc, alt: brandImageAlt }),
        React8.createElement(AboutModalBoxCloseButton, { "aria-label": closeButtonAriaLabel, onClose }),
        productName && React8.createElement(AboutModalBoxHeader, { id: aboutModalBoxHeaderId, productName }),
        React8.createElement(AboutModalBoxContent, Object.assign({ trademark, id: aboutModalBoxContentId, noAboutModalBoxContentContainer: false }, props), children),
        React8.createElement(AboutModalBoxHero, { backgroundImageSrc })
      )
    )
  );
};
AboutModalContainer.displayName = "AboutModalContainer";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AboutModal/AboutModal.js
var AboutModal = class _AboutModal extends React9.Component {
  constructor(props) {
    super(props);
    this.id = _AboutModal.currentId++;
    this.ariaLabelledBy = `pf-about-modal-title-${this.id}`;
    this.ariaDescribedBy = `pf-about-modal-content-${this.id}`;
    this.handleEscKeyClick = (event) => {
      if (event.key === KeyTypes.Escape && this.props.isOpen) {
        this.props.onClose();
      }
    };
    this.toggleSiblingsFromScreenReaders = (hide) => {
      const { appendTo } = this.props;
      const target = this.getElement(appendTo);
      const bodyChildren = target.children;
      for (const child of Array.from(bodyChildren)) {
        if (child !== this.state.container) {
          hide ? child.setAttribute("aria-hidden", "" + hide) : child.removeAttribute("aria-hidden");
        }
      }
    };
    this.getElement = (appendTo) => {
      if (typeof appendTo === "function") {
        return appendTo();
      }
      return appendTo || document.body;
    };
    this.state = {
      container: void 0
    };
    if (props.brandImageSrc && !props.brandImageAlt) {
      console.error("AboutModal:", "brandImageAlt is required when a brandImageSrc is specified");
    }
  }
  componentDidMount() {
    const container = document.createElement("div");
    const target = this.getElement(this.props.appendTo);
    this.setState({ container });
    target.appendChild(container);
    target.addEventListener("keydown", this.handleEscKeyClick, false);
    if (this.props.isOpen) {
      target.classList.add(css(backdrop_default.backdropOpen));
    } else {
      target.classList.remove(css(backdrop_default.backdropOpen));
    }
  }
  componentDidUpdate() {
    const target = this.getElement(this.props.appendTo);
    if (this.props.isOpen) {
      target.classList.add(css(backdrop_default.backdropOpen));
      this.toggleSiblingsFromScreenReaders(true);
    } else {
      target.classList.remove(css(backdrop_default.backdropOpen));
      this.toggleSiblingsFromScreenReaders(false);
    }
  }
  componentWillUnmount() {
    const target = this.getElement(this.props.appendTo);
    if (this.state.container) {
      target.removeChild(this.state.container);
    }
    target.removeEventListener("keydown", this.handleEscKeyClick, false);
    target.classList.remove(css(backdrop_default.backdropOpen));
  }
  render() {
    const _a = this.props, { appendTo } = _a, props = __rest(_a, ["appendTo"]);
    const { container } = this.state;
    if (!canUseDOM || !container) {
      return null;
    }
    return ReactDOM.createPortal(React9.createElement(AboutModalContainer, Object.assign({ aboutModalBoxHeaderId: this.ariaLabelledBy, aboutModalBoxContentId: this.ariaDescribedBy }, props)), container);
  }
};
AboutModal.displayName = "AboutModal";
AboutModal.currentId = 0;
AboutModal.defaultProps = {
  className: "",
  isOpen: false,
  onClose: () => void 0,
  productName: "",
  trademark: "",
  backgroundImageSrc: "",
  noAboutModalBoxContentContainer: false,
  appendTo: null
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Accordion/Accordion.js
var React11 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Accordion/accordion.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Accordion/accordion.css";
var accordion_default = {
  "accordion": "pf-c-accordion",
  "accordionExpandedContent": "pf-c-accordion__expanded-content",
  "accordionExpandedContentBody": "pf-c-accordion__expanded-content-body",
  "accordionToggle": "pf-c-accordion__toggle",
  "accordionToggleIcon": "pf-c-accordion__toggle-icon",
  "accordionToggleText": "pf-c-accordion__toggle-text",
  "modifiers": {
    "displayLg": "pf-m-display-lg",
    "bordered": "pf-m-bordered",
    "expanded": "pf-m-expanded",
    "fixed": "pf-m-fixed"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Accordion/AccordionContext.js
var React10 = __toESM(require_react());
var AccordionContext = React10.createContext({});

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Accordion/Accordion.js
var Accordion = (_a) => {
  var { children = null, className = "", "aria-label": ariaLabel = "", headingLevel = "h3", asDefinitionList = true, isBordered = false, displaySize = "default" } = _a, props = __rest(_a, ["children", "className", "aria-label", "headingLevel", "asDefinitionList", "isBordered", "displaySize"]);
  const AccordionList = asDefinitionList ? "dl" : "div";
  return React11.createElement(
    AccordionList,
    Object.assign({ className: css(accordion_default.accordion, isBordered && accordion_default.modifiers.bordered, displaySize === "large" && accordion_default.modifiers.displayLg, className), "aria-label": ariaLabel }, props),
    React11.createElement(AccordionContext.Provider, { value: {
      ContentContainer: asDefinitionList ? "dd" : "div",
      ToggleContainer: asDefinitionList ? "dt" : headingLevel
    } }, children)
  );
};
Accordion.displayName = "Accordion";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Accordion/AccordionContent.js
var React13 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Accordion/AccordionExpandedContentBody.js
var React12 = __toESM(require_react());
var AccordionExpandedContentBody = ({ children = null }) => React12.createElement("div", { className: css(accordion_default.accordionExpandedContentBody) }, children);
AccordionExpandedContentBody.displayName = "AccordionExpandedContentBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Accordion/AccordionContent.js
var AccordionContent = (_a) => {
  var { className = "", children = null, id = "", isHidden = false, isFixed = false, isCustomContent = false, "aria-label": ariaLabel = "", "aria-labelledby": ariaLabelledby, component } = _a, props = __rest(_a, ["className", "children", "id", "isHidden", "isFixed", "isCustomContent", "aria-label", "aria-labelledby", "component"]);
  const [hasScrollbar, setHasScrollbar] = React13.useState(false);
  const containerRef = React13.useRef(null);
  React13.useEffect(() => {
    if ((containerRef === null || containerRef === void 0 ? void 0 : containerRef.current) && isFixed && !isHidden) {
      const { offsetHeight, scrollHeight } = containerRef.current;
      setHasScrollbar(offsetHeight < scrollHeight);
    } else if (!isFixed) {
      setHasScrollbar(false);
    }
  }, [containerRef, isFixed, isHidden]);
  return React13.createElement(AccordionContext.Consumer, null, ({ ContentContainer }) => {
    const Container = component || ContentContainer;
    return React13.createElement(Container, Object.assign({ ref: containerRef, id, className: css(accordion_default.accordionExpandedContent, isFixed && accordion_default.modifiers.fixed, !isHidden && accordion_default.modifiers.expanded, className), hidden: isHidden }, ariaLabel && { "aria-label": ariaLabel }, ariaLabelledby && { "aria-labelledby": ariaLabelledby }, hasScrollbar && { tabIndex: 0 }, hasScrollbar && Container === "div" && { role: "region" }, props), isCustomContent ? children : React13.createElement(AccordionExpandedContentBody, null, children));
  });
};
AccordionContent.displayName = "AccordionContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Accordion/AccordionItem.js
var React14 = __toESM(require_react());
var AccordionItem = ({ children = null }) => React14.createElement(React14.Fragment, null, children);
AccordionItem.displayName = "AccordionItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Accordion/AccordionToggle.js
var React15 = __toESM(require_react());
var AccordionToggle = (_a) => {
  var { className = "", id, isExpanded = false, children = null, component } = _a, props = __rest(_a, ["className", "id", "isExpanded", "children", "component"]);
  return React15.createElement(AccordionContext.Consumer, null, ({ ToggleContainer }) => {
    const Container = component || ToggleContainer;
    return React15.createElement(
      Container,
      null,
      React15.createElement(
        "button",
        Object.assign({ id, className: css(accordion_default.accordionToggle, isExpanded && accordion_default.modifiers.expanded, className), "aria-expanded": isExpanded, type: "button" }, props),
        React15.createElement("span", { className: css(accordion_default.accordionToggleText) }, children),
        React15.createElement(
          "span",
          { className: css(accordion_default.accordionToggleIcon) },
          React15.createElement(angle_right_icon_default, null)
        )
      )
    );
  });
};
AccordionToggle.displayName = "AccordionToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ActionList/ActionList.js
var React16 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ActionList/action-list.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ActionList/action-list.css";
var action_list_default = {
  "actionList": "pf-c-action-list",
  "actionListGroup": "pf-c-action-list__group",
  "modifiers": {
    "icons": "pf-m-icons"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ActionList/ActionList.js
var ActionList = (_a) => {
  var { children, isIconList, className = "" } = _a, props = __rest(_a, ["children", "isIconList", "className"]);
  return React16.createElement("div", Object.assign({ className: css(action_list_default.actionList, isIconList && action_list_default.modifiers.icons, className) }, props), children);
};
ActionList.displayName = "ActionList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ActionList/ActionListGroup.js
var React17 = __toESM(require_react());
var ActionListGroup = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React17.createElement("div", Object.assign({ className: css(action_list_default.actionListGroup, className) }, props), children);
};
ActionListGroup.displayName = "ActionListGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ActionList/ActionListItem.js
var React18 = __toESM(require_react());
var ActionListItem = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React18.createElement("div", Object.assign({ className: css("pf-c-action-list__item", className) }, props), children);
};
ActionListItem.displayName = "ActionListItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Alert/Alert.js
var React22 = __toESM(require_react());
var import_react = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Alert/alert.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Alert/alert.css";
var alert_default = {
  "alert": "pf-c-alert",
  "alertAction": "pf-c-alert__action",
  "alertActionGroup": "pf-c-alert__action-group",
  "alertDescription": "pf-c-alert__description",
  "alertIcon": "pf-c-alert__icon",
  "alertTitle": "pf-c-alert__title",
  "alertToggle": "pf-c-alert__toggle",
  "alertToggleIcon": "pf-c-alert__toggle-icon",
  "button": "pf-c-button",
  "modifiers": {
    "success": "pf-m-success",
    "danger": "pf-m-danger",
    "warning": "pf-m-warning",
    "info": "pf-m-info",
    "inline": "pf-m-inline",
    "plain": "pf-m-plain",
    "expandable": "pf-m-expandable",
    "expanded": "pf-m-expanded",
    "truncate": "pf-m-truncate",
    "overpassFont": "pf-m-overpass-font"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/utilities/Accessibility/accessibility.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/utilities/Accessibility/accessibility.css";
var accessibility_default = {
  "hidden": "pf-u-hidden",
  "hiddenOnLg": "pf-u-hidden-on-lg",
  "hiddenOnMd": "pf-u-hidden-on-md",
  "hiddenOnSm": "pf-u-hidden-on-sm",
  "hiddenOnXl": "pf-u-hidden-on-xl",
  "hiddenOn_2xl": "pf-u-hidden-on-2xl",
  "screenReader": "pf-u-screen-reader",
  "screenReaderOnLg": "pf-u-screen-reader-on-lg",
  "screenReaderOnMd": "pf-u-screen-reader-on-md",
  "screenReaderOnSm": "pf-u-screen-reader-on-sm",
  "screenReaderOnXl": "pf-u-screen-reader-on-xl",
  "screenReaderOn_2xl": "pf-u-screen-reader-on-2xl",
  "visible": "pf-u-visible",
  "visibleOnLg": "pf-u-visible-on-lg",
  "visibleOnMd": "pf-u-visible-on-md",
  "visibleOnSm": "pf-u-visible-on-sm",
  "visibleOnXl": "pf-u-visible-on-xl",
  "visibleOn_2xl": "pf-u-visible-on-2xl"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Alert/AlertIcon.js
var React19 = __toESM(require_react());
var variantIcons = {
  success: check_circle_icon_default,
  danger: exclamation_circle_icon_default,
  warning: exclamation_triangle_icon_default,
  info: info_circle_icon_default,
  default: bell_icon_default
};
var AlertIcon = (_a) => {
  var { variant, customIcon, className = "" } = _a, props = __rest(_a, ["variant", "customIcon", "className"]);
  const Icon2 = variantIcons[variant];
  return Icon2 ? React19.createElement("div", Object.assign({}, props, { className: css(alert_default.alertIcon, className) }), customIcon || React19.createElement(Icon2, null)) : null;
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Alert/AlertContext.js
var React20 = __toESM(require_react());
var AlertContext = React20.createContext(null);

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_alert__title_max_lines.js
var c_alert__title_max_lines = {
  "name": "--pf-c-alert__title--max-lines",
  "value": "1",
  "var": "var(--pf-c-alert__title--max-lines)"
};
var c_alert_title_max_lines_default = c_alert__title_max_lines;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Alert/AlertToggleExpandButton.js
var React21 = __toESM(require_react());
var AlertToggleExpandButton = (_a) => {
  var { "aria-label": ariaLabel = "", variantLabel, onToggleExpand, isExpanded = false } = _a, props = __rest(_a, ["aria-label", "variantLabel", "onToggleExpand", "isExpanded"]);
  const { title, variantLabel: alertVariantLabel } = React21.useContext(AlertContext);
  return React21.createElement(
    Button,
    Object.assign({ variant: ButtonVariant.plain, onClick: onToggleExpand, "aria-expanded": isExpanded, "aria-label": ariaLabel === "" ? `Toggle ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel }, props),
    React21.createElement(
      "span",
      { className: css(alert_default.alertToggleIcon) },
      React21.createElement(angle_right_icon_default, { "aria-hidden": "true" })
    )
  );
};
AlertToggleExpandButton.displayName = "AlertToggleExpandButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Alert/Alert.js
var AlertVariant;
(function(AlertVariant2) {
  AlertVariant2["success"] = "success";
  AlertVariant2["danger"] = "danger";
  AlertVariant2["warning"] = "warning";
  AlertVariant2["info"] = "info";
  AlertVariant2["default"] = "default";
})(AlertVariant || (AlertVariant = {}));
var Alert = (_a) => {
  var { variant = AlertVariant.default, isInline = false, isPlain = false, isLiveRegion = false, variantLabel = `${capitalize(variant)} alert:`, "aria-label": ariaLabel = `${capitalize(variant)} Alert`, actionClose, actionLinks, title, titleHeadingLevel, component = "h4", children = "", className = "", ouiaId, ouiaSafe = true, timeout = false, timeoutAnimation = 3e3, onTimeout = () => {
  }, truncateTitle = 0, tooltipPosition, customIcon, isExpandable = false, toggleAriaLabel = `${capitalize(variant)} alert details`, onMouseEnter = () => {
  }, onMouseLeave = () => {
  }, id } = _a, props = __rest(_a, ["variant", "isInline", "isPlain", "isLiveRegion", "variantLabel", "aria-label", "actionClose", "actionLinks", "title", "titleHeadingLevel", "component", "children", "className", "ouiaId", "ouiaSafe", "timeout", "timeoutAnimation", "onTimeout", "truncateTitle", "tooltipPosition", "customIcon", "isExpandable", "toggleAriaLabel", "onMouseEnter", "onMouseLeave", "id"]);
  const ouiaProps = useOUIAProps(Alert.displayName, ouiaId, ouiaSafe, variant);
  const getHeadingContent = React22.createElement(
    React22.Fragment,
    null,
    React22.createElement("span", { className: css(accessibility_default.screenReader) }, variantLabel),
    title
  );
  const titleRef = React22.useRef(null);
  const TitleComponent = titleHeadingLevel || component;
  if (titleHeadingLevel !== void 0) {
    console.warn("Alert: titleHeadingLevel is deprecated, please use the newer component prop instead to set the alert title element.");
  }
  const divRef = React22.useRef();
  const [isTooltipVisible, setIsTooltipVisible] = (0, import_react.useState)(false);
  React22.useEffect(() => {
    if (!titleRef.current || !truncateTitle) {
      return;
    }
    titleRef.current.style.setProperty(c_alert_title_max_lines_default.name, truncateTitle.toString());
    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;
    if (isTooltipVisible !== showTooltip) {
      setIsTooltipVisible(showTooltip);
    }
  }, [titleRef, truncateTitle, isTooltipVisible]);
  const [timedOut, setTimedOut] = (0, import_react.useState)(false);
  const [timedOutAnimation, setTimedOutAnimation] = (0, import_react.useState)(true);
  const [isMouseOver, setIsMouseOver] = (0, import_react.useState)();
  const [containsFocus, setContainsFocus] = (0, import_react.useState)();
  const dismissed = timedOut && timedOutAnimation && !isMouseOver && !containsFocus;
  React22.useEffect(() => {
    const calculatedTimeout = timeout === true ? 8e3 : Number(timeout);
    if (calculatedTimeout > 0) {
      const timer = setTimeout(() => setTimedOut(true), calculatedTimeout);
      return () => clearTimeout(timer);
    }
  }, [timeout]);
  React22.useEffect(() => {
    const onDocumentFocus = () => {
      if (divRef.current) {
        if (divRef.current.contains(document.activeElement)) {
          setContainsFocus(true);
          setTimedOutAnimation(false);
        } else if (containsFocus) {
          setContainsFocus(false);
        }
      }
    };
    document.addEventListener("focus", onDocumentFocus, true);
    return () => document.removeEventListener("focus", onDocumentFocus, true);
  }, [containsFocus]);
  React22.useEffect(() => {
    if (containsFocus === false || isMouseOver === false) {
      const timer = setTimeout(() => setTimedOutAnimation(true), timeoutAnimation);
      return () => clearTimeout(timer);
    }
  }, [containsFocus, isMouseOver, timeoutAnimation]);
  React22.useEffect(() => {
    dismissed && onTimeout();
  }, [dismissed, onTimeout]);
  const [isExpanded, setIsExpanded] = (0, import_react.useState)(false);
  const onToggleExpand = () => {
    setIsExpanded(!isExpanded);
  };
  const myOnMouseEnter = (ev) => {
    setIsMouseOver(true);
    setTimedOutAnimation(false);
    onMouseEnter(ev);
  };
  const myOnMouseLeave = (ev) => {
    setIsMouseOver(false);
    onMouseLeave(ev);
  };
  if (dismissed) {
    return null;
  }
  const Title2 = React22.createElement(TitleComponent, Object.assign({}, isTooltipVisible && { tabIndex: 0 }, { ref: titleRef, className: css(alert_default.alertTitle, truncateTitle && alert_default.modifiers.truncate) }), getHeadingContent);
  return React22.createElement(
    "div",
    Object.assign({ ref: divRef, className: css(alert_default.alert, isInline && alert_default.modifiers.inline, isPlain && alert_default.modifiers.plain, isExpandable && alert_default.modifiers.expandable, isExpanded && alert_default.modifiers.expanded, alert_default.modifiers[variant], className), "aria-label": ariaLabel }, ouiaProps, isLiveRegion && {
      "aria-live": "polite",
      "aria-atomic": "false"
    }, { onMouseEnter: myOnMouseEnter, onMouseLeave: myOnMouseLeave, id }, props),
    isExpandable && React22.createElement(
      AlertContext.Provider,
      { value: { title, variantLabel } },
      React22.createElement(
        "div",
        { className: css(alert_default.alertToggle) },
        React22.createElement(AlertToggleExpandButton, { isExpanded, onToggleExpand, "aria-label": toggleAriaLabel })
      )
    ),
    React22.createElement(AlertIcon, { variant, customIcon }),
    isTooltipVisible ? React22.createElement(Tooltip, { content: getHeadingContent, position: tooltipPosition }, Title2) : Title2,
    actionClose && React22.createElement(
      AlertContext.Provider,
      { value: { title, variantLabel } },
      React22.createElement("div", { className: css(alert_default.alertAction) }, actionClose)
    ),
    children && (!isExpandable || isExpandable && isExpanded) && React22.createElement("div", { className: css(alert_default.alertDescription) }, children),
    actionLinks && React22.createElement("div", { className: css(alert_default.alertActionGroup) }, actionLinks)
  );
};
Alert.displayName = "Alert";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Alert/AlertActionCloseButton.js
var React23 = __toESM(require_react());
var AlertActionCloseButton = (_a) => {
  var { className, onClose = () => void 0, "aria-label": ariaLabel = "", variantLabel } = _a, props = __rest(_a, ["className", "onClose", "aria-label", "variantLabel"]);
  return React23.createElement(AlertContext.Consumer, null, ({ title, variantLabel: alertVariantLabel }) => React23.createElement(
    Button,
    Object.assign({ variant: ButtonVariant.plain, onClick: onClose, "aria-label": ariaLabel === "" ? `Close ${variantLabel || alertVariantLabel} alert: ${title}` : ariaLabel, className }, props),
    React23.createElement(times_icon_default, null)
  ));
};
AlertActionCloseButton.displayName = "AlertActionCloseButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Alert/AlertActionLink.js
var React24 = __toESM(require_react());
var AlertActionLink = (_a) => {
  var { className = "", children } = _a, props = __rest(_a, ["className", "children"]);
  return React24.createElement(Button, Object.assign({ variant: ButtonVariant.link, isInline: true, className }, props), children);
};
AlertActionLink.displayName = "AlertActionLink";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AlertGroup/AlertGroup.js
var React26 = __toESM(require_react());
var ReactDOM2 = __toESM(require_react_dom());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AlertGroup/AlertGroupInline.js
var React25 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/AlertGroup/alert-group.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/AlertGroup/alert-group.css";
var alert_group_default = {
  "alertGroup": "pf-c-alert-group",
  "alertGroupOverflowButton": "pf-c-alert-group__overflow-button",
  "modifiers": {
    "toast": "pf-m-toast"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AlertGroup/AlertGroupInline.js
var AlertGroupInline = (_a) => {
  var { className, children, isToast, isLiveRegion, onOverflowClick, overflowMessage } = _a, rest = __rest(_a, ["className", "children", "isToast", "isLiveRegion", "onOverflowClick", "overflowMessage"]);
  return React25.createElement(
    "ul",
    Object.assign({ "aria-live": isLiveRegion ? "polite" : null, "aria-atomic": isLiveRegion ? false : null, className: css(alert_group_default.alertGroup, className, isToast ? alert_group_default.modifiers.toast : "") }, rest),
    React25.Children.toArray(children).map((alert, index) => {
      var _a2;
      return React25.createElement("li", { key: ((_a2 = alert.props) === null || _a2 === void 0 ? void 0 : _a2.id) || index }, alert);
    }),
    overflowMessage && React25.createElement(
      "li",
      null,
      React25.createElement("button", { onClick: onOverflowClick, className: css(alert_group_default.alertGroupOverflowButton) }, overflowMessage)
    )
  );
};
AlertGroupInline.displayName = "AlertGroupInline";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/AlertGroup/AlertGroup.js
var AlertGroup = class extends React26.Component {
  constructor() {
    super(...arguments);
    this.state = {
      container: void 0
    };
  }
  componentDidMount() {
    const container = document.createElement("div");
    const target = this.getTargetElement();
    this.setState({ container });
    target.appendChild(container);
  }
  componentWillUnmount() {
    const target = this.getTargetElement();
    if (this.state.container) {
      target.removeChild(this.state.container);
    }
  }
  getTargetElement() {
    const appendTo = this.props.appendTo;
    if (typeof appendTo === "function") {
      return appendTo();
    }
    return appendTo || document.body;
  }
  render() {
    const _a = this.props, { className, children, isToast, isLiveRegion, onOverflowClick, overflowMessage } = _a, props = __rest(_a, ["className", "children", "isToast", "isLiveRegion", "onOverflowClick", "overflowMessage"]);
    const alertGroup = React26.createElement(AlertGroupInline, Object.assign({ onOverflowClick, className, isToast, isLiveRegion, overflowMessage }, props), children);
    if (!this.props.isToast) {
      return alertGroup;
    }
    const container = this.state.container;
    if (!canUseDOM || !container) {
      return null;
    }
    return ReactDOM2.createPortal(alertGroup, container);
  }
};
AlertGroup.displayName = "AlertGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncher.js
var React34 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/AppLauncher/app-launcher.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/AppLauncher/app-launcher.css";
var app_launcher_default = {
  "appLauncher": "pf-c-app-launcher",
  "appLauncherGroup": "pf-c-app-launcher__group",
  "appLauncherGroupTitle": "pf-c-app-launcher__group-title",
  "appLauncherMenu": "pf-c-app-launcher__menu",
  "appLauncherMenuItem": "pf-c-app-launcher__menu-item",
  "appLauncherMenuItemExternalIcon": "pf-c-app-launcher__menu-item-external-icon",
  "appLauncherMenuItemIcon": "pf-c-app-launcher__menu-item-icon",
  "appLauncherMenuSearch": "pf-c-app-launcher__menu-search",
  "appLauncherMenuWrapper": "pf-c-app-launcher__menu-wrapper",
  "appLauncherToggle": "pf-c-app-launcher__toggle",
  "divider": "pf-c-divider",
  "modifiers": {
    "expanded": "pf-m-expanded",
    "active": "pf-m-active",
    "alignRight": "pf-m-align-right",
    "top": "pf-m-top",
    "static": "pf-m-static",
    "favorite": "pf-m-favorite",
    "focus": "pf-m-focus",
    "disabled": "pf-m-disabled",
    "external": "pf-m-external",
    "link": "pf-m-link",
    "action": "pf-m-action"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherGroup.js
var React27 = __toESM(require_react());
var ApplicationLauncherGroup = (_a) => {
  var { children } = _a, props = __rest(_a, ["children"]);
  return React27.createElement(DropdownGroup, Object.assign({}, props), children);
};
ApplicationLauncherGroup.displayName = "ApplicationLauncherGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherItem.js
var React33 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherContent.js
var React31 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherIcon.js
var React28 = __toESM(require_react());
var ApplicationLauncherIcon = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    children
  } = _a, props = __rest(_a, ["className", "children"]);
  return React28.createElement("span", Object.assign({ className: css(app_launcher_default.appLauncherMenuItemIcon) }, props), children);
};
ApplicationLauncherIcon.displayName = "ApplicationLauncherIcon";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherText.js
var React29 = __toESM(require_react());
var ApplicationLauncherText = (_a) => {
  var { className = "", children } = _a, props = __rest(_a, ["className", "children"]);
  return React29.createElement("span", Object.assign({ className: css("pf-c-app-launcher__menu-item-text", className) }, props), children);
};
ApplicationLauncherText.displayName = "ApplicationLauncherText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherItemContext.js
var React30 = __toESM(require_react());
var ApplicationLauncherItemContext = React30.createContext({ isExternal: false, icon: null });

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherContent.js
var ApplicationLauncherContent = ({ children }) => React31.createElement(ApplicationLauncherItemContext.Consumer, null, ({ isExternal, icon }) => React31.createElement(
  React31.Fragment,
  null,
  icon && React31.createElement(ApplicationLauncherIcon, null, icon),
  icon ? React31.createElement(ApplicationLauncherText, null, children) : children,
  isExternal && React31.createElement(
    React31.Fragment,
    null,
    React31.createElement(
      "span",
      { className: css(app_launcher_default.appLauncherMenuItemExternalIcon) },
      React31.createElement(external_link_alt_icon_default, null)
    ),
    React31.createElement("span", { className: css(accessibility_default.screenReader) }, "(opens new window)")
  )
));
ApplicationLauncherContent.displayName = "ApplicationLauncherContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherContext.js
var React32 = __toESM(require_react());
var ApplicationLauncherContext = React32.createContext({
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onFavorite: (itemId, isFavorite) => {
  }
});

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncherItem.js
var ApplicationLauncherItem = (_a) => {
  var { className = "", id, children, icon = null, isExternal = false, href, tooltip = null, tooltipProps = null, component = "a", isFavorite = null, ariaIsFavoriteLabel = "starred", ariaIsNotFavoriteLabel = "not starred", customChild, enterTriggersArrowDown = false } = _a, props = __rest(_a, ["className", "id", "children", "icon", "isExternal", "href", "tooltip", "tooltipProps", "component", "isFavorite", "ariaIsFavoriteLabel", "ariaIsNotFavoriteLabel", "customChild", "enterTriggersArrowDown"]);
  return React33.createElement(
    ApplicationLauncherItemContext.Provider,
    { value: { isExternal, icon } },
    React33.createElement(ApplicationLauncherContext.Consumer, null, ({ onFavorite }) => React33.createElement(DropdownItem, Object.assign({ id, component, href: href || null, className: css(isExternal && app_launcher_default.modifiers.external, isFavorite !== null && app_launcher_default.modifiers.link, className), listItemClassName: css(onFavorite && app_launcher_default.appLauncherMenuWrapper, isFavorite && app_launcher_default.modifiers.favorite), tooltip, tooltipProps }, enterTriggersArrowDown === true && { enterTriggersArrowDown }, customChild && { customChild }, isFavorite !== null && {
      additionalChild: React33.createElement(
        "button",
        { className: css(app_launcher_default.appLauncherMenuItem, app_launcher_default.modifiers.action), "aria-label": isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel, onClick: () => {
          onFavorite((id || getUniqueId("app-launcher-option")).replace("favorite-", ""), isFavorite);
        } },
        React33.createElement(star_icon_default, null)
      )
    }, props), children && React33.createElement(ApplicationLauncherContent, null, children)))
  );
};
ApplicationLauncherItem.displayName = "ApplicationLauncherItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ApplicationLauncher/ApplicationLauncher.js
var ApplicationLauncher = class _ApplicationLauncher extends React34.Component {
  constructor() {
    super(...arguments);
    this.createSearchBox = () => {
      const { onSearch, searchPlaceholderText, searchProps } = this.props;
      return React34.createElement(
        "div",
        { key: "search", className: css(app_launcher_default.appLauncherMenuSearch) },
        React34.createElement(ApplicationLauncherItem, { customChild: React34.createElement("input", Object.assign({ type: "search", className: css(form_control_default.formControl), placeholder: searchPlaceholderText, onChange: (e) => onSearch(e.target.value) }, searchProps)) })
      );
    };
  }
  render() {
    const _a = this.props, {
      "aria-label": ariaLabel,
      isOpen,
      onToggle,
      toggleIcon,
      toggleId,
      onSelect,
      isDisabled,
      className,
      isGrouped,
      favorites,
      onFavorite,
      onSearch,
      items,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      searchPlaceholderText,
      searchProps,
      ref,
      /* eslint-enable @typescript-eslint/no-unused-vars */
      favoritesLabel,
      searchNoResultsText,
      menuAppendTo,
      removeFindDomNode,
      zIndex = 9999
    } = _a, props = __rest(_a, ["aria-label", "isOpen", "onToggle", "toggleIcon", "toggleId", "onSelect", "isDisabled", "className", "isGrouped", "favorites", "onFavorite", "onSearch", "items", "searchPlaceholderText", "searchProps", "ref", "favoritesLabel", "searchNoResultsText", "menuAppendTo", "removeFindDomNode", "zIndex"]);
    let renderableItems = [];
    if (onFavorite) {
      let favoritesGroup = [];
      let renderableFavorites = [];
      if (favorites.length > 0) {
        renderableFavorites = createRenderableFavorites(items, isGrouped, favorites, true);
        favoritesGroup = [
          React34.createElement(
            ApplicationLauncherGroup,
            { key: "favorites", label: favoritesLabel },
            renderableFavorites,
            React34.createElement(ApplicationLauncherSeparator, { key: "separator" })
          )
        ];
      }
      if (renderableFavorites.length > 0) {
        renderableItems = favoritesGroup.concat(extendItemsWithFavorite(items, isGrouped, favorites));
      } else {
        renderableItems = extendItemsWithFavorite(items, isGrouped, favorites);
      }
    } else {
      renderableItems = items;
    }
    if (items.length === 0) {
      renderableItems = [
        React34.createElement(
          ApplicationLauncherGroup,
          { key: "no-results-group" },
          React34.createElement(ApplicationLauncherItem, { key: "no-results" }, searchNoResultsText)
        )
      ];
    }
    if (onSearch) {
      renderableItems = [this.createSearchBox(), ...renderableItems];
    }
    return React34.createElement(
      ApplicationLauncherContext.Provider,
      { value: { onFavorite } },
      React34.createElement(
        DropdownContext.Provider,
        { value: {
          onSelect,
          menuClass: app_launcher_default.appLauncherMenu,
          itemClass: app_launcher_default.appLauncherMenuItem,
          toggleClass: app_launcher_default.appLauncherToggle,
          baseClass: app_launcher_default.appLauncher,
          baseComponent: "nav",
          sectionClass: app_launcher_default.appLauncherGroup,
          sectionTitleClass: app_launcher_default.appLauncherGroupTitle,
          sectionComponent: "section",
          disabledClass: app_launcher_default.modifiers.disabled,
          ouiaComponentType: _ApplicationLauncher.displayName
        } },
        React34.createElement(DropdownWithContext, Object.assign({}, props, { dropdownItems: renderableItems, isOpen, className, "aria-label": ariaLabel, menuAppendTo, removeFindDomNode, zIndex, toggle: React34.createElement(DropdownToggle, { id: toggleId, toggleIndicator: null, isOpen, onToggle, isDisabled, "aria-label": ariaLabel }, toggleIcon), isGrouped }))
      )
    );
  }
};
ApplicationLauncher.displayName = "ApplicationLauncher";
ApplicationLauncher.defaultProps = {
  className: "",
  isDisabled: false,
  direction: DropdownDirection.down,
  favorites: [],
  items: [],
  isOpen: false,
  position: DropdownPosition.left,
  /* eslint-disable @typescript-eslint/no-unused-vars */
  onSelect: (_event) => void 0,
  onToggle: (_value) => void 0,
  /* eslint-enable @typescript-eslint/no-unused-vars */
  "aria-label": "Application launcher",
  isGrouped: false,
  toggleIcon: React34.createElement(th_icon_default, null),
  searchPlaceholderText: "Filter by name...",
  searchNoResultsText: "No results found",
  favoritesLabel: "Favorites",
  menuAppendTo: "inline",
  removeFindDomNode: false
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Avatar/Avatar.js
var React35 = __toESM(require_react());
var Avatar = (_a) => {
  var { className = "", src = "", alt, border, size } = _a, props = __rest(_a, ["className", "src", "alt", "border", "size"]);
  return React35.createElement("img", Object.assign({ src, alt, className: css(avatar_default.avatar, avatar_default.modifiers[size], border === "light" && avatar_default.modifiers.light, border === "dark" && avatar_default.modifiers.dark, className) }, props));
};
Avatar.displayName = "Avatar";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/BackToTop/BackToTop.js
var React36 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/BackToTop/back-to-top.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/BackToTop/back-to-top.css";
var back_to_top_default = {
  "backToTop": "pf-c-back-to-top",
  "button": "pf-c-button",
  "modifiers": {
    "hidden": "pf-m-hidden"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/BackToTop/BackToTop.js
var BackToTopBase = (_a) => {
  var { className, title = "Back to top", innerRef, scrollableSelector, isAlwaysVisible = false } = _a, props = __rest(_a, ["className", "title", "innerRef", "scrollableSelector", "isAlwaysVisible"]);
  const [visible, setVisible] = React36.useState(isAlwaysVisible);
  React36.useEffect(() => {
    setVisible(isAlwaysVisible);
  }, [isAlwaysVisible]);
  const [scrollElement, setScrollElement] = React36.useState(null);
  const toggleVisible = () => {
    const scrolled = scrollElement.scrollY ? scrollElement.scrollY : scrollElement.scrollTop;
    if (!isAlwaysVisible) {
      if (scrolled > 400) {
        setVisible(true);
      } else {
        setVisible(false);
      }
    }
  };
  React36.useEffect(() => {
    const hasScrollSpy = Boolean(scrollableSelector);
    if (hasScrollSpy) {
      const scrollEl = document.querySelector(scrollableSelector);
      if (!canUseDOM || !(scrollEl instanceof HTMLElement)) {
        return;
      }
      setScrollElement(scrollEl);
      scrollEl.addEventListener("scroll", toggleVisible);
      return () => {
        scrollEl.removeEventListener("scroll", toggleVisible);
      };
    } else {
      if (!canUseDOM) {
        return;
      }
      const scrollEl = window;
      setScrollElement(scrollEl);
      scrollEl.addEventListener("scroll", toggleVisible);
      return () => {
        scrollEl.removeEventListener("scroll", toggleVisible);
      };
    }
  }, [scrollableSelector, toggleVisible]);
  const handleClick = () => {
    scrollElement.scrollTo({ top: 0, behavior: "smooth" });
  };
  return React36.createElement(
    "div",
    Object.assign({ className: css(back_to_top_default.backToTop, !visible && back_to_top_default.modifiers.hidden, className), ref: innerRef, onClick: handleClick }, props),
    React36.createElement(Button, { variant: "primary", icon: React36.createElement(angle_up_icon_default, { "aria-hidden": "true" }), iconPosition: "right" }, title)
  );
};
var BackToTop = React36.forwardRef((props, ref) => React36.createElement(BackToTopBase, Object.assign({ innerRef: ref }, props)));
BackToTop.displayName = "BackToTop";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/BackgroundImage/BackgroundImage.js
var React37 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_background_image_BackgroundImage.js
var c_background_image_BackgroundImage = {
  "name": "--pf-c-background-image--BackgroundImage",
  "value": 'url("../../assets/images/pfbg_576.jpg")',
  "var": "var(--pf-c-background-image--BackgroundImage)"
};
var c_background_image_BackgroundImage_default = c_background_image_BackgroundImage;

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_background_image_BackgroundImage_2x.js
var c_background_image_BackgroundImage_2x = {
  "name": "--pf-c-background-image--BackgroundImage-2x",
  "value": 'url("../../assets/images/pfbg_576@2x.jpg")',
  "var": "var(--pf-c-background-image--BackgroundImage-2x)"
};
var c_background_image_BackgroundImage_2x_default = c_background_image_BackgroundImage_2x;

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_background_image_BackgroundImage_sm.js
var c_background_image_BackgroundImage_sm = {
  "name": "--pf-c-background-image--BackgroundImage--sm",
  "value": 'url("../../assets/images/pfbg_768.jpg")',
  "var": "var(--pf-c-background-image--BackgroundImage--sm)"
};
var c_background_image_BackgroundImage_sm_default = c_background_image_BackgroundImage_sm;

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_background_image_BackgroundImage_sm_2x.js
var c_background_image_BackgroundImage_sm_2x = {
  "name": "--pf-c-background-image--BackgroundImage--sm-2x",
  "value": 'url("../../assets/images/pfbg_768@2x.jpg")',
  "var": "var(--pf-c-background-image--BackgroundImage--sm-2x)"
};
var c_background_image_BackgroundImage_sm_2x_default = c_background_image_BackgroundImage_sm_2x;

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_background_image_BackgroundImage_lg.js
var c_background_image_BackgroundImage_lg = {
  "name": "--pf-c-background-image--BackgroundImage--lg",
  "value": 'url("../../assets/images/pfbg_2000.jpg")',
  "var": "var(--pf-c-background-image--BackgroundImage--lg)"
};
var c_background_image_BackgroundImage_lg_default = c_background_image_BackgroundImage_lg;

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_background_image_Filter.js
var c_background_image_Filter = {
  "name": "--pf-c-background-image--Filter",
  "value": 'url("#image_overlay")',
  "var": "var(--pf-c-background-image--Filter)"
};
var c_background_image_Filter_default = c_background_image_Filter;

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/BackgroundImage/background-image.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/BackgroundImage/background-image.css";
var background_image_default = {
  "backgroundImage": "pf-c-background-image",
  "backgroundImageFilter": "pf-c-background-image__filter"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/BackgroundImage/BackgroundImage.js
var defaultFilter = React37.createElement(
  "filter",
  null,
  React37.createElement("feColorMatrix", { type: "matrix", values: "1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 1 0" }),
  React37.createElement(
    "feComponentTransfer",
    { colorInterpolationFilters: "sRGB", result: "duotone" },
    React37.createElement("feFuncR", { type: "table", tableValues: "0.086274509803922 0.43921568627451" }),
    React37.createElement("feFuncG", { type: "table", tableValues: "0.086274509803922 0.43921568627451" }),
    React37.createElement("feFuncB", { type: "table", tableValues: "0.086274509803922 0.43921568627451" }),
    React37.createElement("feFuncA", { type: "table", tableValues: "0 1" })
  )
);
var filterCounter = 0;
var BackgroundImage = (_a) => {
  var { className, src, filter = defaultFilter } = _a, props = __rest(_a, ["className", "src", "filter"]);
  const getUrlValue = (size) => {
    if (typeof src === "string") {
      return `url(${src})`;
    } else if (typeof src === "object") {
      return `url(${src[size]})`;
    }
    return "";
  };
  const filterNum = React37.useMemo(() => filterCounter++, []);
  const filterId = `patternfly-background-image-filter-overlay${filterNum}`;
  const style = {
    [c_background_image_BackgroundImage_default.name]: getUrlValue("xs"),
    [c_background_image_BackgroundImage_2x_default.name]: getUrlValue("xs2x"),
    [c_background_image_BackgroundImage_sm_default.name]: getUrlValue("sm"),
    [c_background_image_BackgroundImage_sm_2x_default.name]: getUrlValue("sm2x"),
    [c_background_image_BackgroundImage_lg_default.name]: getUrlValue("lg"),
    [c_background_image_Filter_default.name]: `url(#${filterId})`
  };
  return React37.createElement(
    "div",
    Object.assign({ className: css(background_image_default.backgroundImage, className), style }, props),
    React37.createElement("svg", { xmlns: "http://www.w3.org/2000/svg", className: "pf-c-background-image__filter", width: "0", height: "0" }, React37.cloneElement(filter, { id: filterId }))
  );
};
BackgroundImage.displayName = "BackgroundImage";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Banner/Banner.js
var React38 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Banner/banner.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Banner/banner.css";
var banner_default = {
  "banner": "pf-c-banner",
  "button": "pf-c-button",
  "card": "pf-c-card",
  "modifiers": {
    "warning": "pf-m-warning",
    "gold": "pf-m-gold",
    "info": "pf-m-info",
    "blue": "pf-m-blue",
    "danger": "pf-m-danger",
    "red": "pf-m-red",
    "success": "pf-m-success",
    "green": "pf-m-green",
    "sticky": "pf-m-sticky",
    "disabled": "pf-m-disabled",
    "inline": "pf-m-inline"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Banner/Banner.js
var Banner = (_a) => {
  var { children, className, variant = "default", screenReaderText, isSticky = false } = _a, props = __rest(_a, ["children", "className", "variant", "screenReaderText", "isSticky"]);
  return React38.createElement(
    "div",
    Object.assign({ className: css(banner_default.banner, banner_default.modifiers[variant], isSticky && banner_default.modifiers.sticky, className) }, props),
    screenReaderText && React38.createElement("span", { className: "pf-u-screen-reader" }, screenReaderText),
    children
  );
};
Banner.displayName = "Banner";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Brand/Brand.js
var React39 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Brand/brand.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Brand/brand.css";
var brand_default = {
  "brand": "pf-c-brand",
  "modifiers": {
    "picture": "pf-m-picture"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Brand/Brand.js
var Brand = (_a) => {
  var { className = "", src = "", alt, children, widths, heights, style } = _a, props = __rest(_a, ["className", "src", "alt", "children", "widths", "heights", "style"]);
  if (children !== void 0 && widths !== void 0) {
    style = Object.assign(Object.assign({}, style), setBreakpointCssVars(widths, "--pf-c-brand--Width"));
  }
  if (children !== void 0 && heights !== void 0) {
    style = Object.assign(Object.assign({}, style), setBreakpointCssVars(heights, "--pf-c-brand--Height"));
  }
  return (
    /** the brand component currently contains no styling the 'pf-c-brand' string will be used for the className */
    children !== void 0 ? React39.createElement(
      "picture",
      Object.assign({ className: css(brand_default.brand, brand_default.modifiers.picture, className), style }, props),
      children,
      React39.createElement("img", { src, alt })
    ) : React39.createElement("img", Object.assign({}, props, { className: css(brand_default.brand, className), src, alt }))
  );
};
Brand.displayName = "Brand";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/Breadcrumb.js
var React40 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.css";
var breadcrumb_default = {
  "breadcrumb": "pf-c-breadcrumb",
  "breadcrumbDropdown": "pf-c-breadcrumb__dropdown",
  "breadcrumbHeading": "pf-c-breadcrumb__heading",
  "breadcrumbItem": "pf-c-breadcrumb__item",
  "breadcrumbItemDivider": "pf-c-breadcrumb__item-divider",
  "breadcrumbLink": "pf-c-breadcrumb__link",
  "breadcrumbList": "pf-c-breadcrumb__list",
  "dropdownToggle": "pf-c-dropdown__toggle",
  "modifiers": {
    "current": "pf-m-current",
    "overpassFont": "pf-m-overpass-font"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/Breadcrumb.js
var Breadcrumb = (_a) => {
  var { children = null, className = "", "aria-label": ariaLabel = "Breadcrumb", ouiaId, ouiaSafe = true } = _a, props = __rest(_a, ["children", "className", "aria-label", "ouiaId", "ouiaSafe"]);
  const ouiaProps = useOUIAProps(Breadcrumb.displayName, ouiaId, ouiaSafe);
  return React40.createElement(
    "nav",
    Object.assign({}, props, { "aria-label": ariaLabel, className: css(breadcrumb_default.breadcrumb, className) }, ouiaProps),
    React40.createElement("ol", { className: breadcrumb_default.breadcrumbList }, React40.Children.map(children, (child, index) => {
      const showDivider = index > 0;
      if (React40.isValidElement(child)) {
        return React40.cloneElement(child, { showDivider });
      }
      return child;
    }))
  );
};
Breadcrumb.displayName = "Breadcrumb";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/BreadcrumbItem.js
var React41 = __toESM(require_react());
var BreadcrumbItem = (_a) => {
  var { children = null, className: classNameProp = "", to = void 0, isActive = false, isDropdown = false, showDivider, target = void 0, component = "a", render = void 0 } = _a, props = __rest(_a, ["children", "className", "to", "isActive", "isDropdown", "showDivider", "target", "component", "render"]);
  const Component47 = component;
  const ariaCurrent = isActive ? "page" : void 0;
  const className = css(breadcrumb_default.breadcrumbLink, isActive && breadcrumb_default.modifiers.current);
  return React41.createElement(
    "li",
    Object.assign({}, props, { className: css(breadcrumb_default.breadcrumbItem, classNameProp) }),
    showDivider && React41.createElement(
      "span",
      { className: breadcrumb_default.breadcrumbItemDivider },
      React41.createElement(angle_right_icon_default, null)
    ),
    component === "button" && React41.createElement("button", { className, "aria-current": ariaCurrent, type: "button" }, children),
    isDropdown && React41.createElement("span", { className: css(breadcrumb_default.breadcrumbDropdown) }, children),
    render && render({ className, ariaCurrent }),
    to && !render && React41.createElement(Component47, { href: to, target, className, "aria-current": ariaCurrent }, children),
    !to && component !== "button" && !isDropdown && children
  );
};
BreadcrumbItem.displayName = "BreadcrumbItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/BreadcrumbHeading.js
var React42 = __toESM(require_react());
var BreadcrumbHeading = (_a) => {
  var { children = null, className = "", to = void 0, target = void 0, component = "a", showDivider } = _a, props = __rest(_a, ["children", "className", "to", "target", "component", "showDivider"]);
  const Component47 = component;
  return React42.createElement(
    "li",
    Object.assign({}, props, { className: css(breadcrumb_default.breadcrumbItem, className) }),
    showDivider && React42.createElement(
      "span",
      { className: breadcrumb_default.breadcrumbItemDivider },
      React42.createElement(angle_right_icon_default, null)
    ),
    React42.createElement(
      "h1",
      { className: breadcrumb_default.breadcrumbHeading },
      !to && component === "button" && React42.createElement("button", { className: css(breadcrumb_default.breadcrumbLink, breadcrumb_default.modifiers.current), "aria-current": true, type: "button" }, children),
      to && React42.createElement(Component47, { href: to, target, className: css(breadcrumb_default.breadcrumbLink, breadcrumb_default.modifiers.current), "aria-current": "page" }, children),
      !to && component !== "button" && React42.createElement(React42.Fragment, null, children)
    )
  );
};
BreadcrumbHeading.displayName = "BreadcrumbHeading";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/CalendarMonth/CalendarMonth.js
var import_react2 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/InputGroup/InputGroup.js
var React47 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/InputGroup/input-group.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/InputGroup/input-group.css";
var input_group_default = {
  "formControl": "pf-c-form-control",
  "inputGroup": "pf-c-input-group",
  "inputGroupText": "pf-c-input-group__text",
  "modifiers": {
    "plain": "pf-m-plain",
    "disabled": "pf-m-disabled"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/FormSelect/FormSelect.js
var React43 = __toESM(require_react());
var FormSelect = class _FormSelect extends React43.Component {
  constructor(props) {
    super(props);
    this.handleChange = (event) => {
      this.props.onChange(event.currentTarget.value, event);
    };
    if (!props.id && !props["aria-label"]) {
      console.error("FormSelect requires either an id or aria-label to be specified");
    }
    this.state = {
      ouiaStateId: getDefaultOUIAId(_FormSelect.displayName, props.validated)
    };
  }
  render() {
    const _a = this.props, { children, className, value, validated, isDisabled, isRequired, isIconSprite, ouiaId, ouiaSafe } = _a, props = __rest(_a, ["children", "className", "value", "validated", "isDisabled", "isRequired", "isIconSprite", "ouiaId", "ouiaSafe"]);
    const selectedOption = React43.Children.toArray(children).find((option) => option.props.value === value);
    const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;
    return React43.createElement("select", Object.assign({}, props, { className: css(form_control_default.formControl, isIconSprite && form_control_default.modifiers.iconSprite, className, validated === ValidatedOptions.success && form_control_default.modifiers.success, validated === ValidatedOptions.warning && form_control_default.modifiers.warning, isSelectedPlaceholder && form_control_default.modifiers.placeholder), "aria-invalid": validated === ValidatedOptions.error }, getOUIAProps(_FormSelect.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe), { onChange: this.handleChange, disabled: isDisabled, required: isRequired, value }), children);
  }
};
FormSelect.displayName = "FormSelect";
FormSelect.defaultProps = {
  className: "",
  value: "",
  validated: "default",
  isDisabled: false,
  isRequired: false,
  isIconSprite: false,
  onBlur: () => void 0,
  onFocus: () => void 0,
  onChange: () => void 0,
  ouiaSafe: true
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/FormSelect/FormSelectOption.js
var React44 = __toESM(require_react());
var FormSelectOption = (_a) => {
  var {
    className = "",
    value = "",
    isDisabled = false,
    label,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isPlaceholder = false
  } = _a, props = __rest(_a, ["className", "value", "isDisabled", "label", "isPlaceholder"]);
  return React44.createElement("option", Object.assign({}, props, { className, value, disabled: isDisabled }), label);
};
FormSelectOption.displayName = "FormSelectOption";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/FormSelect/FormSelectOptionGroup.js
var React45 = __toESM(require_react());
var FormSelectOptionGroup = (_a) => {
  var { children = null, className = "", isDisabled = false, label } = _a, props = __rest(_a, ["children", "className", "isDisabled", "label"]);
  return React45.createElement("optgroup", Object.assign({}, props, { disabled: !!isDisabled, className, label }), children);
};
FormSelectOptionGroup.displayName = "FormSelectOptionGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TextArea/TextArea.js
var React46 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_form_control_textarea_Height.js
var c_form_control_textarea_Height = {
  "name": "--pf-c-form-control--textarea--Height",
  "value": "auto",
  "var": "var(--pf-c-form-control--textarea--Height)"
};
var c_form_control_textarea_Height_default = c_form_control_textarea_Height;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TextArea/TextArea.js
var TextAreResizeOrientation;
(function(TextAreResizeOrientation2) {
  TextAreResizeOrientation2["horizontal"] = "horizontal";
  TextAreResizeOrientation2["vertical"] = "vertical";
  TextAreResizeOrientation2["both"] = "both";
})(TextAreResizeOrientation || (TextAreResizeOrientation = {}));
var TextAreaReadOnlyVariant;
(function(TextAreaReadOnlyVariant2) {
  TextAreaReadOnlyVariant2["default"] = "default";
  TextAreaReadOnlyVariant2["plain"] = "plain";
})(TextAreaReadOnlyVariant || (TextAreaReadOnlyVariant = {}));
var TextAreaBase = class extends React46.Component {
  constructor(props) {
    super(props);
    this.inputRef = React46.createRef();
    this.setAutoHeight = (field) => {
      field.style.setProperty(c_form_control_textarea_Height_default.name, "inherit");
      const computed = window.getComputedStyle(field);
      const height = parseInt(computed.getPropertyValue("border-top-width")) + parseInt(computed.getPropertyValue("padding-top")) + field.scrollHeight + parseInt(computed.getPropertyValue("padding-bottom")) + parseInt(computed.getPropertyValue("border-bottom-width"));
      field.style.setProperty(c_form_control_textarea_Height_default.name, `${height}px`);
    };
    this.handleChange = (event) => {
      const field = event.currentTarget;
      if (this.props.autoResize && canUseDOM) {
        this.setAutoHeight(field);
      }
      if (this.props.onChange) {
        this.props.onChange(field.value, event);
      }
    };
    if (!props.id && !props["aria-label"]) {
      console.error("TextArea: TextArea requires either an id or aria-label to be specified");
    }
  }
  componentDidMount() {
    const inputRef = this.props.innerRef || this.inputRef;
    if (this.props.autoResize && canUseDOM) {
      const field = inputRef.current;
      this.setAutoHeight(field);
    }
  }
  render() {
    const _a = this.props, {
      className,
      value,
      validated,
      isRequired,
      isDisabled,
      isIconSprite,
      isReadOnly,
      readOnlyVariant,
      resizeOrientation,
      innerRef,
      disabled,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      autoResize,
      onChange
    } = _a, props = __rest(_a, ["className", "value", "validated", "isRequired", "isDisabled", "isIconSprite", "isReadOnly", "readOnlyVariant", "resizeOrientation", "innerRef", "disabled", "autoResize", "onChange"]);
    const orientation = `resize${capitalize(resizeOrientation)}`;
    return React46.createElement("textarea", Object.assign({ className: css(form_control_default.formControl, isIconSprite && form_control_default.modifiers.iconSprite, readOnlyVariant === "plain" && form_control_default.modifiers.plain, className, resizeOrientation !== TextAreResizeOrientation.both && form_control_default.modifiers[orientation], validated === ValidatedOptions.success && form_control_default.modifiers.success, validated === ValidatedOptions.warning && form_control_default.modifiers.warning), onChange: this.handleChange }, typeof this.props.defaultValue !== "string" && { value }, { "aria-invalid": validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled || disabled, readOnly: !!readOnlyVariant || isReadOnly, ref: innerRef || this.inputRef }, props));
  }
};
TextAreaBase.displayName = "TextArea";
TextAreaBase.defaultProps = {
  innerRef: React46.createRef(),
  className: "",
  isRequired: false,
  isDisabled: false,
  isIconSprite: false,
  validated: "default",
  resizeOrientation: "both",
  "aria-label": null
};
var TextArea = React46.forwardRef((props, ref) => React46.createElement(TextAreaBase, Object.assign({}, props, { innerRef: ref })));
TextArea.displayName = "TextArea";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/InputGroup/InputGroup.js
var InputGroup = (_a) => {
  var { className = "", children, innerRef } = _a, props = __rest(_a, ["className", "children", "innerRef"]);
  const formCtrls = [FormSelect, TextArea, TextInput].map((comp) => comp.displayName);
  const idItem = React47.Children.toArray(children).find((child) => !formCtrls.includes(child.type.displayName) && child.props.id);
  const ref = React47.useRef(null);
  const inputGroupRef = innerRef || ref;
  return React47.createElement("div", Object.assign({ ref: inputGroupRef, className: css(input_group_default.inputGroup, className) }, props), idItem ? React47.Children.map(children, (child) => !formCtrls.includes(child.type.displayName) || child.props["aria-describedby"] ? child : React47.cloneElement(child, {
    "aria-describedby": child.props["aria-describedby"] === "" ? void 0 : idItem.props.id
  })) : children);
};
InputGroup.displayName = "InputGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/InputGroup/InputGroupText.js
var React48 = __toESM(require_react());
var InputGroupTextVariant;
(function(InputGroupTextVariant2) {
  InputGroupTextVariant2["default"] = "default";
  InputGroupTextVariant2["plain"] = "plain";
})(InputGroupTextVariant || (InputGroupTextVariant = {}));
var InputGroupText = (_a) => {
  var { className = "", component = "span", children, variant = InputGroupTextVariant.default } = _a, props = __rest(_a, ["className", "component", "children", "variant"]);
  const Component47 = component;
  return React48.createElement(Component47, Object.assign({ className: css(input_group_default.inputGroupText, variant === InputGroupTextVariant.plain && input_group_default.modifiers.plain, className) }, props), children);
};
InputGroupText.displayName = "InputGroupText";

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/CalendarMonth/calendar-month.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/CalendarMonth/calendar-month.css";
var calendar_month_default = {
  "calendarMonth": "pf-c-calendar-month",
  "calendarMonthCalendar": "pf-c-calendar-month__calendar",
  "calendarMonthDate": "pf-c-calendar-month__date",
  "calendarMonthDatesCell": "pf-c-calendar-month__dates-cell",
  "calendarMonthDatesRow": "pf-c-calendar-month__dates-row",
  "calendarMonthDay": "pf-c-calendar-month__day",
  "calendarMonthDays": "pf-c-calendar-month__days",
  "calendarMonthHeader": "pf-c-calendar-month__header",
  "calendarMonthHeaderMonth": "pf-c-calendar-month__header-month",
  "calendarMonthHeaderNavControl": "pf-c-calendar-month__header-nav-control",
  "calendarMonthHeaderYear": "pf-c-calendar-month__header-year",
  "modifiers": {
    "prevMonth": "pf-m-prev-month",
    "nextMonth": "pf-m-next-month",
    "current": "pf-m-current",
    "inRange": "pf-m-in-range",
    "startRange": "pf-m-start-range",
    "endRange": "pf-m-end-range",
    "adjacentMonth": "pf-m-adjacent-month",
    "selected": "pf-m-selected",
    "disabled": "pf-m-disabled",
    "hover": "pf-m-hover",
    "focus": "pf-m-focus"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/CalendarMonth/CalendarMonth.js
var Weekday;
(function(Weekday2) {
  Weekday2[Weekday2["Sunday"] = 0] = "Sunday";
  Weekday2[Weekday2["Monday"] = 1] = "Monday";
  Weekday2[Weekday2["Tuesday"] = 2] = "Tuesday";
  Weekday2[Weekday2["Wednesday"] = 3] = "Wednesday";
  Weekday2[Weekday2["Thursday"] = 4] = "Thursday";
  Weekday2[Weekday2["Friday"] = 5] = "Friday";
  Weekday2[Weekday2["Saturday"] = 6] = "Saturday";
})(Weekday || (Weekday = {}));
var yearFormat = (date) => date.getFullYear();
var buildCalendar = (year, month, weekStart, validators) => {
  const defaultDate = new Date(year, month);
  const firstDayOfWeek = new Date(defaultDate);
  firstDayOfWeek.setDate(firstDayOfWeek.getDate() - firstDayOfWeek.getDay() + weekStart);
  const calendarWeeks = [];
  if (firstDayOfWeek.getMonth() === defaultDate.getMonth() && firstDayOfWeek.getDate() !== 1) {
    firstDayOfWeek.setDate(firstDayOfWeek.getDate() - 7);
  }
  for (let i = 0; i < 6; i++) {
    const week = [];
    for (let j = 0; j < 7; j++) {
      const date = new Date(firstDayOfWeek);
      week.push({
        date,
        isValid: validators.every((validator) => validator(date))
      });
      firstDayOfWeek.setDate(firstDayOfWeek.getDate() + 1);
    }
    calendarWeeks.push(week);
    if (firstDayOfWeek.getMonth() !== defaultDate.getMonth()) {
      break;
    }
  }
  return calendarWeeks;
};
var isSameDate = (d1, d2) => d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate();
var today = /* @__PURE__ */ new Date();
var CalendarMonth = (_a) => {
  var {
    date: dateProp,
    locale = void 0,
    monthFormat = (date) => date.toLocaleDateString(locale, { month: "long" }),
    weekdayFormat = (date) => date.toLocaleDateString(locale, { weekday: "narrow" }),
    longWeekdayFormat = (date) => date.toLocaleDateString(locale, { weekday: "long" }),
    dayFormat = (date) => date.getDate(),
    weekStart = 0,
    // Use the American Sunday as a default
    onChange = () => {
    },
    validators = [() => true],
    className,
    onSelectToggle = () => {
    },
    onMonthChange = () => {
    },
    rangeStart,
    prevMonthAriaLabel = "Previous month",
    nextMonthAriaLabel = "Next month",
    yearInputAriaLabel = "Select year",
    cellAriaLabel,
    isDateFocused = false,
    inlineProps
  } = _a, props = __rest(_a, ["date", "locale", "monthFormat", "weekdayFormat", "longWeekdayFormat", "dayFormat", "weekStart", "onChange", "validators", "className", "onSelectToggle", "onMonthChange", "rangeStart", "prevMonthAriaLabel", "nextMonthAriaLabel", "yearInputAriaLabel", "cellAriaLabel", "isDateFocused", "inlineProps"]);
  const longMonths = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((monthNum) => new Date(1990, monthNum)).map(monthFormat);
  const [isSelectOpen, setIsSelectOpen] = import_react2.default.useState(false);
  const [focusedDate, setFocusedDate] = import_react2.default.useState(() => {
    const initDate = new Date(dateProp);
    if (isValidDate(initDate)) {
      return initDate;
    } else {
      if (isValidDate(rangeStart)) {
        return rangeStart;
      } else {
        return today;
      }
    }
  });
  const [hoveredDate, setHoveredDate] = import_react2.default.useState(new Date(focusedDate));
  const focusRef = import_react2.default.useRef();
  const [hiddenMonthId] = import_react2.default.useState(getUniqueId("hidden-month-span"));
  const [shouldFocus, setShouldFocus] = import_react2.default.useState(false);
  const isValidated = (date) => validators.every((validator) => validator(date));
  const focusedDateValidated = isValidated(focusedDate);
  (0, import_react2.useEffect)(() => {
    if (isValidDate(dateProp) && !isSameDate(focusedDate, dateProp)) {
      setFocusedDate(dateProp);
    } else if (!dateProp) {
      setFocusedDate(today);
    }
  }, [dateProp]);
  (0, import_react2.useEffect)(() => {
    if ((shouldFocus || isDateFocused) && focusedDateValidated && focusRef.current) {
      focusRef.current.focus();
    } else {
      setShouldFocus(true);
    }
  }, [focusedDate, isDateFocused, focusedDateValidated, focusRef]);
  const onMonthClick = (newDate, ev) => {
    setFocusedDate(newDate);
    setHoveredDate(newDate);
    setShouldFocus(false);
    onMonthChange(newDate, ev);
  };
  const onKeyDown = (ev) => {
    const newDate = new Date(focusedDate);
    if (ev.key === "ArrowUp") {
      newDate.setDate(newDate.getDate() - 7);
    } else if (ev.key === "ArrowRight") {
      newDate.setDate(newDate.getDate() + 1);
    } else if (ev.key === "ArrowDown") {
      newDate.setDate(newDate.getDate() + 7);
    } else if (ev.key === "ArrowLeft") {
      newDate.setDate(newDate.getDate() - 1);
    }
    if (newDate.getTime() !== focusedDate.getTime() && isValidated(newDate)) {
      ev.preventDefault();
      setFocusedDate(newDate);
      setHoveredDate(newDate);
      setShouldFocus(true);
    }
  };
  const addMonth = (toAdd) => {
    const newDate = new Date(focusedDate);
    newDate.setMonth(newDate.getMonth() + toAdd);
    return newDate;
  };
  const prevMonth = addMonth(-1);
  const nextMonth = addMonth(1);
  const focusedYear = focusedDate.getFullYear();
  const focusedMonth = focusedDate.getMonth();
  const calendar = import_react2.default.useMemo(() => buildCalendar(focusedYear, focusedMonth, weekStart, validators), [
    focusedYear,
    focusedMonth,
    weekStart,
    validators
  ]);
  if (!focusedDateValidated) {
    const toFocus = calendar.reduce((acc, cur) => [...acc, ...cur], []).filter(({ date, isValid }) => isValid && date.getMonth() === focusedMonth).map(({ date }) => ({ date, days: Math.abs(focusedDate.getTime() - date.getTime()) })).sort((o1, o2) => o1.days - o2.days).map(({ date }) => date)[0];
    if (toFocus) {
      setFocusedDate(toFocus);
      setHoveredDate(toFocus);
    }
  }
  const isHoveredDateValid = isValidated(hoveredDate);
  const monthFormatted = monthFormat(focusedDate);
  const yearFormatted = yearFormat(focusedDate);
  const calendarToRender = import_react2.default.createElement(
    "div",
    Object.assign({ className: css(calendar_month_default.calendarMonth, className) }, props),
    import_react2.default.createElement(
      "div",
      { className: calendar_month_default.calendarMonthHeader },
      import_react2.default.createElement(
        "div",
        { className: css(calendar_month_default.calendarMonthHeaderNavControl, calendar_month_default.modifiers.prevMonth) },
        import_react2.default.createElement(
          Button,
          { variant: "plain", "aria-label": prevMonthAriaLabel, onClick: (ev) => onMonthClick(prevMonth, ev) },
          import_react2.default.createElement(angle_left_icon_default, { "aria-hidden": true })
        )
      ),
      import_react2.default.createElement(
        InputGroup,
        null,
        import_react2.default.createElement(
          "div",
          { className: calendar_month_default.calendarMonthHeaderMonth },
          import_react2.default.createElement("span", { id: hiddenMonthId, hidden: true }, "Month"),
          import_react2.default.createElement(
            Select,
            {
              // Max width with "September"
              width: "140px",
              "aria-labelledby": hiddenMonthId,
              isOpen: isSelectOpen,
              onToggle: () => {
                setIsSelectOpen(!isSelectOpen);
                onSelectToggle(!isSelectOpen);
              },
              onSelect: (ev, monthNum) => {
                setTimeout(() => {
                  setIsSelectOpen(false);
                  onSelectToggle(false);
                  const newDate = new Date(focusedDate);
                  newDate.setMonth(Number(monthNum));
                  setFocusedDate(newDate);
                  setHoveredDate(newDate);
                  setShouldFocus(false);
                  onMonthChange(newDate, ev);
                }, 0);
              },
              variant: "single",
              selections: monthFormatted
            },
            longMonths.map((longMonth, index) => import_react2.default.createElement(SelectOption, { key: index, value: index, isSelected: longMonth === monthFormatted }, longMonth))
          )
        ),
        import_react2.default.createElement(
          "div",
          { className: calendar_month_default.calendarMonthHeaderYear },
          import_react2.default.createElement(TextInput, { "aria-label": yearInputAriaLabel, type: "number", value: yearFormatted, onChange: (year, ev) => {
            const newDate = new Date(focusedDate);
            newDate.setFullYear(+year);
            setFocusedDate(newDate);
            setHoveredDate(newDate);
            setShouldFocus(false);
            onMonthChange(newDate, ev);
          } })
        )
      ),
      import_react2.default.createElement(
        "div",
        { className: css(calendar_month_default.calendarMonthHeaderNavControl, calendar_month_default.modifiers.nextMonth) },
        import_react2.default.createElement(
          Button,
          { variant: "plain", "aria-label": nextMonthAriaLabel, onClick: (ev) => onMonthClick(nextMonth, ev) },
          import_react2.default.createElement(angle_right_icon_default, { "aria-hidden": true })
        )
      )
    ),
    import_react2.default.createElement(
      "table",
      { className: calendar_month_default.calendarMonthCalendar },
      import_react2.default.createElement(
        "thead",
        { className: calendar_month_default.calendarMonthDays },
        import_react2.default.createElement("tr", null, calendar[0].map(({ date }, index) => import_react2.default.createElement(
          "th",
          { key: index, className: calendar_month_default.calendarMonthDay, scope: "col" },
          import_react2.default.createElement("span", { className: "pf-screen-reader" }, longWeekdayFormat(date)),
          import_react2.default.createElement("span", { "aria-hidden": true }, weekdayFormat(date))
        )))
      ),
      import_react2.default.createElement("tbody", { onKeyDown }, calendar.map((week, index) => import_react2.default.createElement("tr", { key: index, className: calendar_month_default.calendarMonthDatesRow }, week.map(({ date, isValid }, index2) => {
        const dayFormatted = dayFormat(date);
        const isToday = isSameDate(date, today);
        const isSelected = isValidDate(dateProp) && isSameDate(date, dateProp);
        const isFocused = isSameDate(date, focusedDate);
        const isAdjacentMonth = date.getMonth() !== focusedDate.getMonth();
        const isRangeStart = isValidDate(rangeStart) && isSameDate(date, rangeStart);
        let isInRange = false;
        let isRangeEnd = false;
        if (isValidDate(rangeStart) && isValidDate(dateProp)) {
          isInRange = date > rangeStart && date < dateProp;
          isRangeEnd = isSameDate(date, dateProp);
        } else if (isValidDate(rangeStart) && isHoveredDateValid) {
          if (hoveredDate > rangeStart || isSameDate(hoveredDate, rangeStart)) {
            isInRange = date > rangeStart && date < hoveredDate;
            isRangeEnd = isSameDate(date, hoveredDate);
          }
        }
        return import_react2.default.createElement(
          "td",
          { key: index2, className: css(calendar_month_default.calendarMonthDatesCell, isAdjacentMonth && calendar_month_default.modifiers.adjacentMonth, isToday && calendar_month_default.modifiers.current, (isSelected || isRangeStart) && calendar_month_default.modifiers.selected, !isValid && calendar_month_default.modifiers.disabled, (isInRange || isRangeStart || isRangeEnd) && calendar_month_default.modifiers.inRange, isRangeStart && calendar_month_default.modifiers.startRange, isRangeEnd && calendar_month_default.modifiers.endRange) },
          import_react2.default.createElement("button", Object.assign({ className: css(calendar_month_default.calendarMonthDate, isRangeEnd && calendar_month_default.modifiers.hover, !isValid && calendar_month_default.modifiers.disabled), type: "button", onClick: () => onChange(date), onMouseOver: () => setHoveredDate(date), tabIndex: isFocused ? 0 : -1, disabled: !isValid, "aria-label": cellAriaLabel ? cellAriaLabel(date) : `${dayFormat(date)} ${monthFormat(date)} ${yearFormat(date)}` }, isFocused && { ref: focusRef }), dayFormatted)
        );
      }))))
    )
  );
  if (inlineProps !== void 0) {
    const Component47 = inlineProps.component ? inlineProps.component : "article";
    return import_react2.default.createElement(
      Component47,
      Object.assign({}, inlineProps.ariaLabelledby && { "aria-labelledby": inlineProps.ariaLabelledby }),
      inlineProps.title,
      calendarToRender
    );
  }
  return calendarToRender;
};
CalendarMonth.displayName = "CalendarMonth";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/Card.js
var React50 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Card/card.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Card/card.css";
var card_default = {
  "card": "pf-c-card",
  "cardActions": "pf-c-card__actions",
  "cardBody": "pf-c-card__body",
  "cardExpandableContent": "pf-c-card__expandable-content",
  "cardFooter": "pf-c-card__footer",
  "cardHeader": "pf-c-card__header",
  "cardHeaderToggle": "pf-c-card__header-toggle",
  "cardHeaderToggleIcon": "pf-c-card__header-toggle-icon",
  "cardSrInput": "pf-c-card__sr-input",
  "cardTitle": "pf-c-card__title",
  "divider": "pf-c-divider",
  "modifiers": {
    "hoverable": "pf-m-hoverable",
    "selectable": "pf-m-selectable",
    "selected": "pf-m-selected",
    "hoverableRaised": "pf-m-hoverable-raised",
    "selectableRaised": "pf-m-selectable-raised",
    "nonSelectableRaised": "pf-m-non-selectable-raised",
    "selectedRaised": "pf-m-selected-raised",
    "compact": "pf-m-compact",
    "displayLg": "pf-m-display-lg",
    "flat": "pf-m-flat",
    "plain": "pf-m-plain",
    "rounded": "pf-m-rounded",
    "expanded": "pf-m-expanded",
    "fullHeight": "pf-m-full-height",
    "toggleRight": "pf-m-toggle-right",
    "noOffset": "pf-m-no-offset",
    "noFill": "pf-m-no-fill",
    "overpassFont": "pf-m-overpass-font"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/Card.js
var CardContext = React50.createContext({
  cardId: "",
  registerTitleId: () => {
  },
  isExpanded: false
});
var Card = (_a) => {
  var { children = null, id = "", className = "", component = "article", isHoverable = false, isCompact = false, isSelectable = false, isSelectableRaised = false, isSelected = false, isDisabledRaised = false, isFlat = false, isExpanded = false, isRounded = false, isLarge = false, isFullHeight = false, isPlain = false, ouiaId, ouiaSafe = true, hasSelectableInput = false, selectableInputAriaLabel, onSelectableInputChange = () => {
  } } = _a, props = __rest(_a, ["children", "id", "className", "component", "isHoverable", "isCompact", "isSelectable", "isSelectableRaised", "isSelected", "isDisabledRaised", "isFlat", "isExpanded", "isRounded", "isLarge", "isFullHeight", "isPlain", "ouiaId", "ouiaSafe", "hasSelectableInput", "selectableInputAriaLabel", "onSelectableInputChange"]);
  const Component47 = component;
  const ouiaProps = useOUIAProps(Card.displayName, ouiaId, ouiaSafe);
  const [titleId, setTitleId] = React50.useState("");
  const [ariaProps, setAriaProps] = React50.useState();
  if (isCompact && isLarge) {
    console.warn("Card: Cannot use isCompact with isLarge. Defaulting to isCompact");
    isLarge = false;
  }
  const getSelectableModifiers = () => {
    if (isDisabledRaised) {
      return css(card_default.modifiers.nonSelectableRaised);
    }
    if (isSelectableRaised) {
      return css(card_default.modifiers.selectableRaised, isSelected && card_default.modifiers.selectedRaised);
    }
    if (isSelectable || isHoverable) {
      return css(card_default.modifiers.selectable, isSelected && card_default.modifiers.selected);
    }
    return "";
  };
  const containsCardTitleChildRef = React50.useRef(false);
  const registerTitleId = (id2) => {
    setTitleId(id2);
    containsCardTitleChildRef.current = !!id2;
  };
  React50.useEffect(() => {
    if (selectableInputAriaLabel) {
      setAriaProps({ "aria-label": selectableInputAriaLabel });
    } else if (titleId) {
      setAriaProps({ "aria-labelledby": titleId });
    } else if (hasSelectableInput && !containsCardTitleChildRef.current) {
      setAriaProps({});
      console.warn("If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed");
    }
  }, [hasSelectableInput, selectableInputAriaLabel, titleId]);
  return React50.createElement(
    CardContext.Provider,
    { value: {
      cardId: id,
      registerTitleId,
      isExpanded
    } },
    hasSelectableInput && React50.createElement("input", Object.assign({ className: "pf-screen-reader", id: `${id}-input` }, ariaProps, { type: "checkbox", checked: isSelected, onChange: (event) => onSelectableInputChange(id, event), disabled: isDisabledRaised, tabIndex: -1 })),
    React50.createElement(Component47, Object.assign({ id, className: css(card_default.card, isCompact && card_default.modifiers.compact, isExpanded && card_default.modifiers.expanded, isFlat && card_default.modifiers.flat, isRounded && card_default.modifiers.rounded, isLarge && card_default.modifiers.displayLg, isFullHeight && card_default.modifiers.fullHeight, isPlain && card_default.modifiers.plain, getSelectableModifiers(), className), tabIndex: isSelectable || isSelectableRaised ? "0" : void 0 }, props, ouiaProps), children)
  );
};
Card.displayName = "Card";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardActions.js
var React51 = __toESM(require_react());
var CardActions = (_a) => {
  var { children = null, className = "", hasNoOffset = false } = _a, props = __rest(_a, ["children", "className", "hasNoOffset"]);
  return React51.createElement("div", Object.assign({ className: css(card_default.cardActions, hasNoOffset && card_default.modifiers.noOffset, className) }, props), children);
};
CardActions.displayName = "CardActions";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardBody.js
var React52 = __toESM(require_react());
var CardBody = (_a) => {
  var { children = null, className = "", component = "div", isFilled = true } = _a, props = __rest(_a, ["children", "className", "component", "isFilled"]);
  const Component47 = component;
  return React52.createElement(Component47, Object.assign({ className: css(card_default.cardBody, !isFilled && card_default.modifiers.noFill, className) }, props), children);
};
CardBody.displayName = "CardBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardExpandableContent.js
var React53 = __toESM(require_react());
var CardExpandableContent = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React53.createElement(CardContext.Consumer, null, ({ isExpanded }) => isExpanded ? React53.createElement("div", Object.assign({ className: css(card_default.cardExpandableContent, className) }, props), children) : null);
};
CardExpandableContent.displayName = "CardExpandableContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardFooter.js
var React54 = __toESM(require_react());
var CardFooter = (_a) => {
  var { children = null, className = "", component = "div" } = _a, props = __rest(_a, ["children", "className", "component"]);
  const Component47 = component;
  return React54.createElement(Component47, Object.assign({ className: css(card_default.cardFooter, className) }, props), children);
};
CardFooter.displayName = "CardFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardTitle.js
var React55 = __toESM(require_react());
var CardTitle = (_a) => {
  var { children = null, className = "", component = "div" } = _a, props = __rest(_a, ["children", "className", "component"]);
  const { cardId, registerTitleId } = React55.useContext(CardContext);
  const Component47 = component;
  const titleId = cardId ? `${cardId}-title` : "";
  React55.useEffect(() => {
    registerTitleId(titleId);
    return () => registerTitleId("");
  }, [registerTitleId, titleId]);
  return React55.createElement(Component47, Object.assign({ className: css(card_default.cardTitle, className), id: titleId || void 0 }, props), children);
};
CardTitle.displayName = "CardTitle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeader.js
var React56 = __toESM(require_react());
var CardHeader = (_a) => {
  var { children = null, className = "", id, onExpand, toggleButtonProps, isToggleRightAligned } = _a, props = __rest(_a, ["children", "className", "id", "onExpand", "toggleButtonProps", "isToggleRightAligned"]);
  return React56.createElement(CardContext.Consumer, null, ({ cardId }) => {
    const cardHeaderToggle = React56.createElement(
      "div",
      { className: css(card_default.cardHeaderToggle) },
      React56.createElement(
        Button,
        Object.assign({ variant: "plain", type: "button", onClick: (evt) => {
          onExpand(evt, cardId);
        } }, toggleButtonProps),
        React56.createElement(
          "span",
          { className: css(card_default.cardHeaderToggleIcon) },
          React56.createElement(angle_right_icon_default, { "aria-hidden": "true" })
        )
      )
    );
    return React56.createElement(
      "div",
      Object.assign({ className: css(card_default.cardHeader, isToggleRightAligned && card_default.modifiers.toggleRight, className), id }, props),
      onExpand && !isToggleRightAligned && cardHeaderToggle,
      children,
      onExpand && isToggleRightAligned && cardHeaderToggle
    );
  });
};
CardHeader.displayName = "CardHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Card/CardHeaderMain.js
var React57 = __toESM(require_react());
var CardHeaderMain = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React57.createElement("div", Object.assign({ className }, props), children);
};
CardHeaderMain.displayName = "CardHeaderMain";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js
var React61 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.css";
var clipboard_copy_default = {
  "button": "pf-c-button",
  "clipboardCopy": "pf-c-clipboard-copy",
  "clipboardCopyActions": "pf-c-clipboard-copy__actions",
  "clipboardCopyActionsItem": "pf-c-clipboard-copy__actions-item",
  "clipboardCopyExpandableContent": "pf-c-clipboard-copy__expandable-content",
  "clipboardCopyGroup": "pf-c-clipboard-copy__group",
  "clipboardCopyText": "pf-c-clipboard-copy__text",
  "clipboardCopyToggleIcon": "pf-c-clipboard-copy__toggle-icon",
  "modifiers": {
    "expanded": "pf-m-expanded",
    "inline": "pf-m-inline",
    "block": "pf-m-block",
    "code": "pf-m-code"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js
var React58 = __toESM(require_react());
var ClipboardCopyButton = (_a) => {
  var { onClick, exitDelay = 0, entryDelay = 300, maxWidth = "100px", position = "top", "aria-label": ariaLabel = "Copyable input", id, textId, children, variant = "control", onTooltipHidden = () => {
  }, removeFindDomNode = false } = _a, props = __rest(_a, ["onClick", "exitDelay", "entryDelay", "maxWidth", "position", "aria-label", "id", "textId", "children", "variant", "onTooltipHidden", "removeFindDomNode"]);
  return React58.createElement(
    Tooltip,
    { trigger: "mouseenter focus click", exitDelay, entryDelay, maxWidth, position, "aria-live": "polite", aria: "none", content: React58.createElement("div", null, children), onTooltipHidden, removeFindDomNode },
    React58.createElement(
      Button,
      Object.assign({ type: "button", variant, onClick, "aria-label": ariaLabel, id, "aria-labelledby": `${id} ${textId}` }, props),
      React58.createElement(copy_icon_default, null)
    )
  );
};
ClipboardCopyButton.displayName = "ClipboardCopyButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js
var React59 = __toESM(require_react());
var ClipboardCopyToggle = (_a) => {
  var { onClick, id, textId, contentId, isExpanded = false } = _a, props = __rest(_a, ["onClick", "id", "textId", "contentId", "isExpanded"]);
  return React59.createElement(Button, Object.assign({ type: "button", variant: "control", onClick, id, "aria-labelledby": `${id} ${textId}`, "aria-controls": `${id} ${contentId}`, "aria-expanded": isExpanded }, props), isExpanded ? React59.createElement(angle_down_icon_default, { "aria-hidden": "true" }) : React59.createElement(angle_right_icon_default, { "aria-hidden": "true" }));
};
ClipboardCopyToggle.displayName = "ClipboardCopyToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js
var React60 = __toESM(require_react());
var ClipboardCopyExpanded = class extends React60.Component {
  constructor(props) {
    super(props);
  }
  render() {
    const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = __rest(_a, ["className", "children", "onChange", "isReadOnly", "isCode"]);
    return React60.createElement("div", Object.assign({ suppressContentEditableWarning: true, className: css(clipboard_copy_default.clipboardCopyExpandableContent, className), onInput: (e) => onChange(e.target.innerText, e), contentEditable: !isReadOnly }, props), isCode ? React60.createElement("pre", null, children) : children);
  }
};
ClipboardCopyExpanded.displayName = "ClipboardCopyExpanded";
ClipboardCopyExpanded.defaultProps = {
  onChange: () => void 0,
  className: "",
  isReadOnly: false,
  isCode: false
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js
var clipboardCopyFunc = (event, text) => {
  navigator.clipboard.writeText(text.toString());
};
var ClipboardCopyVariant;
(function(ClipboardCopyVariant2) {
  ClipboardCopyVariant2["inline"] = "inline";
  ClipboardCopyVariant2["expansion"] = "expansion";
  ClipboardCopyVariant2["inlineCompact"] = "inline-compact";
})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));
var ClipboardCopy = class _ClipboardCopy extends React61.Component {
  constructor(props) {
    super(props);
    this.timer = null;
    this.componentDidUpdate = (prevProps, prevState) => {
      if (prevProps.children !== this.props.children) {
        this.updateText(this.props.children);
      }
    };
    this.componentWillUnmount = () => {
      if (this.timer) {
        window.clearTimeout(this.timer);
      }
    };
    this.expandContent = (_event) => {
      this.setState((prevState) => ({
        expanded: !prevState.expanded
      }));
    };
    this.updateText = (text) => {
      this.setState({ text });
      this.props.onChange(text);
    };
    this.render = () => {
      const _a = this.props, {
        /* eslint-disable @typescript-eslint/no-unused-vars */
        isExpanded,
        onChange,
        // Don't pass to <div>
        switchDelay,
        /* eslint-enable @typescript-eslint/no-unused-vars */
        isReadOnly,
        isCode,
        isBlock,
        exitDelay,
        maxWidth,
        entryDelay,
        onCopy,
        hoverTip,
        clickTip,
        textAriaLabel,
        toggleAriaLabel,
        variant,
        position,
        className,
        additionalActions,
        ouiaId,
        ouiaSafe,
        removeFindDomNode
      } = _a, divProps = __rest(_a, ["isExpanded", "onChange", "switchDelay", "isReadOnly", "isCode", "isBlock", "exitDelay", "maxWidth", "entryDelay", "onCopy", "hoverTip", "clickTip", "textAriaLabel", "toggleAriaLabel", "variant", "position", "className", "additionalActions", "ouiaId", "ouiaSafe", "removeFindDomNode"]);
      const textIdPrefix = "text-input-";
      const toggleIdPrefix = "toggle-";
      const contentIdPrefix = "content-";
      return React61.createElement(
        "div",
        Object.assign({ className: css(clipboard_copy_default.clipboardCopy, variant === "inline-compact" && clipboard_copy_default.modifiers.inline, isBlock && clipboard_copy_default.modifiers.block, this.state.expanded && clipboard_copy_default.modifiers.expanded, className) }, divProps, getOUIAProps(_ClipboardCopy.displayName, ouiaId, ouiaSafe)),
        variant === "inline-compact" && React61.createElement(GenerateId, { prefix: "" }, (id) => React61.createElement(
          React61.Fragment,
          null,
          !isCode && React61.createElement("span", { className: css(clipboard_copy_default.clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text),
          isCode && React61.createElement("code", { className: css(clipboard_copy_default.clipboardCopyText, clipboard_copy_default.modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text),
          React61.createElement(
            "span",
            { className: css(clipboard_copy_default.clipboardCopyActions) },
            React61.createElement(
              "span",
              { className: css(clipboard_copy_default.clipboardCopyActionsItem) },
              React61.createElement(ClipboardCopyButton, { variant: "plain", exitDelay, entryDelay, maxWidth, position, id: `copy-button-${id}`, textId: `text-input-${id}`, "aria-label": hoverTip, onClick: (event) => {
                onCopy(event, this.state.text);
                this.setState({ copied: true });
              }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)
            ),
            additionalActions && additionalActions
          )
        )),
        variant !== "inline-compact" && React61.createElement(GenerateId, { prefix: "" }, (id) => React61.createElement(
          React61.Fragment,
          null,
          React61.createElement(
            "div",
            { className: css(clipboard_copy_default.clipboardCopyGroup) },
            variant === "expansion" && React61.createElement(ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: this.expandContent, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, "aria-label": toggleAriaLabel }),
            React61.createElement(TextInput, { isReadOnly: isReadOnly || this.state.expanded, onChange: this.updateText, value: this.state.text, id: `text-input-${id}`, "aria-label": textAriaLabel }),
            React61.createElement(ClipboardCopyButton, { exitDelay, entryDelay, maxWidth, position, id: `copy-button-${id}`, textId: `text-input-${id}`, "aria-label": hoverTip, onClick: (event) => {
              onCopy(event, this.state.text);
              this.setState({ copied: true });
            }, onTooltipHidden: () => this.setState({ copied: false }), removeFindDomNode }, this.state.copied ? clickTip : hoverTip)
          ),
          this.state.expanded && React61.createElement(ClipboardCopyExpanded, { isReadOnly, isCode, id: `content-${id}`, onChange: this.updateText }, this.state.text)
        ))
      );
    };
    this.state = {
      text: Array.isArray(this.props.children) ? this.props.children.join("") : this.props.children,
      expanded: this.props.isExpanded,
      copied: false
    };
    if (this.props.switchDelay !== void 0) {
      console.warn("ClipboardCopy: switchDelay prop has been deprecated. The tooltip message will switch back to the hover tip as soon as the tooltip is hidden.");
    }
  }
};
ClipboardCopy.displayName = "ClipboardCopy";
ClipboardCopy.defaultProps = {
  hoverTip: "Copy to clipboard",
  clickTip: "Successfully copied to clipboard!",
  isReadOnly: false,
  isExpanded: false,
  isCode: false,
  variant: "inline",
  position: PopoverPosition.top,
  maxWidth: "150px",
  exitDelay: 1500,
  entryDelay: 300,
  onCopy: clipboardCopyFunc,
  onChange: () => void 0,
  textAriaLabel: "Copyable input",
  toggleAriaLabel: "Show content",
  additionalActions: null,
  ouiaSafe: true,
  removeFindDomNode: false
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyAction.js
var React62 = __toESM(require_react());
var ClipboardCopyAction = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React62.createElement("span", Object.assign({ className: css(clipboard_copy_default.clipboardCopyActionsItem, className) }, props), children);
};
ClipboardCopyAction.displayName = "ClipboardCopyAction";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/CodeBlock/CodeBlock.js
var React63 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/CodeBlock/code-block.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/CodeBlock/code-block.css";
var code_block_default = {
  "codeBlock": "pf-c-code-block",
  "codeBlockActions": "pf-c-code-block__actions",
  "codeBlockCode": "pf-c-code-block__code",
  "codeBlockContent": "pf-c-code-block__content",
  "codeBlockHeader": "pf-c-code-block__header",
  "codeBlockPre": "pf-c-code-block__pre"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/CodeBlock/CodeBlock.js
var CodeBlock = (_a) => {
  var { children = null, className, actions = null } = _a, props = __rest(_a, ["children", "className", "actions"]);
  return React63.createElement(
    "div",
    Object.assign({ className: css(code_block_default.codeBlock, className) }, props),
    React63.createElement(
      "div",
      { className: css(code_block_default.codeBlockHeader) },
      React63.createElement("div", { className: css(code_block_default.codeBlockActions) }, actions && actions)
    ),
    React63.createElement("div", { className: css(code_block_default.codeBlockContent) }, children)
  );
};
CodeBlock.displayName = "CodeBlock";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/CodeBlock/CodeBlockCode.js
var React64 = __toESM(require_react());
var CodeBlockCode = (_a) => {
  var { children = null, className, codeClassName } = _a, props = __rest(_a, ["children", "className", "codeClassName"]);
  return React64.createElement(
    "pre",
    Object.assign({ className: css(code_block_default.codeBlockPre, className) }, props),
    React64.createElement("code", { className: css(code_block_default.codeBlockCode, codeClassName) }, children)
  );
};
CodeBlockCode.displayName = "CodeBlockCode";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/CodeBlock/CodeBlockAction.js
var React65 = __toESM(require_react());
var CodeBlockAction = (_a) => {
  var { children = null, className } = _a, props = __rest(_a, ["children", "className"]);
  return React65.createElement("div", Object.assign({ className: css("pf-c-code-block__actions-item", className) }, props), children);
};
CodeBlockAction.displayName = "CodeBlockAction";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ContextSelector/ContextSelector.js
var React69 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ContextSelector/context-selector.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ContextSelector/context-selector.css";
var context_selector_default = {
  "contextSelector": "pf-c-context-selector",
  "contextSelectorMenu": "pf-c-context-selector__menu",
  "contextSelectorMenuFooter": "pf-c-context-selector__menu-footer",
  "contextSelectorMenuList": "pf-c-context-selector__menu-list",
  "contextSelectorMenuListItem": "pf-c-context-selector__menu-list-item",
  "contextSelectorMenuSearch": "pf-c-context-selector__menu-search",
  "contextSelectorToggle": "pf-c-context-selector__toggle",
  "contextSelectorToggleIcon": "pf-c-context-selector__toggle-icon",
  "contextSelectorToggleText": "pf-c-context-selector__toggle-text",
  "modifiers": {
    "fullHeight": "pf-m-full-height",
    "large": "pf-m-large",
    "pageInsets": "pf-m-page-insets",
    "active": "pf-m-active",
    "expanded": "pf-m-expanded",
    "plain": "pf-m-plain",
    "text": "pf-m-text",
    "disabled": "pf-m-disabled",
    "static": "pf-m-static"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ContextSelector/ContextSelectorToggle.js
var React66 = __toESM(require_react());
var ContextSelectorToggle = class extends React66.Component {
  constructor() {
    super(...arguments);
    this.toggle = React66.createRef();
    this.componentDidMount = () => {
      document.addEventListener("mousedown", this.onDocClick);
      document.addEventListener("touchstart", this.onDocClick);
      document.addEventListener("keydown", this.onEscPress);
    };
    this.componentWillUnmount = () => {
      document.removeEventListener("mousedown", this.onDocClick);
      document.removeEventListener("touchstart", this.onDocClick);
      document.removeEventListener("keydown", this.onEscPress);
    };
    this.onDocClick = (event) => {
      const { isOpen, parentRef, onToggle } = this.props;
      if (isOpen && (parentRef === null || parentRef === void 0 ? void 0 : parentRef.current) && !parentRef.current.contains(event.target)) {
        onToggle(null, false);
        this.toggle.current.focus();
      }
    };
    this.onEscPress = (event) => {
      const { isOpen, onToggle } = this.props;
      if (isOpen && event.key === KeyTypes.Escape) {
        onToggle(null, false);
        this.toggle.current.focus();
      }
    };
    this.onKeyDown = (event) => {
      const { isOpen, onToggle, onEnter } = this.props;
      if (event.key === KeyTypes.Tab && !isOpen || event.key !== KeyTypes.Enter) {
        return;
      }
      event.preventDefault();
      if ((event.key === KeyTypes.Tab || event.key === KeyTypes.Enter || event.key !== KeyTypes.Space) && isOpen) {
        onToggle(null, !isOpen);
      } else if ((event.key === KeyTypes.Enter || event.key === " ") && !isOpen) {
        onToggle(null, !isOpen);
        onEnter();
      }
    };
  }
  render() {
    const _a = this.props, {
      className,
      toggleText,
      isOpen,
      onToggle,
      id,
      isPlain,
      isText,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      isActive,
      onEnter,
      parentRef
    } = _a, props = __rest(_a, ["className", "toggleText", "isOpen", "onToggle", "id", "isPlain", "isText", "isActive", "onEnter", "parentRef"]);
    return React66.createElement(
      "button",
      Object.assign({}, props, { id, ref: this.toggle, className: css(context_selector_default.contextSelectorToggle, isActive && context_selector_default.modifiers.active, isPlain && context_selector_default.modifiers.plain, isText && context_selector_default.modifiers.text, className), type: "button", onClick: (event) => onToggle(event, !isOpen), "aria-expanded": isOpen, onKeyDown: this.onKeyDown }),
      React66.createElement("span", { className: css(context_selector_default.contextSelectorToggleText) }, toggleText),
      React66.createElement(
        "span",
        { className: css(context_selector_default.contextSelectorToggleIcon) },
        React66.createElement(caret_down_icon_default, { "aria-hidden": true })
      )
    );
  }
};
ContextSelectorToggle.displayName = "ContextSelectorToggle";
ContextSelectorToggle.defaultProps = {
  className: "",
  toggleText: "",
  isOpen: false,
  onEnter: () => void 0,
  parentRef: null,
  isActive: false,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onToggle: (event, value) => void 0
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ContextSelector/ContextSelectorMenuList.js
var React67 = __toESM(require_react());
var ContextSelectorMenuList = class extends React67.Component {
  constructor() {
    super(...arguments);
    this.refsCollection = [];
    this.sendRef = (index, ref) => {
      this.refsCollection[index] = ref;
    };
    this.render = () => {
      const _a = this.props, { className, isOpen, children } = _a, props = __rest(_a, ["className", "isOpen", "children"]);
      return React67.createElement("ul", Object.assign({ className: css(context_selector_default.contextSelectorMenuList, className), hidden: !isOpen, role: "menu" }, props), this.extendChildren());
    };
  }
  extendChildren() {
    return React67.Children.map(this.props.children, (child, index) => React67.cloneElement(child, {
      sendRef: this.sendRef,
      index,
      role: "menuitem"
    }));
  }
};
ContextSelectorMenuList.displayName = "ContextSelectorMenuList";
ContextSelectorMenuList.defaultProps = {
  children: null,
  className: "",
  isOpen: true
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ContextSelector/contextSelectorConstants.js
var React68 = __toESM(require_react());
var ContextSelectorContext = React68.createContext({
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onSelect: (event, value) => void 0
});

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ContextSelector/ContextSelector.js
var ContextSelector = class _ContextSelector extends React69.Component {
  constructor(props) {
    super(props);
    this.parentRef = React69.createRef();
    this.popperRef = React69.createRef();
    this.onEnterPressed = (event) => {
      if (event.key === KeyTypes.Enter) {
        this.props.onSearchButtonClick();
      }
    };
    this.state = {
      ouiaStateId: getDefaultOUIAId(_ContextSelector.displayName)
    };
  }
  render() {
    const _a = this.props, { children, className, isOpen, isFullHeight, onToggle, onSelect, screenReaderLabel, toggleText, searchButtonAriaLabel, searchInputValue, onSearchInputChange, searchInputPlaceholder, onSearchButtonClick, menuAppendTo, ouiaId, ouiaSafe, isPlain, isText, footer, disableFocusTrap, isFlipEnabled, id, removeFindDomNode, zIndex } = _a, props = __rest(_a, ["children", "className", "isOpen", "isFullHeight", "onToggle", "onSelect", "screenReaderLabel", "toggleText", "searchButtonAriaLabel", "searchInputValue", "onSearchInputChange", "searchInputPlaceholder", "onSearchButtonClick", "menuAppendTo", "ouiaId", "ouiaSafe", "isPlain", "isText", "footer", "disableFocusTrap", "isFlipEnabled", "id", "removeFindDomNode", "zIndex"]);
    const uniqueId = id || getUniqueId();
    const toggleId = `pf-context-selector-toggle-id-${uniqueId}`;
    const screenReaderLabelId = `pf-context-selector-label-id-${uniqueId}`;
    const isStatic = isFlipEnabled && menuAppendTo !== "inline";
    const menuContainer = React69.createElement("div", { className: css(context_selector_default.contextSelectorMenu, isStatic && context_selector_default.modifiers.static), id: uniqueId }, isOpen && React69.createElement(
      FocusTrap,
      { active: !disableFocusTrap, focusTrapOptions: { clickOutsideDeactivates: true, tabbableOptions: { displayCheck: "none" } } },
      React69.createElement(
        "div",
        { className: css(context_selector_default.contextSelectorMenuSearch) },
        React69.createElement(
          InputGroup,
          null,
          React69.createElement(TextInput, { value: searchInputValue, type: "search", placeholder: searchInputPlaceholder, onChange: onSearchInputChange, onKeyPress: this.onEnterPressed, "aria-label": searchButtonAriaLabel }),
          React69.createElement(
            Button,
            { variant: ButtonVariant.control, "aria-label": searchButtonAriaLabel, onClick: onSearchButtonClick },
            React69.createElement(search_icon_default, { "aria-hidden": "true" })
          )
        )
      ),
      React69.createElement(
        ContextSelectorContext.Provider,
        { value: { onSelect } },
        React69.createElement(ContextSelectorMenuList, { isOpen }, children)
      ),
      footer
    ));
    const popperContainer = React69.createElement("div", Object.assign({ className: css(context_selector_default.contextSelector, isOpen && context_selector_default.modifiers.expanded, className), ref: this.popperRef }, props), isOpen && menuContainer);
    const mainContainer = React69.createElement(
      "div",
      Object.assign({ className: css(context_selector_default.contextSelector, isOpen && context_selector_default.modifiers.expanded, isFullHeight && context_selector_default.modifiers.fullHeight, className), ref: this.parentRef }, getOUIAProps(_ContextSelector.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe), props),
      screenReaderLabel && React69.createElement("span", { id: screenReaderLabelId, hidden: true }, screenReaderLabel),
      React69.createElement(ContextSelectorToggle, { onToggle, isOpen, toggleText, id: toggleId, parentRef: menuAppendTo === "inline" ? this.parentRef : this.popperRef, "aria-labelledby": `${screenReaderLabelId} ${toggleId}`, isPlain, isText }),
      isOpen && menuAppendTo === "inline" && menuContainer
    );
    const getParentElement = () => {
      if (this.parentRef && this.parentRef.current) {
        return this.parentRef.current.parentElement;
      }
      return null;
    };
    return menuAppendTo === "inline" ? mainContainer : React69.createElement(Popper, { trigger: mainContainer, popper: popperContainer, appendTo: menuAppendTo === "parent" ? getParentElement() : menuAppendTo, isVisible: isOpen, removeFindDomNode, zIndex });
  }
};
ContextSelector.displayName = "ContextSelector";
ContextSelector.defaultProps = {
  children: null,
  className: "",
  isOpen: false,
  onToggle: () => void 0,
  onSelect: () => void 0,
  screenReaderLabel: "",
  toggleText: "",
  searchButtonAriaLabel: "Search menu items",
  searchInputValue: "",
  onSearchInputChange: () => void 0,
  searchInputPlaceholder: "Search",
  onSearchButtonClick: () => void 0,
  menuAppendTo: "inline",
  ouiaSafe: true,
  disableFocusTrap: false,
  footer: null,
  isPlain: false,
  isText: false,
  isFlipEnabled: true,
  removeFindDomNode: false,
  zIndex: 9999
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ContextSelector/ContextSelectorItem.js
var React70 = __toESM(require_react());
var ContextSelectorItem = class extends React70.Component {
  constructor() {
    super(...arguments);
    this.ref = React70.createRef();
  }
  componentDidMount() {
    this.props.sendRef(this.props.index, this.ref.current);
  }
  render() {
    const _a = this.props, { className, children, onClick, isDisabled, index, sendRef, href } = _a, props = __rest(_a, ["className", "children", "onClick", "isDisabled", "index", "sendRef", "href"]);
    const Component47 = href ? "a" : "button";
    const isDisabledLink = href && isDisabled;
    return React70.createElement(ContextSelectorContext.Consumer, null, ({ onSelect }) => React70.createElement(
      "li",
      { role: "none" },
      React70.createElement(Component47, Object.assign({ className: css(context_selector_default.contextSelectorMenuListItem, isDisabledLink && context_selector_default.modifiers.disabled, className), ref: this.ref, onClick: (event) => {
        if (!isDisabled) {
          onClick(event);
          onSelect(event, children);
        }
      }, disabled: isDisabled && !href, href }, isDisabledLink && { "aria-disabled": true, tabIndex: -1 }, props), children)
    ));
  }
};
ContextSelectorItem.displayName = "ContextSelectorItem";
ContextSelectorItem.defaultProps = {
  children: null,
  className: "",
  isDisabled: false,
  onClick: () => void 0,
  index: void 0,
  sendRef: () => {
  },
  href: null
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ContextSelector/ContextSelectorFooter.js
var React71 = __toESM(require_react());
var ContextSelectorFooter = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React71.createElement("div", Object.assign({}, props, { className: css(context_selector_default.contextSelectorMenuFooter, className) }), children);
};
ContextSelectorFooter.displayName = "ContextSelectorFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataList.js
var React72 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DataList/data-list.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DataList/data-list.css";
var data_list_default = {
  "dataList": "pf-c-data-list",
  "dataListAction": "pf-c-data-list__action",
  "dataListCell": "pf-c-data-list__cell",
  "dataListCheck": "pf-c-data-list__check",
  "dataListExpandableContent": "pf-c-data-list__expandable-content",
  "dataListExpandableContentBody": "pf-c-data-list__expandable-content-body",
  "dataListItem": "pf-c-data-list__item",
  "dataListItemAction": "pf-c-data-list__item-action",
  "dataListItemContent": "pf-c-data-list__item-content",
  "dataListItemControl": "pf-c-data-list__item-control",
  "dataListItemDraggableButton": "pf-c-data-list__item-draggable-button",
  "dataListItemDraggableIcon": "pf-c-data-list__item-draggable-icon",
  "dataListItemRow": "pf-c-data-list__item-row",
  "dataListText": "pf-c-data-list__text",
  "dataListToggle": "pf-c-data-list__toggle",
  "dataListToggleIcon": "pf-c-data-list__toggle-icon",
  "modifiers": {
    "hidden": "pf-m-hidden",
    "hiddenOnSm": "pf-m-hidden-on-sm",
    "visibleOnSm": "pf-m-visible-on-sm",
    "hiddenOnMd": "pf-m-hidden-on-md",
    "visibleOnMd": "pf-m-visible-on-md",
    "hiddenOnLg": "pf-m-hidden-on-lg",
    "visibleOnLg": "pf-m-visible-on-lg",
    "hiddenOnXl": "pf-m-hidden-on-xl",
    "visibleOnXl": "pf-m-visible-on-xl",
    "hiddenOn_2xl": "pf-m-hidden-on-2xl",
    "visibleOn_2xl": "pf-m-visible-on-2xl",
    "icon": "pf-m-icon",
    "alignRight": "pf-m-align-right",
    "noFill": "pf-m-no-fill",
    "flex_2": "pf-m-flex-2",
    "flex_3": "pf-m-flex-3",
    "flex_4": "pf-m-flex-4",
    "flex_5": "pf-m-flex-5",
    "gridNone": "pf-m-grid-none",
    "gridSm": "pf-m-grid-sm",
    "gridMd": "pf-m-grid-md",
    "gridLg": "pf-m-grid-lg",
    "gridXl": "pf-m-grid-xl",
    "grid_2xl": "pf-m-grid-2xl",
    "compact": "pf-m-compact",
    "dragOver": "pf-m-drag-over",
    "truncate": "pf-m-truncate",
    "breakWord": "pf-m-break-word",
    "nowrap": "pf-m-nowrap",
    "selectable": "pf-m-selectable",
    "selected": "pf-m-selected",
    "ghostRow": "pf-m-ghost-row",
    "expanded": "pf-m-expanded",
    "disabled": "pf-m-disabled",
    "noPadding": "pf-m-no-padding"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DataList/data-list-grid.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DataList/data-list-grid.css";
var data_list_grid_default = {
  "dataList": "pf-c-data-list",
  "dataListCell": "pf-c-data-list__cell",
  "dataListExpandableContent": "pf-c-data-list__expandable-content",
  "dataListItemContent": "pf-c-data-list__item-content",
  "modifiers": {
    "icon": "pf-m-icon",
    "alignRight": "pf-m-align-right",
    "noFill": "pf-m-no-fill",
    "flex_2": "pf-m-flex-2",
    "flex_3": "pf-m-flex-3",
    "flex_4": "pf-m-flex-4",
    "flex_5": "pf-m-flex-5",
    "gridNone": "pf-m-grid-none",
    "gridSm": "pf-m-grid-sm",
    "gridMd": "pf-m-grid-md",
    "gridLg": "pf-m-grid-lg",
    "gridXl": "pf-m-grid-xl",
    "grid_2xl": "pf-m-grid-2xl"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataList.js
var gridBreakpointClasses = {
  none: data_list_grid_default.modifiers.gridNone,
  always: "pf-m-grid",
  sm: data_list_grid_default.modifiers.gridSm,
  md: data_list_grid_default.modifiers.gridMd,
  lg: data_list_grid_default.modifiers.gridLg,
  xl: data_list_grid_default.modifiers.gridXl,
  "2xl": data_list_grid_default.modifiers.grid_2xl
};
var DataListWrapModifier;
(function(DataListWrapModifier2) {
  DataListWrapModifier2["nowrap"] = "nowrap";
  DataListWrapModifier2["truncate"] = "truncate";
  DataListWrapModifier2["breakWord"] = "breakWord";
})(DataListWrapModifier || (DataListWrapModifier = {}));
var DataListContext = React72.createContext({
  isSelectable: false
});
var moveItem = (arr, i1, toIndex) => {
  const fromIndex = arr.indexOf(i1);
  if (fromIndex === toIndex) {
    return arr;
  }
  const temp = arr.splice(fromIndex, 1);
  arr.splice(toIndex, 0, temp[0]);
  return arr;
};
var DataList = class extends React72.Component {
  constructor(props) {
    super(props);
    this.dragFinished = false;
    this.html5DragDrop = false;
    this.arrayCopy = React72.Children.toArray(this.props.children);
    this.ref = React72.createRef();
    this.state = {
      tempItemOrder: [],
      draggedItemId: null,
      draggingToItemIndex: null,
      dragging: false
    };
    this.getIndex = (id) => Array.from(this.ref.current.children).findIndex((item) => item.id === id);
    this.move = (itemOrder) => {
      const ulNode = this.ref.current;
      const nodes = Array.from(ulNode.children);
      if (nodes.map((node) => node.id).every((id, i) => id === itemOrder[i])) {
        return;
      }
      while (ulNode.firstChild) {
        ulNode.removeChild(ulNode.lastChild);
      }
      itemOrder.forEach((id) => {
        ulNode.appendChild(nodes.find((n) => n.id === id));
      });
    };
    this.dragStart0 = (el) => {
      const { onDragStart } = this.props;
      const draggedItemId = el.id;
      el.classList.add(data_list_default.modifiers.ghostRow);
      el.setAttribute("aria-pressed", "true");
      this.setState({
        draggedItemId,
        dragging: true
      });
      onDragStart && onDragStart(draggedItemId);
    };
    this.dragStart = (evt) => {
      evt.dataTransfer.effectAllowed = "move";
      evt.dataTransfer.setData("text/plain", evt.currentTarget.id);
      this.dragStart0(evt.currentTarget);
    };
    this.onDragCancel = () => {
      this.move(this.props.itemOrder);
      Array.from(this.ref.current.children).forEach((el) => {
        el.classList.remove(data_list_default.modifiers.ghostRow);
        el.classList.remove(data_list_default.modifiers.dragOver);
        el.setAttribute("aria-pressed", "false");
      });
      this.setState({
        draggedItemId: null,
        draggingToItemIndex: null,
        dragging: false
      });
      if (this.props.onDragCancel) {
        this.props.onDragCancel();
      }
    };
    this.dragLeave = (evt) => {
      if (!this.isValidDrop(evt)) {
        this.move(this.props.itemOrder);
        this.setState({
          draggingToItemIndex: null
        });
      }
    };
    this.dragEnd0 = (el) => {
      el.classList.remove(data_list_default.modifiers.ghostRow);
      el.classList.remove(data_list_default.modifiers.dragOver);
      el.setAttribute("aria-pressed", "false");
      this.setState({
        draggedItemId: null,
        draggingToItemIndex: null,
        dragging: false
      });
    };
    this.dragEnd = (evt) => {
      this.dragEnd0(evt.target);
    };
    this.isValidDrop = (evt) => {
      const ulRect = this.ref.current.getBoundingClientRect();
      return evt.clientX > ulRect.x && evt.clientX < ulRect.x + ulRect.width && evt.clientY > ulRect.y && evt.clientY < ulRect.y + ulRect.height;
    };
    this.drop = (evt) => {
      if (this.isValidDrop(evt)) {
        this.props.onDragFinish(this.state.tempItemOrder);
      } else {
        this.onDragCancel();
      }
    };
    this.dragOver0 = (id) => {
      const draggingToItemIndex = Array.from(this.ref.current.children).findIndex((item) => item.id === id);
      if (draggingToItemIndex !== this.state.draggingToItemIndex) {
        const tempItemOrder = moveItem([...this.props.itemOrder], this.state.draggedItemId, draggingToItemIndex);
        this.move(tempItemOrder);
        this.setState({
          draggingToItemIndex,
          tempItemOrder
        });
      }
    };
    this.dragOver = (evt) => {
      evt.preventDefault();
      const curListItem = evt.target.closest("li");
      if (!curListItem || !this.ref.current.contains(curListItem) || curListItem.id === this.state.draggedItemId) {
        return null;
      } else {
        this.dragOver0(curListItem.id);
      }
    };
    this.handleDragButtonKeys = (evt) => {
      const { dragging } = this.state;
      if (![" ", "Escape", "Enter", "ArrowUp", "ArrowDown"].includes(evt.key) || !this.html5DragDrop) {
        if (dragging) {
          evt.preventDefault();
        }
        return;
      }
      evt.preventDefault();
      const dragItem = evt.target.closest("li");
      if (evt.key === " " || evt.key === "Enter" && !dragging) {
        this.dragStart0(dragItem);
      } else if (dragging) {
        if (evt.key === "Escape" || evt.key === "Enter") {
          this.setState({
            dragging: false
          });
          this.dragFinished = true;
          if (evt.key === "Enter") {
            this.dragEnd0(dragItem);
            this.props.onDragFinish(this.state.tempItemOrder);
          } else {
            this.onDragCancel();
          }
        } else if (evt.key === "ArrowUp") {
          const nextSelection = dragItem.previousSibling;
          if (nextSelection) {
            this.dragOver0(nextSelection.id);
            dragItem.querySelector(`.${data_list_default.dataListItemDraggableButton}`).focus();
          }
        } else if (evt.key === "ArrowDown") {
          const nextSelection = dragItem.nextSibling;
          if (nextSelection) {
            this.dragOver0(nextSelection.id);
            dragItem.querySelector(`.${data_list_default.dataListItemDraggableButton}`).focus();
          }
        }
      }
    };
    this.html5DragDrop = Boolean(props.onDragFinish || props.onDragStart || props.onDragMove || props.onDragCancel);
    if (this.html5DragDrop) {
      console.warn("DataList's onDrag API is deprecated. Use DragDrop instead.");
    }
  }
  componentDidUpdate(oldProps) {
    if (this.dragFinished) {
      this.dragFinished = false;
      this.setState({
        tempItemOrder: [...this.props.itemOrder],
        draggedItemId: null,
        dragging: false
      });
    }
    if (oldProps.itemOrder !== this.props.itemOrder) {
      this.move(this.props.itemOrder);
    }
  }
  render() {
    const _a = this.props, {
      className,
      children,
      onSelectDataListItem,
      selectedDataListItemId,
      isCompact,
      wrapModifier,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      onDragStart,
      onDragMove,
      onDragCancel,
      onDragFinish,
      gridBreakpoint,
      itemOrder,
      selectableRow
    } = _a, props = __rest(_a, ["className", "children", "onSelectDataListItem", "selectedDataListItemId", "isCompact", "wrapModifier", "onDragStart", "onDragMove", "onDragCancel", "onDragFinish", "gridBreakpoint", "itemOrder", "selectableRow"]);
    const { dragging } = this.state;
    const isSelectable = onSelectDataListItem !== void 0;
    const updateSelectedDataListItem = (id) => {
      onSelectDataListItem(id);
    };
    const dragProps = this.html5DragDrop && {
      onDragOver: this.dragOver,
      onDrop: this.dragOver,
      onDragLeave: this.dragLeave
    };
    return React72.createElement(
      DataListContext.Provider,
      { value: {
        isSelectable,
        selectedDataListItemId,
        updateSelectedDataListItem,
        selectableRow,
        isDraggable: this.html5DragDrop,
        dragStart: this.dragStart,
        dragEnd: this.dragEnd,
        drop: this.drop,
        dragKeyHandler: this.handleDragButtonKeys
      } },
      React72.createElement("ul", Object.assign({ className: css(data_list_default.dataList, isCompact && data_list_default.modifiers.compact, gridBreakpointClasses[gridBreakpoint], wrapModifier && data_list_default.modifiers[wrapModifier], dragging && data_list_default.modifiers.dragOver, className), style: props.style }, props, dragProps, { ref: this.ref }), children)
    );
  }
};
DataList.displayName = "DataList";
DataList.defaultProps = {
  children: null,
  className: "",
  selectedDataListItemId: "",
  isCompact: false,
  gridBreakpoint: "md",
  wrapModifier: null
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListAction.js
var React73 = __toESM(require_react());
var DataListAction = (_a) => {
  var {
    children,
    className,
    visibility,
    /* eslint-disable @typescript-eslint/no-unused-vars */
    id,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    isPlainButtonAction
  } = _a, props = __rest(_a, ["children", "className", "visibility", "id", "aria-label", "aria-labelledby", "isPlainButtonAction"]);
  return React73.createElement("div", Object.assign({ className: css(data_list_default.dataListItemAction, formatBreakpointMods(visibility, data_list_default), className) }, props), isPlainButtonAction ? React73.createElement("div", { className: css(data_list_default.dataListAction) }, children) : children);
};
DataListAction.displayName = "DataListAction";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListCell.js
var React74 = __toESM(require_react());
var DataListCell = (_a) => {
  var { children = null, className = "", width = 1, isFilled = true, alignRight = false, isIcon = false, wrapModifier = null } = _a, props = __rest(_a, ["children", "className", "width", "isFilled", "alignRight", "isIcon", "wrapModifier"]);
  return React74.createElement("div", Object.assign({ className: css(data_list_default.dataListCell, width > 1 && data_list_default.modifiers[`flex_${width}`], !isFilled && data_list_default.modifiers.noFill, alignRight && data_list_default.modifiers.alignRight, isIcon && data_list_default.modifiers.icon, className, wrapModifier && data_list_default.modifiers[wrapModifier]) }, props), children);
};
DataListCell.displayName = "DataListCell";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListCheck.js
var React75 = __toESM(require_react());
var DataListCheck = (_a) => {
  var {
    className = "",
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    onChange = (checked2, event) => {
    },
    isValid = true,
    isDisabled = false,
    isChecked = false,
    checked = false,
    defaultChecked,
    otherControls = false
  } = _a, props = __rest(_a, ["className", "onChange", "isValid", "isDisabled", "isChecked", "checked", "defaultChecked", "otherControls"]);
  const check = React75.createElement(
    "div",
    { className: css(data_list_default.dataListCheck) },
    React75.createElement("input", Object.assign({}, props, { type: "checkbox", onChange: (event) => onChange(event.currentTarget.checked, event), "aria-invalid": !isValid, disabled: isDisabled }, [true, false].includes(defaultChecked) && { defaultChecked }, ![true, false].includes(defaultChecked) && { checked: isChecked || checked }))
  );
  return React75.createElement(
    React75.Fragment,
    null,
    !otherControls && React75.createElement("div", { className: css(data_list_default.dataListItemControl, className) }, check),
    otherControls && check
  );
};
DataListCheck.displayName = "DataListCheck";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListControl.js
var React76 = __toESM(require_react());
var DataListControl = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React76.createElement("div", Object.assign({ className: css(data_list_default.dataListItemControl, className) }, props), children);
};
DataListControl.displayName = "DataListControl";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListDragButton.js
var React77 = __toESM(require_react());
var DataListDragButton = (_a) => {
  var { className = "", isDisabled = false } = _a, props = __rest(_a, ["className", "isDisabled"]);
  return React77.createElement(DataListContext.Consumer, null, ({ dragKeyHandler }) => React77.createElement(
    "button",
    Object.assign({ className: css(data_list_default.dataListItemDraggableButton, isDisabled && data_list_default.modifiers.disabled, className), onKeyDown: dragKeyHandler, type: "button", disabled: isDisabled }, props),
    React77.createElement(
      "span",
      { className: css(data_list_default.dataListItemDraggableIcon) },
      React77.createElement(grip_vertical_icon_default, null)
    )
  ));
};
DataListDragButton.displayName = "DataListDragButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListItem.js
var React78 = __toESM(require_react());
function findDataListDragButton(node) {
  if (!React78.isValidElement(node)) {
    return null;
  }
  if (node.type === DataListDragButton) {
    return node;
  }
  if (node.props.children) {
    for (const child of React78.Children.toArray(node.props.children)) {
      const button = findDataListDragButton(child);
      if (button) {
        return button;
      }
    }
  }
  return null;
}
var DataListItem = class extends React78.Component {
  render() {
    const _a = this.props, { children, isExpanded, className, id, "aria-labelledby": ariaLabelledBy, selectableInputAriaLabel } = _a, props = __rest(_a, ["children", "isExpanded", "className", "id", "aria-labelledby", "selectableInputAriaLabel"]);
    return React78.createElement(DataListContext.Consumer, null, ({ isSelectable, selectedDataListItemId, updateSelectedDataListItem, selectableRow, isDraggable, dragStart, dragEnd, drop }) => {
      const selectDataListItem = (event) => {
        let target = event.target;
        while (event.currentTarget !== target) {
          if ("onclick" in target && target.onclick || target.parentNode.classList.contains(data_list_default.dataListItemAction) || target.parentNode.classList.contains(data_list_default.dataListItemControl)) {
            return;
          } else {
            target = target.parentNode;
          }
        }
        updateSelectedDataListItem(id);
      };
      const onKeyDown = (event) => {
        if (event.key === KeyTypes.Enter) {
          updateSelectedDataListItem(id);
        }
      };
      const dragButton = findDataListDragButton(children);
      const dragProps = isDraggable && {
        draggable: dragButton ? !dragButton.props.isDisabled : true,
        onDrop: drop,
        onDragEnd: dragEnd,
        onDragStart: dragStart
      };
      const isSelected = selectedDataListItemId === id;
      const selectableInputAriaProps = selectableInputAriaLabel ? { "aria-label": selectableInputAriaLabel } : { "aria-labelledby": ariaLabelledBy };
      return React78.createElement(
        "li",
        Object.assign({ id, className: css(data_list_default.dataListItem, isExpanded && data_list_default.modifiers.expanded, isSelectable && data_list_default.modifiers.selectable, selectedDataListItemId && isSelected && data_list_default.modifiers.selected, className), "aria-labelledby": ariaLabelledBy }, isSelectable && { tabIndex: 0, onClick: selectDataListItem, onKeyDown }, isSelectable && isSelected && { "aria-selected": true }, props, dragProps),
        selectableRow && React78.createElement("input", Object.assign({ className: "pf-screen-reader", type: "radio", checked: isSelected, onChange: (event) => selectableRow.onChange(id, event), tabIndex: -1 }, selectableInputAriaProps)),
        React78.Children.map(children, (child) => React78.isValidElement(child) && React78.cloneElement(child, {
          rowid: ariaLabelledBy
        }))
      );
    });
  }
};
DataListItem.displayName = "DataListItem";
DataListItem.defaultProps = {
  isExpanded: false,
  className: "",
  id: "",
  children: null,
  "aria-labelledby": ""
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListItemCells.js
var React79 = __toESM(require_react());
var DataListItemCells = (_a) => {
  var {
    className = "",
    dataListCells,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    rowid = ""
  } = _a, props = __rest(_a, ["className", "dataListCells", "rowid"]);
  return React79.createElement("div", Object.assign({ className: css(data_list_default.dataListItemContent, className) }, props), dataListCells);
};
DataListItemCells.displayName = "DataListItemCells";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListItemRow.js
var React80 = __toESM(require_react());
var DataListItemRow = (_a) => {
  var { children, className = "", rowid = "", wrapModifier = null } = _a, props = __rest(_a, ["children", "className", "rowid", "wrapModifier"]);
  return React80.createElement("div", Object.assign({ className: css(data_list_default.dataListItemRow, className, wrapModifier && data_list_default.modifiers[wrapModifier]) }, props), React80.Children.map(children, (child) => React80.isValidElement(child) && React80.cloneElement(child, {
    rowid
  })));
};
DataListItemRow.displayName = "DataListItemRow";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListToggle.js
var React81 = __toESM(require_react());
var DataListToggle = (_a) => {
  var { className = "", isExpanded = false, "aria-controls": ariaControls = "", "aria-label": ariaLabel = "Details", rowid = "", id, buttonProps } = _a, props = __rest(_a, ["className", "isExpanded", "aria-controls", "aria-label", "rowid", "id", "buttonProps"]);
  return React81.createElement(
    "div",
    Object.assign({ className: css(data_list_default.dataListItemControl, className) }, props),
    React81.createElement(
      "div",
      { className: css(data_list_default.dataListToggle) },
      React81.createElement(
        Button,
        Object.assign({ id, variant: ButtonVariant.plain, "aria-controls": ariaControls !== "" && ariaControls, "aria-label": ariaLabel, "aria-labelledby": ariaLabel !== "Details" ? null : `${rowid} ${id}`, "aria-expanded": isExpanded }, buttonProps),
        React81.createElement(
          "div",
          { className: css(data_list_default.dataListToggleIcon) },
          React81.createElement(angle_right_icon_default, null)
        )
      )
    )
  );
};
DataListToggle.displayName = "DataListToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListContent.js
var React82 = __toESM(require_react());
var DataListContent = (_a) => {
  var {
    className = "",
    children = null,
    id = "",
    isHidden = false,
    "aria-label": ariaLabel,
    hasNoPadding = false,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    rowid = ""
  } = _a, props = __rest(_a, ["className", "children", "id", "isHidden", "aria-label", "hasNoPadding", "rowid"]);
  return React82.createElement(
    "section",
    Object.assign({ id, className: css(data_list_default.dataListExpandableContent, className), hidden: isHidden, "aria-label": ariaLabel }, props),
    React82.createElement("div", { className: css(data_list_default.dataListExpandableContentBody, hasNoPadding && data_list_default.modifiers.noPadding) }, children)
  );
};
DataListContent.displayName = "DataListContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DataList/DataListText.js
var React83 = __toESM(require_react());
var DataListText = (_a) => {
  var { children = null, className = "", component = "span", wrapModifier = null, tooltip: tooltipProp = "", onMouseEnter: onMouseEnterProp = () => {
  } } = _a, props = __rest(_a, ["children", "className", "component", "wrapModifier", "tooltip", "onMouseEnter"]);
  const Component47 = component;
  const [tooltip, setTooltip] = React83.useState("");
  const onMouseEnter = (event) => {
    if (event.target.offsetWidth < event.target.scrollWidth) {
      setTooltip(tooltipProp || event.target.innerHTML);
    } else {
      setTooltip("");
    }
    onMouseEnterProp(event);
  };
  const text = React83.createElement(Component47, Object.assign({ onMouseEnter, className: css(className, wrapModifier && data_list_default.modifiers[wrapModifier], data_list_default.dataListText) }, props), children);
  return tooltip !== "" ? React83.createElement(Tooltip, { content: tooltip, isVisible: true }, text) : text;
};
DataListText.displayName = "DataListText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DatePicker/DatePicker.js
var React84 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DatePicker/date-picker.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DatePicker/date-picker.css";
var date_picker_default = {
  "datePicker": "pf-c-date-picker",
  "datePickerCalendar": "pf-c-date-picker__calendar",
  "datePickerHelperText": "pf-c-date-picker__helper-text",
  "datePickerInput": "pf-c-date-picker__input",
  "formControl": "pf-c-form-control",
  "modifiers": {
    "error": "pf-m-error",
    "alignRight": "pf-m-align-right",
    "top": "pf-m-top",
    "static": "pf-m-static"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DatePicker/DatePicker.js
var import_react3 = __toESM(require_react());
var yyyyMMddFormat = (date) => `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, "0")}-${date.getDate().toString().padStart(2, "0")}`;
var DatePickerBase = (_a, ref) => {
  var { className, locale = void 0, dateFormat = yyyyMMddFormat, dateParse = (val) => val.split("-").length === 3 && /* @__PURE__ */ new Date(`${val}T00:00:00`), isDisabled = false, placeholder = "YYYY-MM-DD", value: valueProp = "", "aria-label": ariaLabel = "Date picker", buttonAriaLabel = "Toggle date picker", onChange = () => void 0, onBlur = () => void 0, invalidFormatText = "Invalid date", requiredDateOptions, helperText, appendTo = "parent", popoverProps, monthFormat, weekdayFormat, longWeekdayFormat, dayFormat, weekStart, validators = [], rangeStart, style: styleProps = {}, inputProps = {} } = _a, props = __rest(_a, ["className", "locale", "dateFormat", "dateParse", "isDisabled", "placeholder", "value", "aria-label", "buttonAriaLabel", "onChange", "onBlur", "invalidFormatText", "requiredDateOptions", "helperText", "appendTo", "popoverProps", "monthFormat", "weekdayFormat", "longWeekdayFormat", "dayFormat", "weekStart", "validators", "rangeStart", "style", "inputProps"]);
  const [value, setValue] = React84.useState(valueProp);
  const [valueDate, setValueDate] = React84.useState(dateParse(value));
  const [errorText, setErrorText] = React84.useState("");
  const [popoverOpen, setPopoverOpen] = React84.useState(false);
  const [selectOpen, setSelectOpen] = React84.useState(false);
  const [pristine, setPristine] = React84.useState(true);
  const widthChars = React84.useMemo(() => Math.max(dateFormat(/* @__PURE__ */ new Date()).length, placeholder.length), [dateFormat]);
  const style = Object.assign({ "--pf-c-date-picker__input--c-form-control--width-chars": widthChars }, styleProps);
  const buttonRef = React84.useRef();
  const datePickerWrapperRef = React84.useRef();
  const emptyDateText = (requiredDateOptions === null || requiredDateOptions === void 0 ? void 0 : requiredDateOptions.emptyDateText) || "Date cannot be blank";
  React84.useEffect(() => {
    setValue(valueProp);
    setValueDate(dateParse(valueProp));
  }, [valueProp]);
  React84.useEffect(() => {
    setPristine(!value);
    const newValueDate = dateParse(value);
    if (errorText && isValidDate(newValueDate)) {
      setError(newValueDate);
    }
  }, [value]);
  const setError = (date) => {
    setErrorText(validators.map((validator) => validator(date)).join("\n") || "");
  };
  const onTextInput = (value2, event) => {
    setValue(value2);
    setErrorText("");
    const newValueDate = dateParse(value2);
    setValueDate(newValueDate);
    if (isValidDate(newValueDate)) {
      onChange(event, value2, new Date(newValueDate));
    } else {
      onChange(event, value2);
    }
  };
  const onInputBlur = (event) => {
    const newValueDate = dateParse(value);
    const dateIsValid = isValidDate(newValueDate);
    const onBlurDateArg = dateIsValid ? new Date(newValueDate) : void 0;
    onBlur(event, value, onBlurDateArg);
    if (dateIsValid) {
      setError(newValueDate);
    }
    if (!dateIsValid && !pristine) {
      setErrorText(invalidFormatText);
    }
    if (!dateIsValid && pristine && (requiredDateOptions === null || requiredDateOptions === void 0 ? void 0 : requiredDateOptions.isRequired)) {
      setErrorText(emptyDateText);
    }
  };
  const onDateClick = (newValueDate) => {
    const newValue = dateFormat(newValueDate);
    setValue(newValue);
    setValueDate(newValueDate);
    setError(newValueDate);
    setPopoverOpen(false);
    onChange(null, newValue, new Date(newValueDate));
  };
  const onKeyPress = (ev) => {
    if (ev.key === "Enter" && value) {
      if (isValidDate(valueDate)) {
        setError(valueDate);
      } else {
        setErrorText(invalidFormatText);
      }
    }
  };
  (0, import_react3.useImperativeHandle)(ref, () => ({
    setCalendarOpen: (isOpen) => setPopoverOpen(isOpen),
    toggleCalendar: (setOpen, eventKey) => {
      if (eventKey === KeyTypes.Escape && popoverOpen && !selectOpen) {
        setPopoverOpen((prev) => setOpen !== void 0 ? setOpen : !prev);
      }
    },
    isCalendarOpen: popoverOpen
  }), [setPopoverOpen, popoverOpen, selectOpen]);
  const getParentElement = () => datePickerWrapperRef && datePickerWrapperRef.current ? datePickerWrapperRef.current : null;
  return React84.createElement(
    "div",
    Object.assign({ className: css(date_picker_default.datePicker, className), ref: datePickerWrapperRef, style }, props),
    React84.createElement(
      Popover,
      Object.assign({ position: "bottom", bodyContent: React84.createElement(CalendarMonth, {
        date: valueDate,
        onChange: onDateClick,
        locale,
        // Use truthy values of strings
        validators: validators.map((validator) => (date) => !validator(date)),
        onSelectToggle: (open) => setSelectOpen(open),
        monthFormat,
        weekdayFormat,
        longWeekdayFormat,
        dayFormat,
        weekStart,
        rangeStart,
        isDateFocused: true
      }), showClose: false, isVisible: popoverOpen, shouldClose: (_1, _2, event) => {
        event = event;
        if (event.key === KeyTypes.Escape && selectOpen) {
          event.stopPropagation();
          setSelectOpen(false);
          return false;
        }
        if (buttonRef.current && buttonRef.current.contains(event.target)) {
          return false;
        }
        setPopoverOpen(false);
        (requiredDateOptions === null || requiredDateOptions === void 0 ? void 0 : requiredDateOptions.isRequired) && !value && setErrorText(emptyDateText);
        if (event.key === KeyTypes.Escape && popoverOpen) {
          event.stopPropagation();
        }
        return true;
      }, withFocusTrap: true, hasNoPadding: true, hasAutoWidth: true, appendTo: appendTo === "parent" ? getParentElement() : appendTo }, popoverProps),
      React84.createElement(
        "div",
        { className: date_picker_default.datePickerInput },
        React84.createElement(
          InputGroup,
          null,
          React84.createElement(TextInput, Object.assign({ isDisabled, isRequired: requiredDateOptions === null || requiredDateOptions === void 0 ? void 0 : requiredDateOptions.isRequired, "aria-label": ariaLabel, placeholder, validated: errorText.trim() ? "error" : "default", value, onChange: onTextInput, onBlur: onInputBlur, onKeyPress }, inputProps)),
          React84.createElement(
            "button",
            { ref: buttonRef, className: css(button_default.button, button_default.modifiers.control), "aria-label": buttonAriaLabel, type: "button", onClick: () => setPopoverOpen(!popoverOpen), disabled: isDisabled },
            React84.createElement(outlined_calendar_alt_icon_default, null)
          )
        )
      )
    ),
    helperText && React84.createElement("div", { className: date_picker_default.datePickerHelperText }, helperText),
    errorText.trim() && React84.createElement("div", { className: css(date_picker_default.datePickerHelperText, date_picker_default.modifiers.error) }, errorText)
  );
};
var DatePicker = React84.forwardRef(DatePickerBase);
DatePicker.displayName = "DatePicker";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionList.js
var React85 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DescriptionList/description-list.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DescriptionList/description-list.css";
var description_list_default = {
  "card": "pf-c-card",
  "descriptionList": "pf-c-description-list",
  "descriptionListDescription": "pf-c-description-list__description",
  "descriptionListGroup": "pf-c-description-list__group",
  "descriptionListTerm": "pf-c-description-list__term",
  "descriptionListTermIcon": "pf-c-description-list__term-icon",
  "descriptionListText": "pf-c-description-list__text",
  "modifiers": {
    "inlineGrid": "pf-m-inline-grid",
    "autoColumnWidths": "pf-m-auto-column-widths",
    "autoFit": "pf-m-auto-fit",
    "compact": "pf-m-compact",
    "fluid": "pf-m-fluid",
    "fillColumns": "pf-m-fill-columns",
    "displayLg": "pf-m-display-lg",
    "display_2xl": "pf-m-display-2xl",
    "helpText": "pf-m-help-text",
    "1Col": "pf-m-1-col",
    "2Col": "pf-m-2-col",
    "3Col": "pf-m-3-col",
    "horizontal": "pf-m-horizontal",
    "vertical": "pf-m-vertical",
    "1ColOnSm": "pf-m-1-col-on-sm",
    "2ColOnSm": "pf-m-2-col-on-sm",
    "3ColOnSm": "pf-m-3-col-on-sm",
    "horizontalOnSm": "pf-m-horizontal-on-sm",
    "verticalOnSm": "pf-m-vertical-on-sm",
    "1ColOnMd": "pf-m-1-col-on-md",
    "2ColOnMd": "pf-m-2-col-on-md",
    "3ColOnMd": "pf-m-3-col-on-md",
    "horizontalOnMd": "pf-m-horizontal-on-md",
    "verticalOnMd": "pf-m-vertical-on-md",
    "1ColOnLg": "pf-m-1-col-on-lg",
    "2ColOnLg": "pf-m-2-col-on-lg",
    "3ColOnLg": "pf-m-3-col-on-lg",
    "horizontalOnLg": "pf-m-horizontal-on-lg",
    "verticalOnLg": "pf-m-vertical-on-lg",
    "1ColOnXl": "pf-m-1-col-on-xl",
    "2ColOnXl": "pf-m-2-col-on-xl",
    "3ColOnXl": "pf-m-3-col-on-xl",
    "horizontalOnXl": "pf-m-horizontal-on-xl",
    "verticalOnXl": "pf-m-vertical-on-xl",
    "1ColOn_2xl": "pf-m-1-col-on-2xl",
    "2ColOn_2xl": "pf-m-2-col-on-2xl",
    "3ColOn_2xl": "pf-m-3-col-on-2xl",
    "horizontalOn_2xl": "pf-m-horizontal-on-2xl",
    "verticalOn_2xl": "pf-m-vertical-on-2xl"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionList.js
var setBreakpointModifiers = (prefix, modifiers) => {
  const mods = modifiers;
  return Object.keys(mods || {}).reduce((acc, curr) => curr === "default" ? Object.assign(Object.assign({}, acc), { [prefix]: mods[curr] }) : Object.assign(Object.assign({}, acc), { [`${prefix}-on-${curr}`]: mods[curr] }), {});
};
var DescriptionList = (_a) => {
  var { className = "", children = null, isHorizontal = false, isAutoColumnWidths, isAutoFit, isInlineGrid, isCompact, isFluid, isFillColumns, displaySize, columnModifier, autoFitMinModifier, termWidth, horizontalTermWidthModifier, orientation, style } = _a, props = __rest(_a, ["className", "children", "isHorizontal", "isAutoColumnWidths", "isAutoFit", "isInlineGrid", "isCompact", "isFluid", "isFillColumns", "displaySize", "columnModifier", "autoFitMinModifier", "termWidth", "horizontalTermWidthModifier", "orientation", "style"]);
  if (isAutoFit && autoFitMinModifier) {
    style = Object.assign(Object.assign({}, style), setBreakpointModifiers("--pf-c-description-list--GridTemplateColumns--min", autoFitMinModifier));
  }
  if (termWidth) {
    style = Object.assign(Object.assign({}, style), { "--pf-c-description-list__term--width": termWidth });
  }
  if (isHorizontal && horizontalTermWidthModifier) {
    style = Object.assign(Object.assign({}, style), setBreakpointModifiers("--pf-c-description-list--m-horizontal__term--width", horizontalTermWidthModifier));
  }
  return React85.createElement("dl", Object.assign({ className: css(description_list_default.descriptionList, (isHorizontal || isFluid) && description_list_default.modifiers.horizontal, isAutoColumnWidths && description_list_default.modifiers.autoColumnWidths, isAutoFit && description_list_default.modifiers.autoFit, formatBreakpointMods(columnModifier, description_list_default), formatBreakpointMods(orientation, description_list_default), isInlineGrid && description_list_default.modifiers.inlineGrid, isCompact && description_list_default.modifiers.compact, isFluid && description_list_default.modifiers.fluid, isFillColumns && description_list_default.modifiers.fillColumns, displaySize === "lg" && description_list_default.modifiers.displayLg, displaySize === "2xl" && description_list_default.modifiers.display_2xl, className), style }, props), children);
};
DescriptionList.displayName = "DescriptionList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListDescription.js
var React86 = __toESM(require_react());
var DescriptionListDescription = (_a) => {
  var { children = null, className } = _a, props = __rest(_a, ["children", "className"]);
  return React86.createElement(
    "dd",
    Object.assign({ className: css(description_list_default.descriptionListDescription, className) }, props),
    React86.createElement("div", { className: "pf-c-description-list__text" }, children)
  );
};
DescriptionListDescription.displayName = "DescriptionListDescription";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListGroup.js
var React87 = __toESM(require_react());
var DescriptionListGroup = (_a) => {
  var { className, children } = _a, props = __rest(_a, ["className", "children"]);
  return React87.createElement("div", Object.assign({ className: css(description_list_default.descriptionListGroup, className) }, props), children);
};
DescriptionListGroup.displayName = "DescriptionListGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListTerm.js
var React88 = __toESM(require_react());
var DescriptionListTerm = (_a) => {
  var { children, className, icon } = _a, props = __rest(_a, ["children", "className", "icon"]);
  return React88.createElement(
    "dt",
    Object.assign({ className: css(description_list_default.descriptionListTerm, className) }, props),
    icon ? React88.createElement("span", { className: css(description_list_default.descriptionListTermIcon) }, icon) : null,
    React88.createElement("span", { className: css(description_list_default.descriptionListText) }, children)
  );
};
DescriptionListTerm.displayName = "DescriptionListTerm";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListTermHelpText.js
var React89 = __toESM(require_react());
var DescriptionListTermHelpText = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React89.createElement("dt", Object.assign({ className: css(description_list_default.descriptionListTerm, className) }, props), children);
};
DescriptionListTermHelpText.displayName = "DescriptionListTermHelpText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListTermHelpTextButton.js
var React90 = __toESM(require_react());
var DescriptionListTermHelpTextButton = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React90.createElement("span", Object.assign({ className: css(className, description_list_default.descriptionListText, description_list_default.modifiers.helpText), role: "button", type: "button", tabIndex: 0 }, props), children);
};
DescriptionListTermHelpTextButton.displayName = "DescriptionListTermHelpTextButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js
var React91 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Drawer/drawer.css";
var drawer_default = {
  "drawer": "pf-c-drawer",
  "drawerActions": "pf-c-drawer__actions",
  "drawerBody": "pf-c-drawer__body",
  "drawerClose": "pf-c-drawer__close",
  "drawerContent": "pf-c-drawer__content",
  "drawerHead": "pf-c-drawer__head",
  "drawerMain": "pf-c-drawer__main",
  "drawerPanel": "pf-c-drawer__panel",
  "drawerPanelMain": "pf-c-drawer__panel-main",
  "drawerSection": "pf-c-drawer__section",
  "drawerSplitter": "pf-c-drawer__splitter",
  "drawerSplitterHandle": "pf-c-drawer__splitter-handle",
  "modifiers": {
    "panelBottom": "pf-m-panel-bottom",
    "inline": "pf-m-inline",
    "noBorder": "pf-m-no-border",
    "resizable": "pf-m-resizable",
    "static": "pf-m-static",
    "panelLeft": "pf-m-panel-left",
    "expanded": "pf-m-expanded",
    "resizing": "pf-m-resizing",
    "noBackground": "pf-m-no-background",
    "light_200": "pf-m-light-200",
    "noPadding": "pf-m-no-padding",
    "padding": "pf-m-padding",
    "vertical": "pf-m-vertical",
    "width_25": "pf-m-width-25",
    "width_33": "pf-m-width-33",
    "width_50": "pf-m-width-50",
    "width_66": "pf-m-width-66",
    "width_75": "pf-m-width-75",
    "width_100": "pf-m-width-100",
    "width_25OnLg": "pf-m-width-25-on-lg",
    "width_33OnLg": "pf-m-width-33-on-lg",
    "width_50OnLg": "pf-m-width-50-on-lg",
    "width_66OnLg": "pf-m-width-66-on-lg",
    "width_75OnLg": "pf-m-width-75-on-lg",
    "width_100OnLg": "pf-m-width-100-on-lg",
    "width_25OnXl": "pf-m-width-25-on-xl",
    "width_33OnXl": "pf-m-width-33-on-xl",
    "width_50OnXl": "pf-m-width-50-on-xl",
    "width_66OnXl": "pf-m-width-66-on-xl",
    "width_75OnXl": "pf-m-width-75-on-xl",
    "width_100OnXl": "pf-m-width-100-on-xl",
    "width_25On_2xl": "pf-m-width-25-on-2xl",
    "width_33On_2xl": "pf-m-width-33-on-2xl",
    "width_50On_2xl": "pf-m-width-50-on-2xl",
    "width_66On_2xl": "pf-m-width-66-on-2xl",
    "width_75On_2xl": "pf-m-width-75-on-2xl",
    "width_100On_2xl": "pf-m-width-100-on-2xl",
    "inlineOnLg": "pf-m-inline-on-lg",
    "staticOnLg": "pf-m-static-on-lg",
    "inlineOnXl": "pf-m-inline-on-xl",
    "staticOnXl": "pf-m-static-on-xl",
    "inlineOn_2xl": "pf-m-inline-on-2xl",
    "staticOn_2xl": "pf-m-static-on-2xl"
  },
  "pageMain": "pf-c-page__main",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js
var DrawerColorVariant;
(function(DrawerColorVariant2) {
  DrawerColorVariant2["default"] = "default";
  DrawerColorVariant2["light200"] = "light-200";
})(DrawerColorVariant || (DrawerColorVariant = {}));
var DrawerContext = React91.createContext({
  isExpanded: false,
  isStatic: false,
  onExpand: () => {
  },
  position: "right",
  drawerRef: null,
  drawerContentRef: null,
  isInline: false
});
var Drawer = (_a) => {
  var { className = "", children, isExpanded = false, isInline = false, isStatic = false, position = "right", onExpand = () => {
  } } = _a, props = __rest(_a, ["className", "children", "isExpanded", "isInline", "isStatic", "position", "onExpand"]);
  const drawerRef = React91.useRef();
  const drawerContentRef = React91.useRef();
  return React91.createElement(
    DrawerContext.Provider,
    { value: { isExpanded, isStatic, onExpand, position, drawerRef, drawerContentRef, isInline } },
    React91.createElement("div", Object.assign({ className: css(drawer_default.drawer, isExpanded && drawer_default.modifiers.expanded, isInline && drawer_default.modifiers.inline, isStatic && drawer_default.modifiers.static, position === "left" && drawer_default.modifiers.panelLeft, position === "bottom" && drawer_default.modifiers.panelBottom, className), ref: drawerRef }, props), children)
  );
};
Drawer.displayName = "Drawer";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerActions.js
var React92 = __toESM(require_react());
var DrawerActions = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    children
  } = _a, props = __rest(_a, ["className", "children"]);
  return React92.createElement("div", Object.assign({ className: css(drawer_default.drawerActions, className) }, props), children);
};
DrawerActions.displayName = "DrawerActions";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerCloseButton.js
var React93 = __toESM(require_react());
var DrawerCloseButton = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    onClose = () => void 0,
    "aria-label": ariaLabel = "Close drawer panel"
  } = _a, props = __rest(_a, ["className", "onClose", "aria-label"]);
  return React93.createElement(
    "div",
    Object.assign({ className: css(drawer_default.drawerClose, className) }, props),
    React93.createElement(
      Button,
      { variant: "plain", onClick: onClose, "aria-label": ariaLabel },
      React93.createElement(times_icon_default, null)
    )
  );
};
DrawerCloseButton.displayName = "DrawerCloseButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContent.js
var React95 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerMain.js
var React94 = __toESM(require_react());
var DrawerMain = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    children
  } = _a, props = __rest(_a, ["className", "children"]);
  return React94.createElement("div", Object.assign({ className: css(drawer_default.drawerMain, className) }, props), children);
};
DrawerMain.displayName = "DrawerMain";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContent.js
var DrawerContent = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    children,
    panelContent,
    colorVariant = DrawerColorVariant.default
  } = _a, props = __rest(_a, ["className", "children", "panelContent", "colorVariant"]);
  const { drawerContentRef } = React95.useContext(DrawerContext);
  return React95.createElement(
    DrawerMain,
    null,
    React95.createElement("div", Object.assign({ className: css(drawer_default.drawerContent, colorVariant === DrawerColorVariant.light200 && drawer_default.modifiers.light_200, className), ref: drawerContentRef }, props), children),
    panelContent
  );
};
DrawerContent.displayName = "DrawerContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContentBody.js
var React96 = __toESM(require_react());
var DrawerContentBody = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    children,
    hasPadding = false
  } = _a, props = __rest(_a, ["className", "children", "hasPadding"]);
  return React96.createElement("div", Object.assign({ className: css(drawer_default.drawerBody, hasPadding && drawer_default.modifiers.padding, className) }, props), children);
};
DrawerContentBody.displayName = "DrawerContentBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerHead.js
var React98 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerPanelBody.js
var React97 = __toESM(require_react());
var DrawerPanelBody = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    children,
    hasNoPadding = false
  } = _a, props = __rest(_a, ["className", "children", "hasNoPadding"]);
  return React97.createElement("div", Object.assign({ className: css(drawer_default.drawerBody, hasNoPadding && drawer_default.modifiers.noPadding, className) }, props), children);
};
DrawerPanelBody.displayName = "DrawerPanelBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerHead.js
var DrawerHead = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    children,
    hasNoPadding = false
  } = _a, props = __rest(_a, ["className", "children", "hasNoPadding"]);
  return React98.createElement(
    DrawerPanelBody,
    { hasNoPadding },
    React98.createElement("div", Object.assign({ className: css(drawer_default.drawerHead, className) }, props), children)
  );
};
DrawerHead.displayName = "DrawerHead";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerPanelContent.js
var React99 = __toESM(require_react());
var isResizing = null;
var newSize = 0;
var DrawerPanelContent = (_a) => {
  var { className = "", id, children, hasNoBorder = false, isResizable = false, onResize, minSize, defaultSize, maxSize, increment = 5, resizeAriaLabel = "Resize", widths, colorVariant = DrawerColorVariant.default } = _a, props = __rest(_a, ["className", "id", "children", "hasNoBorder", "isResizable", "onResize", "minSize", "defaultSize", "maxSize", "increment", "resizeAriaLabel", "widths", "colorVariant"]);
  const panel = React99.useRef();
  const splitterRef = React99.useRef();
  const [separatorValue, setSeparatorValue] = React99.useState(0);
  const { position, isExpanded, isStatic, onExpand, drawerRef, drawerContentRef, isInline } = React99.useContext(DrawerContext);
  const hidden = isStatic ? false : !isExpanded;
  const [isExpandedInternal, setIsExpandedInternal] = React99.useState(!hidden);
  let currWidth = 0;
  let panelRect;
  let right;
  let left;
  let bottom;
  let setInitialVals = true;
  React99.useEffect(() => {
    if (!isStatic && isExpanded) {
      setIsExpandedInternal(isExpanded);
    }
  }, [isStatic, isExpanded]);
  const calcValueNow = () => {
    let splitterPos;
    let drawerSize;
    if (isInline && position === "right") {
      splitterPos = panel.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;
      drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;
    } else if (isInline && position === "left") {
      splitterPos = splitterRef.current.getBoundingClientRect().right - panel.current.getBoundingClientRect().left;
      drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;
    } else if (position === "right") {
      splitterPos = drawerContentRef.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;
      drawerSize = drawerContentRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;
    } else if (position === "left") {
      splitterPos = splitterRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;
      drawerSize = drawerContentRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;
    } else if (position === "bottom") {
      splitterPos = drawerContentRef.current.getBoundingClientRect().bottom - splitterRef.current.getBoundingClientRect().top;
      drawerSize = drawerContentRef.current.getBoundingClientRect().bottom - drawerContentRef.current.getBoundingClientRect().top;
    }
    const newSplitterPos = splitterPos / drawerSize * 100;
    return Math.round((newSplitterPos + Number.EPSILON) * 100) / 100;
  };
  const handleTouchStart = (e) => {
    e.stopPropagation();
    document.addEventListener("touchmove", callbackTouchMove, { passive: false });
    document.addEventListener("touchend", callbackTouchEnd);
    isResizing = true;
  };
  const handleMousedown = (e) => {
    e.stopPropagation();
    e.preventDefault();
    document.addEventListener("mousemove", callbackMouseMove);
    document.addEventListener("mouseup", callbackMouseUp);
    drawerRef.current.classList.add(css(drawer_default.modifiers.resizing));
    isResizing = true;
    setInitialVals = true;
  };
  const handleMouseMove = (e) => {
    const mousePos = position === "bottom" ? e.clientY : e.clientX;
    handleControlMove(e, mousePos);
  };
  const handleTouchMove = (e) => {
    e.preventDefault();
    e.stopImmediatePropagation();
    const touchPos = position === "bottom" ? e.touches[0].clientY : e.touches[0].clientX;
    handleControlMove(e, touchPos);
  };
  const handleControlMove = (e, controlPosition) => {
    e.stopPropagation();
    if (!isResizing) {
      return;
    }
    if (setInitialVals) {
      panelRect = panel.current.getBoundingClientRect();
      right = panelRect.right;
      left = panelRect.left;
      bottom = panelRect.bottom;
      setInitialVals = false;
    }
    const mousePos = controlPosition;
    let newSize2 = 0;
    if (position === "right") {
      newSize2 = right - mousePos;
    } else if (position === "left") {
      newSize2 = mousePos - left;
    } else {
      newSize2 = bottom - mousePos;
    }
    if (position === "bottom") {
      panel.current.style.overflowAnchor = "none";
    }
    panel.current.style.setProperty("--pf-c-drawer__panel--md--FlexBasis", newSize2 + "px");
    currWidth = newSize2;
    setSeparatorValue(calcValueNow());
  };
  const handleMouseup = () => {
    if (!isResizing) {
      return;
    }
    drawerRef.current.classList.remove(css(drawer_default.modifiers.resizing));
    isResizing = false;
    onResize && onResize(currWidth, id);
    setInitialVals = true;
    document.removeEventListener("mousemove", callbackMouseMove);
    document.removeEventListener("mouseup", callbackMouseUp);
  };
  const handleTouchEnd = (e) => {
    e.stopPropagation();
    if (!isResizing) {
      return;
    }
    isResizing = false;
    onResize && onResize(currWidth, id);
    document.removeEventListener("touchmove", callbackTouchMove);
    document.removeEventListener("touchend", callbackTouchEnd);
  };
  const callbackMouseMove = React99.useCallback(handleMouseMove, []);
  const callbackTouchEnd = React99.useCallback(handleTouchEnd, []);
  const callbackTouchMove = React99.useCallback(handleTouchMove, []);
  const callbackMouseUp = React99.useCallback(handleMouseup, []);
  const handleKeys = (e) => {
    const key = e.key;
    if (key !== "Escape" && key !== "Enter" && key !== "ArrowUp" && key !== "ArrowDown" && key !== "ArrowLeft" && key !== "ArrowRight") {
      if (isResizing) {
        e.preventDefault();
      }
      return;
    }
    e.preventDefault();
    if (key === "Escape" || key === "Enter") {
      onResize && onResize(currWidth, id);
    }
    const panelRect2 = panel.current.getBoundingClientRect();
    newSize = position === "bottom" ? panelRect2.height : panelRect2.width;
    let delta = 0;
    if (key === "ArrowRight") {
      delta = position === "left" ? increment : -increment;
    } else if (key === "ArrowLeft") {
      delta = position === "left" ? -increment : increment;
    } else if (key === "ArrowUp") {
      delta = increment;
    } else if (key === "ArrowDown") {
      delta = -increment;
    }
    newSize = newSize + delta;
    if (position === "bottom") {
      panel.current.style.overflowAnchor = "none";
    }
    panel.current.style.setProperty("--pf-c-drawer__panel--md--FlexBasis", newSize + "px");
    currWidth = newSize;
    setSeparatorValue(calcValueNow());
  };
  const boundaryCssVars = {};
  if (defaultSize) {
    boundaryCssVars["--pf-c-drawer__panel--md--FlexBasis"] = defaultSize;
  }
  if (minSize) {
    boundaryCssVars["--pf-c-drawer__panel--md--FlexBasis--min"] = minSize;
  }
  if (maxSize) {
    boundaryCssVars["--pf-c-drawer__panel--md--FlexBasis--max"] = maxSize;
  }
  return React99.createElement(GenerateId, { prefix: "pf-drawer-panel-" }, (panelId) => React99.createElement("div", Object.assign({ id: id || panelId, className: css(drawer_default.drawerPanel, isResizable && drawer_default.modifiers.resizable, hasNoBorder && drawer_default.modifiers.noBorder, formatBreakpointMods(widths, drawer_default), colorVariant === DrawerColorVariant.light200 && drawer_default.modifiers.light_200, className), ref: panel, onTransitionEnd: (ev) => {
    if (!hidden && ev.nativeEvent.propertyName === "transform") {
      onExpand();
    }
    setIsExpandedInternal(!hidden);
  }, hidden }, (defaultSize || minSize || maxSize) && {
    style: boundaryCssVars
  }, props), isExpandedInternal && React99.createElement(
    React99.Fragment,
    null,
    isResizable && React99.createElement(
      React99.Fragment,
      null,
      React99.createElement(
        "div",
        { className: css(drawer_default.drawerSplitter, position !== "bottom" && drawer_default.modifiers.vertical), role: "separator", tabIndex: 0, "aria-orientation": position === "bottom" ? "horizontal" : "vertical", "aria-label": resizeAriaLabel, "aria-valuenow": separatorValue, "aria-valuemin": 0, "aria-valuemax": 100, "aria-controls": id || panelId, onMouseDown: handleMousedown, onKeyDown: handleKeys, onTouchStart: handleTouchStart, ref: splitterRef },
        React99.createElement("div", { className: css(drawer_default.drawerSplitterHandle), "aria-hidden": true })
      ),
      React99.createElement("div", { className: css(drawer_default.drawerPanelMain) }, children)
    ),
    !isResizable && children
  )));
};
DrawerPanelContent.displayName = "DrawerPanelContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerSection.js
var React100 = __toESM(require_react());
var DrawerSection = (_a) => {
  var {
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = "",
    children,
    colorVariant = DrawerColorVariant.default
  } = _a, props = __rest(_a, ["className", "children", "colorVariant"]);
  return React100.createElement("div", Object.assign({ className: css(drawer_default.drawerSection, colorVariant === DrawerColorVariant.light200 && drawer_default.modifiers.light_200, className) }, props), children);
};
DrawerSection.displayName = "DrawerSection";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelector.js
var React131 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DualListSelector/dual-list-selector.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DualListSelector/dual-list-selector.css";
var dual_list_selector_default = {
  "badge": "pf-c-badge",
  "button": "pf-c-button",
  "dualListSelector": "pf-c-dual-list-selector",
  "dualListSelectorControls": "pf-c-dual-list-selector__controls",
  "dualListSelectorDraggable": "pf-c-dual-list-selector__draggable",
  "dualListSelectorHeader": "pf-c-dual-list-selector__header",
  "dualListSelectorItem": "pf-c-dual-list-selector__item",
  "dualListSelectorItemCheck": "pf-c-dual-list-selector__item-check",
  "dualListSelectorItemCount": "pf-c-dual-list-selector__item-count",
  "dualListSelectorItemMain": "pf-c-dual-list-selector__item-main",
  "dualListSelectorItemText": "pf-c-dual-list-selector__item-text",
  "dualListSelectorItemToggle": "pf-c-dual-list-selector__item-toggle",
  "dualListSelectorItemToggleIcon": "pf-c-dual-list-selector__item-toggle-icon",
  "dualListSelectorList": "pf-c-dual-list-selector__list",
  "dualListSelectorListItem": "pf-c-dual-list-selector__list-item",
  "dualListSelectorListItemRow": "pf-c-dual-list-selector__list-item-row",
  "dualListSelectorMain": "pf-c-dual-list-selector__main",
  "dualListSelectorMenu": "pf-c-dual-list-selector__menu",
  "dualListSelectorPane": "pf-c-dual-list-selector__pane",
  "dualListSelectorStatus": "pf-c-dual-list-selector__status",
  "dualListSelectorStatusText": "pf-c-dual-list-selector__status-text",
  "dualListSelectorTitleText": "pf-c-dual-list-selector__title-text",
  "dualListSelectorTools": "pf-c-dual-list-selector__tools",
  "dualListSelectorToolsActions": "pf-c-dual-list-selector__tools-actions",
  "dualListSelectorToolsFilter": "pf-c-dual-list-selector__tools-filter",
  "modifiers": {
    "chosen": "pf-m-chosen",
    "dragOver": "pf-m-drag-over",
    "expandable": "pf-m-expandable",
    "expanded": "pf-m-expanded",
    "disabled": "pf-m-disabled",
    "selected": "pf-m-selected",
    "check": "pf-m-check",
    "ghostRow": "pf-m-ghost-row",
    "read": "pf-m-read"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorPane.js
var React128 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorTree.js
var React103 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorTreeItem.js
var React102 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/treeUtils.js
function flattenTree(tree) {
  let result = [];
  tree.forEach((item) => {
    if (item.children) {
      result = result.concat(flattenTree(item.children));
    } else {
      result.push(item.id);
    }
  });
  return result;
}
function flattenTreeWithFolders(tree) {
  let result = [];
  tree.forEach((item) => {
    result.push(item.id);
    if (item.children) {
      result = result.concat(flattenTreeWithFolders(item.children));
    }
  });
  return result;
}
function filterFolders(tree, inputList) {
  let result = [];
  tree.forEach((item) => {
    if (item.children) {
      result = result.concat(filterFolders(item.children, inputList));
    } else {
      if (inputList.includes(item.id)) {
        result.push(item.id);
      }
    }
  });
  return result;
}
function filterTreeItems(item, inputList) {
  if (inputList.includes(item.id)) {
    return true;
  }
  if (item.children) {
    return (item.children = item.children.map((opt) => Object.assign({}, opt)).filter((child) => filterTreeItems(child, inputList))).length > 0;
  }
}
function filterTreeItemsWithoutFolders(item, inputList) {
  if (item.children) {
    return (item.children = item.children.map((opt) => Object.assign({}, opt)).filter((child) => child.children ? filterTreeItemsWithoutFolders(child, inputList) : filterTreeItems(child, inputList))).length > 0;
  }
  if (inputList.includes(item.id)) {
    return true;
  }
}
function filterRestTreeItems(item, inputList) {
  if (item.children) {
    const child = (item.children = item.children.map((opt) => Object.assign({}, opt)).filter((child2) => filterRestTreeItems(child2, inputList))).length > 0;
    return child;
  }
  if (!inputList.includes(item.id)) {
    return true;
  }
}

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorContext.js
var React101 = __toESM(require_react());
var DualListSelectorContext = React101.createContext({ isTree: false });
var DualListSelectorListContext = React101.createContext({});
var DualListSelectorPaneContext = React101.createContext({ isChosen: false });

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorTreeItem.js
var DualListSelectorTreeItemBase = (_a) => {
  var {
    onOptionCheck,
    children,
    className,
    id,
    text,
    defaultExpanded,
    hasBadge,
    isChecked,
    checkProps,
    badgeProps,
    itemData,
    isDisabled = false,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    useMemo: useMemo4
  } = _a, props = __rest(_a, ["onOptionCheck", "children", "className", "id", "text", "defaultExpanded", "hasBadge", "isChecked", "checkProps", "badgeProps", "itemData", "isDisabled", "useMemo"]);
  const ref = React102.useRef(null);
  const [isExpanded, setIsExpanded] = React102.useState(defaultExpanded || false);
  const { setFocusedOption } = React102.useContext(DualListSelectorListContext);
  React102.useEffect(() => {
    setIsExpanded(defaultExpanded);
  }, [defaultExpanded]);
  return React102.createElement(
    "li",
    Object.assign({ className: css(dual_list_selector_default.dualListSelectorListItem, className, children && dual_list_selector_default.modifiers.expandable, isExpanded && dual_list_selector_default.modifiers.expanded, isDisabled && dual_list_selector_default.modifiers.disabled), id }, props, { "aria-selected": isChecked, role: "treeitem" }, isExpanded && { "aria-expanded": "true" }),
    React102.createElement(
      "div",
      { className: css(dual_list_selector_default.dualListSelectorListItemRow, isChecked && dual_list_selector_default.modifiers.selected, dual_list_selector_default.modifiers.check) },
      React102.createElement(
        "div",
        { className: css(dual_list_selector_default.dualListSelectorItem), ref, tabIndex: -1, onClick: isDisabled ? void 0 : (evt) => {
          onOptionCheck && onOptionCheck(evt, !isChecked, itemData);
          setFocusedOption(id);
        } },
        React102.createElement(
          "span",
          { className: css(dual_list_selector_default.dualListSelectorItemMain) },
          children && React102.createElement(
            "div",
            { className: css(dual_list_selector_default.dualListSelectorItemToggle), onClick: (e) => {
              if (children) {
                setIsExpanded(!isExpanded);
              }
              e.stopPropagation();
            }, onKeyDown: (e) => {
              if (e.key === " " || e.key === "Enter") {
                document.activeElement.click();
                e.preventDefault();
              }
            }, tabIndex: -1 },
            React102.createElement(
              "span",
              { className: css(dual_list_selector_default.dualListSelectorItemToggleIcon) },
              React102.createElement(angle_right_icon_default, { "aria-hidden": true })
            )
          ),
          React102.createElement(
            "span",
            { className: css(dual_list_selector_default.dualListSelectorItemCheck) },
            React102.createElement("input", Object.assign({ type: "checkbox", onChange: (evt) => {
              onOptionCheck && onOptionCheck(evt, !isChecked, itemData);
              setFocusedOption(id);
            }, onClick: (evt) => evt.stopPropagation(), onKeyDown: (e) => {
              if (e.key === " " || e.key === "Enter") {
                onOptionCheck && onOptionCheck(e, !isChecked, itemData);
                setFocusedOption(id);
                e.preventDefault();
              }
            }, ref: (elem) => elem && (elem.indeterminate = isChecked === null), checked: isChecked || false, tabIndex: -1 }, checkProps))
          ),
          React102.createElement("span", { className: css(dual_list_selector_default.dualListSelectorItemText) }, text),
          hasBadge && children && React102.createElement(
            "span",
            { className: css(dual_list_selector_default.dualListSelectorItemCount) },
            React102.createElement(Badge, Object.assign({}, badgeProps), flattenTree(children.props.data).length)
          )
        )
      )
    ),
    isExpanded && children
  );
};
var DualListSelectorTreeItem = React102.memo(DualListSelectorTreeItemBase, (prevProps, nextProps) => {
  if (!nextProps.useMemo) {
    return false;
  }
  if (prevProps.className !== nextProps.className || prevProps.text !== nextProps.text || prevProps.id !== nextProps.id || prevProps.defaultExpanded !== nextProps.defaultExpanded || prevProps.checkProps !== nextProps.checkProps || prevProps.hasBadge !== nextProps.hasBadge || prevProps.badgeProps !== nextProps.badgeProps || prevProps.isChecked !== nextProps.isChecked || prevProps.itemData !== nextProps.itemData) {
    return false;
  }
  return true;
});
DualListSelectorTreeItem.displayName = "DualListSelectorTreeItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorTree.js
var DualListSelectorTree = (_a) => {
  var { data, hasBadges = false, isNested = false, defaultAllExpanded = false, onOptionCheck, isDisabled = false } = _a, props = __rest(_a, ["data", "hasBadges", "isNested", "defaultAllExpanded", "onOptionCheck", "isDisabled"]);
  const dataToRender = typeof data === "function" ? data() : data;
  const tree = dataToRender.map((item) => React103.createElement(DualListSelectorTreeItem, Object.assign({ key: item.id, text: item.text, id: item.id, defaultExpanded: item.defaultExpanded !== void 0 ? item.defaultExpanded : defaultAllExpanded, onOptionCheck, isChecked: item.isChecked, checkProps: item.checkProps, hasBadge: item.hasBadge !== void 0 ? item.hasBadge : hasBadges, badgeProps: item.badgeProps, itemData: item, isDisabled, useMemo: true }, item.children && {
    children: React103.createElement(DualListSelectorTree, { isNested: true, data: item.children, hasBadges, defaultAllExpanded, onOptionCheck, isDisabled })
  })));
  return isNested ? React103.createElement("ul", Object.assign({ className: css(dual_list_selector_default.dualListSelectorList), role: "group" }, props), tree) : React103.createElement(React103.Fragment, null, tree);
};
DualListSelectorTree.displayName = "DualListSelectorTree";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorListWrapper.js
var React106 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorListItem.js
var React104 = __toESM(require_react());
var DualListSelectorListItemBase = (_a) => {
  var {
    onOptionSelect,
    orderIndex,
    children,
    className,
    id = getUniqueId("dual-list-selector-list-item"),
    isSelected,
    innerRef,
    isDraggable = false,
    isDisabled,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    draggableButtonAriaLabel = "Reorder option"
  } = _a, props = __rest(_a, ["onOptionSelect", "orderIndex", "children", "className", "id", "isSelected", "innerRef", "isDraggable", "isDisabled", "draggableButtonAriaLabel"]);
  const privateRef = React104.useRef(null);
  const ref = innerRef || privateRef;
  const { setFocusedOption } = React104.useContext(DualListSelectorListContext);
  return React104.createElement(
    "li",
    Object.assign({ className: css(dual_list_selector_default.dualListSelectorListItem, className, isDisabled && dual_list_selector_default.modifiers.disabled), key: orderIndex, onClick: isDisabled ? void 0 : (e) => {
      setFocusedOption(id);
      onOptionSelect(e, id);
    }, onKeyDown: (e) => {
      if (e.key === " " || e.key === "Enter") {
        document.activeElement.click();
        e.preventDefault();
      }
    }, "aria-selected": isSelected, id, ref, role: "option", tabIndex: -1 }, props),
    React104.createElement(
      "div",
      { className: css(dual_list_selector_default.dualListSelectorListItemRow, isSelected && dual_list_selector_default.modifiers.selected) },
      isDraggable && !isDisabled && React104.createElement(
        "div",
        { className: css(dual_list_selector_default.dualListSelectorDraggable) },
        React104.createElement(
          Button,
          { variant: ButtonVariant.plain, component: "span" },
          React104.createElement(grip_vertical_icon_default, { style: { verticalAlign: "-0.3em" } })
        )
      ),
      React104.createElement(
        "span",
        { className: css(dual_list_selector_default.dualListSelectorItem) },
        React104.createElement(
          "span",
          { className: css(dual_list_selector_default.dualListSelectorItemMain) },
          React104.createElement("span", { className: css(dual_list_selector_default.dualListSelectorItemText) }, children)
        )
      )
    )
  );
};
DualListSelectorListItemBase.displayName = "DualListSelectorListItemBase";
var DualListSelectorListItem = React104.forwardRef((props, ref) => React104.createElement(DualListSelectorListItemBase, Object.assign({ innerRef: ref }, props)));
DualListSelectorListItem.displayName = "DualListSelectorListItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorList.js
var React105 = __toESM(require_react());
var DualListSelectorList = (_a) => {
  var { children } = _a, props = __rest(_a, ["children"]);
  const { setFocusedOption, isTree, ariaLabelledBy, focusedOption, displayOption, selectedOptions, id, onOptionSelect, options, isDisabled } = React105.useContext(DualListSelectorListContext);
  const onOptionClick = (e, index, id2) => {
    setFocusedOption(id2);
    onOptionSelect(e, index, id2);
  };
  const hasOptions = () => options.length !== 0 || children !== void 0 && children.length !== 0;
  return React105.createElement("ul", Object.assign({ className: css(dual_list_selector_default.dualListSelectorList) }, hasOptions() && {
    role: isTree ? "tree" : "listbox",
    "aria-multiselectable": true,
    "aria-labelledby": ariaLabelledBy,
    "aria-activedescendant": focusedOption
  }, { "aria-disabled": isDisabled ? "true" : void 0 }, props), options.length === 0 ? children : options.map((option, index) => {
    if (displayOption(option)) {
      return React105.createElement(DualListSelectorListItem, { key: index, isSelected: selectedOptions.indexOf(index) !== -1, id: `${id}-option-${index}`, onOptionSelect: (e, id2) => onOptionClick(e, index, id2), orderIndex: index, isDisabled }, option);
    }
    return;
  }));
};
DualListSelectorList.displayName = "DualListSelectorList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorListWrapper.js
var DualListSelectorListWrapperBase = (_a) => {
  var { className, children, "aria-labelledby": ariaLabelledBy, innerRef, options = [], selectedOptions = [], onOptionSelect, displayOption, id = getUniqueId("dual-list-selector-list"), isDisabled = false } = _a, props = __rest(_a, ["className", "children", "aria-labelledby", "innerRef", "options", "selectedOptions", "onOptionSelect", "displayOption", "id", "isDisabled"]);
  const [focusedOption, setFocusedOption] = React106.useState("");
  const ref = React106.useRef(null);
  const menuRef = innerRef || ref;
  const { isTree } = React106.useContext(DualListSelectorContext);
  const handleKeys = (event) => {
    if (!menuRef.current || menuRef.current !== event.target.closest(".pf-c-dual-list-selector__menu") && !Array.from(menuRef.current.getElementsByClassName("pf-c-dual-list-selector__menu")).includes(event.target.closest(".pf-c-dual-list-selector__menu"))) {
      return;
    }
    event.stopImmediatePropagation();
    const validOptions = isTree ? Array.from(menuRef.current.querySelectorAll(".pf-c-dual-list-selector__item-toggle, .pf-c-dual-list-selector__item-check > input")) : Array.from(menuRef.current.getElementsByTagName("LI")).filter((el) => !el.classList.contains("pf-m-disabled"));
    const activeElement = document.activeElement;
    handleArrows(event, validOptions, (element) => activeElement.contains(element), (element) => {
      if (element.classList.contains(".pf-c-dual-list-selector__list-item")) {
        setFocusedOption(element.id);
      } else {
        setFocusedOption(element.closest(".pf-c-dual-list-selector__list-item").id);
      }
      return element;
    }, [".pf-c-dual-list-selector__item-toggle", ".pf-c-dual-list-selector__item-check > input"], void 0, false, false, false);
  };
  React106.useEffect(() => {
    window.addEventListener("keydown", handleKeys);
    return () => {
      window.removeEventListener("keydown", handleKeys);
    };
  }, [menuRef.current]);
  return React106.createElement(
    "div",
    Object.assign({ className: css(dual_list_selector_default.dualListSelectorMenu, className), ref: menuRef, tabIndex: 0 }, props),
    React106.createElement(DualListSelectorListContext.Provider, { value: {
      setFocusedOption,
      isTree,
      focusedOption,
      ariaLabelledBy,
      displayOption,
      selectedOptions,
      id,
      options,
      onOptionSelect,
      isDisabled
    } }, children ? children : React106.createElement(DualListSelectorList, null))
  );
};
DualListSelectorListWrapperBase.displayName = "DualListSelectorListWrapperBase";
var DualListSelectorListWrapper = React106.forwardRef((props, ref) => React106.createElement(DualListSelectorListWrapperBase, Object.assign({ innerRef: ref }, props)));
DualListSelectorListWrapper.displayName = "DualListSelectorListWrapper";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SearchInput/SearchInput.js
var React127 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SearchInput/AdvancedSearchMenu.js
var React123 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/ActionGroup.js
var React107 = __toESM(require_react());
var ActionGroup = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  const customClassName = css(form_default.formGroup, form_default.modifiers.action, className);
  const formActionsComponent = React107.createElement("div", { className: css(form_default.formActions) }, children);
  return React107.createElement(
    "div",
    Object.assign({}, props, { className: customClassName }),
    React107.createElement("div", { className: css(form_default.formGroupControl) }, formActionsComponent)
  );
};
ActionGroup.displayName = "ActionGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/Form.js
var React108 = __toESM(require_react());
var FormBase = (_a) => {
  var { children = null, className = "", isHorizontal = false, isWidthLimited = false, maxWidth = "", innerRef } = _a, props = __rest(_a, ["children", "className", "isHorizontal", "isWidthLimited", "maxWidth", "innerRef"]);
  return React108.createElement("form", Object.assign({ noValidate: true }, maxWidth && {
    style: Object.assign({ "--pf-c-form--m-limit-width--MaxWidth": maxWidth }, props.style)
  }, props, { className: css(form_default.form, isHorizontal && form_default.modifiers.horizontal, (isWidthLimited || maxWidth) && form_default.modifiers.limitWidth, className), ref: innerRef }), children);
};
var Form = React108.forwardRef((props, ref) => React108.createElement(FormBase, Object.assign({ innerRef: ref }, props)));
Form.displayName = "Form";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormAlert.js
var React109 = __toESM(require_react());
var FormAlert = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return (
    // There are currently no associated styles with the pf-c-form_alert class.
    // Therefore, it does not exist in react-styles
    React109.createElement("div", Object.assign({}, props, { className: css("pf-c-form__alert", className) }), children)
  );
};
FormAlert.displayName = "FormAlert";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroup.js
var React112 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/InternalFormFieldGroup.js
var React111 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroupToggle.js
var React110 = __toESM(require_react());
var FormFieldGroupToggle = (_a) => {
  var { className, onToggle, isExpanded, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, toggleId } = _a, props = __rest(_a, ["className", "onToggle", "isExpanded", "aria-label", "aria-labelledby", "toggleId"]);
  return React110.createElement(
    "div",
    Object.assign({ className: css(form_default.formFieldGroupToggle, className) }, props),
    React110.createElement(
      "div",
      { className: css(form_default.formFieldGroupToggleButton) },
      React110.createElement(
        Button,
        { variant: "plain", "aria-label": ariaLabel, onClick: onToggle, "aria-expanded": isExpanded, "aria-labelledby": ariaLabelledby, id: toggleId },
        React110.createElement(
          "span",
          { className: css(form_default.formFieldGroupToggleIcon) },
          React110.createElement(angle_right_icon_default, { "aria-hidden": "true" })
        )
      )
    )
  );
};
FormFieldGroupToggle.displayName = "FormFieldGroupToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/InternalFormFieldGroup.js
var InternalFormFieldGroup = (_a) => {
  var { children, className, header, isExpandable, isExpanded, onToggle, toggleAriaLabel } = _a, props = __rest(_a, ["children", "className", "header", "isExpandable", "isExpanded", "onToggle", "toggleAriaLabel"]);
  const headerTitleText = header ? header.props.titleText : null;
  if (isExpandable && !toggleAriaLabel && !headerTitleText) {
    console.error("FormFieldGroupExpandable:", "toggleAriaLabel or the titleText prop of FormFieldGroupHeader is required to make the toggle button accessible");
  }
  return React111.createElement(
    "div",
    Object.assign({ className: css(form_default.formFieldGroup, isExpanded && isExpandable && form_default.modifiers.expanded, className), role: "group" }, headerTitleText && { "aria-labelledby": `${header.props.titleText.id}` }, props),
    isExpandable && React111.createElement(GenerateId, { prefix: "form-field-group-toggle" }, (id) => React111.createElement(FormFieldGroupToggle, Object.assign({ onToggle, isExpanded, "aria-label": toggleAriaLabel, toggleId: id }, headerTitleText && { "aria-labelledby": `${header.props.titleText.id} ${id}` }))),
    header && header,
    (!isExpandable || isExpandable && isExpanded) && React111.createElement("div", { className: css(form_default.formFieldGroupBody) }, children)
  );
};
InternalFormFieldGroup.displayName = "InternalFormFieldGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroup.js
var FormFieldGroup = (_a) => {
  var { children, className, header } = _a, props = __rest(_a, ["children", "className", "header"]);
  return React112.createElement(InternalFormFieldGroup, Object.assign({ className, header }, props), children);
};
FormFieldGroup.displayName = "FormFieldGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroupExpandable.js
var React113 = __toESM(require_react());
var import_react4 = __toESM(require_react());
var FormFieldGroupExpandable = (_a) => {
  var { children, className, header, isExpanded = false, toggleAriaLabel } = _a, props = __rest(_a, ["children", "className", "header", "isExpanded", "toggleAriaLabel"]);
  const [localIsExpanded, setIsExpanded] = (0, import_react4.useState)(isExpanded);
  return React113.createElement(InternalFormFieldGroup, Object.assign({ className, header, isExpandable: true, isExpanded: localIsExpanded, toggleAriaLabel, onToggle: () => setIsExpanded(!localIsExpanded) }, props), children);
};
FormFieldGroupExpandable.displayName = "FormFieldGroupExpandable";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormFieldGroupHeader.js
var React114 = __toESM(require_react());
var FormFieldGroupHeader = (_a) => {
  var { className, titleText, titleDescription, actions } = _a, props = __rest(_a, ["className", "titleText", "titleDescription", "actions"]);
  return React114.createElement(
    "div",
    Object.assign({ className: css(form_default.formFieldGroupHeader, className) }, props),
    React114.createElement(
      "div",
      { className: css(form_default.formFieldGroupHeaderMain) },
      titleText && React114.createElement(
        "div",
        { className: css(form_default.formFieldGroupHeaderTitle) },
        React114.createElement("div", { className: css(form_default.formFieldGroupHeaderTitleText), id: titleText.id }, titleText.text)
      ),
      titleDescription && React114.createElement("div", { className: css(form_default.formFieldGroupHeaderDescription) }, titleDescription)
    ),
    React114.createElement("div", { className: css(form_default.formFieldGroupHeaderActions) }, actions && actions)
  );
};
FormFieldGroupHeader.displayName = "FormFieldGroupHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormGroup.js
var React115 = __toESM(require_react());
var FormGroup = (_a) => {
  var { children = null, className = "", label, labelInfo, labelIcon, isRequired = false, validated = "default", isInline = false, hasNoPaddingTop = false, isStack = false, helperText, isHelperTextBeforeField = false, helperTextInvalid, helperTextIcon, helperTextInvalidIcon, fieldId, role } = _a, props = __rest(_a, ["children", "className", "label", "labelInfo", "labelIcon", "isRequired", "validated", "isInline", "hasNoPaddingTop", "isStack", "helperText", "isHelperTextBeforeField", "helperTextInvalid", "helperTextIcon", "helperTextInvalidIcon", "fieldId", "role"]);
  const validHelperText = typeof helperText !== "string" ? helperText : React115.createElement(
    "div",
    { className: css(form_default.formHelperText, validated === ValidatedOptions.success && form_default.modifiers.success, validated === ValidatedOptions.warning && form_default.modifiers.warning), id: `${fieldId}-helper`, "aria-live": "polite" },
    helperTextIcon && React115.createElement("span", { className: css(form_default.formHelperTextIcon) }, helperTextIcon),
    helperText
  );
  const inValidHelperText = typeof helperTextInvalid !== "string" ? helperTextInvalid : React115.createElement(
    "div",
    { className: css(form_default.formHelperText, form_default.modifiers.error), id: `${fieldId}-helper`, "aria-live": "polite" },
    helperTextInvalidIcon && React115.createElement("span", { className: css(form_default.formHelperTextIcon) }, helperTextInvalidIcon),
    helperTextInvalid
  );
  const showValidHelperTxt = (validationType) => validationType !== ValidatedOptions.error && helperText ? validHelperText : "";
  const helperTextToDisplay = validated === ValidatedOptions.error && helperTextInvalid ? inValidHelperText : showValidHelperTxt(validated);
  const isGroupOrRadioGroup = role === "group" || role === "radiogroup";
  const LabelComponent = isGroupOrRadioGroup ? "span" : "label";
  const labelContent = React115.createElement(
    React115.Fragment,
    null,
    React115.createElement(
      LabelComponent,
      Object.assign({ className: css(form_default.formLabel) }, !isGroupOrRadioGroup && { htmlFor: fieldId }),
      React115.createElement("span", { className: css(form_default.formLabelText) }, label),
      isRequired && React115.createElement(
        "span",
        { className: css(form_default.formLabelRequired), "aria-hidden": "true" },
        " ",
        ASTERISK
      )
    ),
    " ",
    React115.isValidElement(labelIcon) && labelIcon
  );
  return React115.createElement(GenerateId, null, (randomId) => React115.createElement(
    "div",
    Object.assign({ className: css(form_default.formGroup, className) }, role && { role }, isGroupOrRadioGroup && { "aria-labelledby": `${fieldId || randomId}-legend` }, props),
    label && React115.createElement(
      "div",
      Object.assign({ className: css(form_default.formGroupLabel, labelInfo && form_default.modifiers.info, hasNoPaddingTop && form_default.modifiers.noPaddingTop) }, isGroupOrRadioGroup && { id: `${fieldId || randomId}-legend` }),
      labelInfo && React115.createElement(
        React115.Fragment,
        null,
        React115.createElement("div", { className: css(form_default.formGroupLabelMain) }, labelContent),
        React115.createElement("div", { className: css(form_default.formGroupLabelInfo) }, labelInfo)
      ),
      !labelInfo && labelContent
    ),
    React115.createElement(
      "div",
      { className: css(form_default.formGroupControl, isInline && form_default.modifiers.inline, isStack && form_default.modifiers.stack) },
      isHelperTextBeforeField && helperTextToDisplay,
      children,
      !isHelperTextBeforeField && helperTextToDisplay
    )
  ));
};
FormGroup.displayName = "FormGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormHelperText.js
var React116 = __toESM(require_react());
var FormHelperText = (_a) => {
  var { children = null, isError = false, isHidden = true, className = "", icon = null, component = "p" } = _a, props = __rest(_a, ["children", "isError", "isHidden", "className", "icon", "component"]);
  const Component47 = component;
  return React116.createElement(
    Component47,
    Object.assign({ className: css(form_default.formHelperText, isError && form_default.modifiers.error, isHidden && form_default.modifiers.hidden, className) }, props),
    icon && React116.createElement("span", { className: css(form_default.formHelperTextIcon) }, icon),
    children
  );
};
FormHelperText.displayName = "FormHelperText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Form/FormSection.js
var React117 = __toESM(require_react());
var FormSection = (_a) => {
  var { className = "", children, title = "", titleElement: TitleElement = "div" } = _a, props = __rest(_a, ["className", "children", "title", "titleElement"]);
  return React117.createElement(GenerateId, { prefix: "pf-form-section-title" }, (sectionId) => React117.createElement(
    "section",
    Object.assign({ className: css(form_default.formSection, className), role: "group" }, title && { "aria-labelledby": sectionId }, props),
    title && React117.createElement(TitleElement, { id: sectionId, className: css(form_default.formSectionTitle, className) }, title),
    children
  ));
};
FormSection.displayName = "FormSection";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Panel/Panel.js
var React118 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Panel/panel.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Panel/panel.css";
var panel_default = {
  "modifiers": {
    "bordered": "pf-m-bordered",
    "raised": "pf-m-raised",
    "scrollable": "pf-m-scrollable"
  },
  "panel": "pf-c-panel",
  "panelFooter": "pf-c-panel__footer",
  "panelHeader": "pf-c-panel__header",
  "panelMain": "pf-c-panel__main",
  "panelMainBody": "pf-c-panel__main-body"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Panel/Panel.js
var PanelBase = (_a) => {
  var { className, children, variant, isScrollable, innerRef } = _a, props = __rest(_a, ["className", "children", "variant", "isScrollable", "innerRef"]);
  return React118.createElement("div", Object.assign({ className: css(panel_default.panel, variant === "raised" && panel_default.modifiers.raised, variant === "bordered" && panel_default.modifiers.bordered, isScrollable && panel_default.modifiers.scrollable, className), ref: innerRef }, props), children);
};
var Panel = React118.forwardRef((props, ref) => React118.createElement(PanelBase, Object.assign({ innerRef: ref }, props)));
Panel.displayName = "Panel";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Panel/PanelMain.js
var React119 = __toESM(require_react());
var PanelMain = (_a) => {
  var { className, children, maxHeight } = _a, props = __rest(_a, ["className", "children", "maxHeight"]);
  return React119.createElement("div", Object.assign({ className: css(panel_default.panelMain, className), style: { "--pf-c-panel__main--MaxHeight": maxHeight } }, props), children);
};
PanelMain.displayName = "PanelMain";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Panel/PanelMainBody.js
var React120 = __toESM(require_react());
var PanelMainBody = (_a) => {
  var { className, children } = _a, props = __rest(_a, ["className", "children"]);
  return React120.createElement("div", Object.assign({ className: css(panel_default.panelMainBody, className) }, props), children);
};
PanelMainBody.displayName = "PanelMainBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Panel/PanelHeader.js
var React121 = __toESM(require_react());
var PanelHeader = (_a) => {
  var { className, children } = _a, props = __rest(_a, ["className", "children"]);
  return React121.createElement("div", Object.assign({ className: css(panel_default.panelHeader, className) }, props), children);
};
PanelHeader.displayName = "PanelHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Panel/PanelFooter.js
var React122 = __toESM(require_react());
var PanelFooter = (_a) => {
  var { className, children } = _a, props = __rest(_a, ["className", "children"]);
  return React122.createElement("div", Object.assign({ className: css(panel_default.panelFooter, className) }, props), children);
};
PanelFooter.displayName = "PanelFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SearchInput/AdvancedSearchMenu.js
var AdvancedSearchMenu = ({ className, parentRef, parentInputRef, value = "", attributes = [], formAdditionalItems, hasWordsAttrLabel = "Has words", advancedSearchDelimiter, getAttrValueMap, onChange, onSearch, onClear, resetButtonLabel = "Reset", submitSearchButtonLabel = "Search", isSearchMenuOpen, onToggleAdvancedMenu }) => {
  const firstAttrRef = React123.useRef(null);
  const [putFocusBackOnInput, setPutFocusBackOnInput] = React123.useState(false);
  React123.useEffect(() => {
    if (attributes.length > 0 && !advancedSearchDelimiter) {
      console.error("AdvancedSearchMenu: An advancedSearchDelimiter prop is required when advanced search attributes are provided using the attributes prop");
    }
  });
  React123.useEffect(() => {
    if (isSearchMenuOpen && firstAttrRef && firstAttrRef.current) {
      firstAttrRef.current.focus();
      setPutFocusBackOnInput(true);
    } else if (!isSearchMenuOpen && putFocusBackOnInput && parentInputRef && parentInputRef.current) {
      parentInputRef.current.focus();
    }
  }, [isSearchMenuOpen]);
  React123.useEffect(() => {
    document.addEventListener("mousedown", onDocClick);
    document.addEventListener("touchstart", onDocClick);
    document.addEventListener("keydown", onEscPress);
    return function cleanup() {
      document.removeEventListener("mousedown", onDocClick);
      document.removeEventListener("touchstart", onDocClick);
      document.removeEventListener("keydown", onEscPress);
    };
  });
  const onDocClick = (event) => {
    const clickedWithinSearchInput = parentRef && parentRef.current.contains(event.target);
    if (isSearchMenuOpen && !clickedWithinSearchInput) {
      onToggleAdvancedMenu(event);
    }
  };
  const onEscPress = (event) => {
    if (isSearchMenuOpen && event.key === KeyTypes.Escape && parentRef && parentRef.current.contains(event.target)) {
      onToggleAdvancedMenu(event);
      if (parentInputRef) {
        parentInputRef.current.focus();
      }
    }
  };
  const onSearchHandler = (event) => {
    event.preventDefault();
    if (onSearch) {
      onSearch(event, value, getAttrValueMap());
    }
    if (isSearchMenuOpen) {
      onToggleAdvancedMenu(event);
    }
  };
  const handleValueChange = (attribute, newValue, event) => {
    const newMap = getAttrValueMap();
    newMap[attribute] = newValue;
    let updatedValue = "";
    Object.entries(newMap).forEach(([k, v]) => {
      if (v.trim() !== "") {
        const quoteWrappedValue = v.includes(" ") ? `'${v.replace(/(^'|'$)/g, "")}'` : v;
        if (k !== "haswords") {
          updatedValue = `${updatedValue} ${k}${advancedSearchDelimiter}${quoteWrappedValue}`;
        } else {
          updatedValue = `${updatedValue} ${quoteWrappedValue}`;
        }
      }
    });
    if (onChange) {
      onChange(event, updatedValue.replace(/^\s+/g, ""));
    }
  };
  const getValue = (attribute) => {
    const map = getAttrValueMap();
    return map.hasOwnProperty(attribute) ? map[attribute] : "";
  };
  const buildFormGroups = () => {
    const formGroups = [];
    attributes.forEach((attribute, index) => {
      const display = typeof attribute === "string" ? attribute : attribute.display;
      const queryAttr = typeof attribute === "string" ? attribute : attribute.attr;
      if (index === 0) {
        formGroups.push(React123.createElement(
          FormGroup,
          { label: display, fieldId: `${queryAttr}_${index}`, key: `${attribute}_${index}` },
          React123.createElement(TextInput, { ref: firstAttrRef, type: "text", id: `${queryAttr}_${index}`, value: getValue(queryAttr), onChange: (value2, evt) => handleValueChange(queryAttr, value2, evt) })
        ));
      } else {
        formGroups.push(React123.createElement(
          FormGroup,
          { label: display, fieldId: `${queryAttr}_${index}`, key: `${attribute}_${index}` },
          React123.createElement(TextInput, { type: "text", id: `${queryAttr}_${index}`, value: getValue(queryAttr), onChange: (value2, evt) => handleValueChange(queryAttr, value2, evt) })
        ));
      }
    });
    formGroups.push(React123.createElement(GenerateId, { key: "hasWords" }, (randomId) => React123.createElement(
      FormGroup,
      { label: hasWordsAttrLabel, fieldId: randomId },
      React123.createElement(TextInput, { type: "text", id: randomId, value: getValue("haswords"), onChange: (value2, evt) => handleValueChange("haswords", value2, evt) })
    )));
    return formGroups;
  };
  return isSearchMenuOpen ? React123.createElement(
    Panel,
    { variant: "raised", className: css(className) },
    React123.createElement(
      PanelMain,
      null,
      React123.createElement(
        PanelMainBody,
        null,
        React123.createElement(
          Form,
          null,
          buildFormGroups(),
          formAdditionalItems ? formAdditionalItems : null,
          React123.createElement(
            ActionGroup,
            null,
            React123.createElement(Button, { variant: "primary", type: "submit", onClick: onSearchHandler, isDisabled: !value }, submitSearchButtonLabel),
            !!onClear && React123.createElement(Button, { variant: "link", type: "reset", onClick: onClear }, resetButtonLabel)
          )
        )
      )
    )
  ) : null;
};
AdvancedSearchMenu.displayName = "SearchInput";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TextInputGroup/TextInputGroup.js
var React124 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/TextInputGroup/text-input-group.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/TextInputGroup/text-input-group.css";
var text_input_group_default = {
  "button": "pf-c-button",
  "chipGroupMain": "pf-c-chip-group__main",
  "modifiers": {
    "disabled": "pf-m-disabled",
    "plain": "pf-m-plain",
    "icon": "pf-m-icon",
    "hint": "pf-m-hint"
  },
  "textInputGroup": "pf-c-text-input-group",
  "textInputGroupGroup": "pf-c-text-input-group__group",
  "textInputGroupIcon": "pf-c-text-input-group__icon",
  "textInputGroupMain": "pf-c-text-input-group__main",
  "textInputGroupText": "pf-c-text-input-group__text",
  "textInputGroupTextInput": "pf-c-text-input-group__text-input",
  "textInputGroupUtilities": "pf-c-text-input-group__utilities"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TextInputGroup/TextInputGroup.js
var TextInputGroupContext = React124.createContext({
  isDisabled: false
});
var TextInputGroup = (_a) => {
  var { children, className, isDisabled, isPlain, innerRef } = _a, props = __rest(_a, ["children", "className", "isDisabled", "isPlain", "innerRef"]);
  const ref = React124.useRef(null);
  const textInputGroupRef = innerRef || ref;
  return React124.createElement(
    TextInputGroupContext.Provider,
    { value: { isDisabled } },
    React124.createElement("div", Object.assign({ ref: textInputGroupRef, className: css(text_input_group_default.textInputGroup, isDisabled && text_input_group_default.modifiers.disabled, isPlain && text_input_group_default.modifiers.plain, className) }, props), children)
  );
};
TextInputGroup.displayName = "TextInputGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TextInputGroup/TextInputGroupMain.js
var React125 = __toESM(require_react());
var TextInputGroupMain = (_a) => {
  var { children, className, icon, type = "text", hint, onChange = () => void 0, onFocus, onBlur, "aria-label": ariaLabel = "Type to filter", value: inputValue, placeholder: inputPlaceHolder, innerRef, name } = _a, props = __rest(_a, ["children", "className", "icon", "type", "hint", "onChange", "onFocus", "onBlur", "aria-label", "value", "placeholder", "innerRef", "name"]);
  const { isDisabled } = React125.useContext(TextInputGroupContext);
  const ref = React125.useRef(null);
  const textInputGroupInputInputRef = innerRef || ref;
  const handleChange = (event) => {
    onChange(event, event.currentTarget.value);
  };
  return React125.createElement(
    "div",
    Object.assign({ className: css(text_input_group_default.textInputGroupMain, icon && text_input_group_default.modifiers.icon, className) }, props),
    children,
    React125.createElement(
      "span",
      { className: css(text_input_group_default.textInputGroupText) },
      hint && React125.createElement("input", { className: css(text_input_group_default.textInputGroupTextInput, text_input_group_default.modifiers.hint), type: "text", disabled: true, "aria-hidden": "true", value: hint }),
      icon && React125.createElement("span", { className: css(text_input_group_default.textInputGroupIcon) }, icon),
      React125.createElement("input", { ref: textInputGroupInputInputRef, type, className: css(text_input_group_default.textInputGroupTextInput), "aria-label": ariaLabel, disabled: isDisabled, onChange: handleChange, onFocus, onBlur, value: inputValue || "", placeholder: inputPlaceHolder, name })
    )
  );
};
TextInputGroupMain.displayName = "TextInputGroupMain";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TextInputGroup/TextInputGroupUtilities.js
var React126 = __toESM(require_react());
var TextInputGroupUtilities = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React126.createElement("div", Object.assign({ className: css(text_input_group_default.textInputGroupUtilities, className) }, props), children);
};
TextInputGroupUtilities.displayName = "TextInputGroupUtilities";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SearchInput/SearchInput.js
var SearchInputBase = (_a) => {
  var { className, value = "", attributes = [], formAdditionalItems, hasWordsAttrLabel = "Has words", advancedSearchDelimiter, placeholder, hint, onChange, onSearch, onClear, onToggleAdvancedSearch, isAdvancedSearchOpen, resultsCount, onNextClick, onPreviousClick, innerRef, expandableInput, "aria-label": ariaLabel = "Search input", resetButtonLabel = "Reset", openMenuButtonAriaLabel = "Open advanced search", previousNavigationButtonAriaLabel = "Previous", isPreviousNavigationButtonDisabled = false, isNextNavigationButtonDisabled = false, nextNavigationButtonAriaLabel = "Next", submitSearchButtonLabel = "Search", isDisabled = false, appendTo, removeFindDomNode = false, zIndex = 9999, type = "text", name } = _a, props = __rest(_a, ["className", "value", "attributes", "formAdditionalItems", "hasWordsAttrLabel", "advancedSearchDelimiter", "placeholder", "hint", "onChange", "onSearch", "onClear", "onToggleAdvancedSearch", "isAdvancedSearchOpen", "resultsCount", "onNextClick", "onPreviousClick", "innerRef", "expandableInput", "aria-label", "resetButtonLabel", "openMenuButtonAriaLabel", "previousNavigationButtonAriaLabel", "isPreviousNavigationButtonDisabled", "isNextNavigationButtonDisabled", "nextNavigationButtonAriaLabel", "submitSearchButtonLabel", "isDisabled", "appendTo", "removeFindDomNode", "zIndex", "type", "name"]);
  const [isSearchMenuOpen, setIsSearchMenuOpen] = React127.useState(false);
  const [searchValue, setSearchValue] = React127.useState(value);
  const searchInputRef = React127.useRef(null);
  const ref = React127.useRef(null);
  const searchInputInputRef = innerRef || ref;
  const searchInputExpandableToggleRef = React127.useRef(null);
  const [focusAfterExpandChange, setFocusAfterExpandChange] = React127.useState(false);
  const { isExpanded, onToggleExpand, toggleAriaLabel } = expandableInput || {};
  React127.useEffect(() => {
    var _a2, _b;
    if (!focusAfterExpandChange) {
      return;
    } else if (isExpanded) {
      (_a2 = searchInputInputRef === null || searchInputInputRef === void 0 ? void 0 : searchInputInputRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    } else {
      (_b = searchInputExpandableToggleRef === null || searchInputExpandableToggleRef === void 0 ? void 0 : searchInputExpandableToggleRef.current) === null || _b === void 0 ? void 0 : _b.focus();
    }
    setFocusAfterExpandChange(false);
  }, [focusAfterExpandChange, isExpanded, searchInputInputRef, searchInputExpandableToggleRef]);
  React127.useEffect(() => {
    setSearchValue(value);
  }, [value]);
  React127.useEffect(() => {
    if (attributes.length > 0 && !advancedSearchDelimiter) {
      console.error("An advancedSearchDelimiter prop is required when advanced search attributes are provided using the attributes prop");
    }
  });
  React127.useEffect(() => {
    setIsSearchMenuOpen(isAdvancedSearchOpen);
  }, [isAdvancedSearchOpen]);
  const onChangeHandler = (event, value2) => {
    if (onChange) {
      onChange(event, value2);
    }
    setSearchValue(value2);
  };
  const onToggle = (e) => {
    const isOpen = !isSearchMenuOpen;
    setIsSearchMenuOpen(isOpen);
    if (onToggleAdvancedSearch) {
      onToggleAdvancedSearch(e, isOpen);
    }
  };
  const onSearchHandler = (event) => {
    event.preventDefault();
    if (onSearch) {
      onSearch(event, value, getAttrValueMap());
    }
    setIsSearchMenuOpen(false);
  };
  const splitStringExceptInQuotes = (str) => {
    let quoteType;
    return str.match(/\\?.|^$/g).reduce((p, c) => {
      if (c === "'" || c === '"') {
        if (!quoteType) {
          quoteType = c;
        }
        if (c === quoteType) {
          p.quote = !p.quote;
        }
      } else if (!p.quote && c === " ") {
        p.a.push("");
      } else {
        p.a[p.a.length - 1] += c.replace(/\\(.)/, "$1");
      }
      return p;
    }, { a: [""] }).a;
  };
  const getAttrValueMap = () => {
    const attrValue = {};
    const pairs = splitStringExceptInQuotes(searchValue);
    pairs.map((pair) => {
      const splitPair = pair.split(advancedSearchDelimiter);
      if (splitPair.length === 2) {
        attrValue[splitPair[0]] = splitPair[1].replace(/(^'|'$)/g, "");
      } else if (splitPair.length === 1) {
        attrValue.haswords = attrValue.hasOwnProperty("haswords") ? `${attrValue.haswords} ${splitPair[0]}` : splitPair[0];
      }
    });
    return attrValue;
  };
  const onEnter = (event) => {
    if (event.key === "Enter") {
      onSearchHandler(event);
    }
  };
  const onClearInput = (e) => {
    if (onClear) {
      onClear(e);
    }
    if (searchInputInputRef && searchInputInputRef.current) {
      searchInputInputRef.current.focus();
    }
  };
  const onExpandHandler = (event) => {
    setSearchValue("");
    onToggleExpand(event, isExpanded);
    setFocusAfterExpandChange(true);
  };
  const renderUtilities = value && (resultsCount || !!onNextClick && !!onPreviousClick || !!onClear && !expandableInput);
  const buildTextInputGroup = (_a2 = {}) => {
    var searchInputProps2 = __rest(_a2, []);
    return React127.createElement(
      TextInputGroup,
      Object.assign({ isDisabled }, searchInputProps2),
      React127.createElement(TextInputGroupMain, { hint, icon: React127.createElement(search_icon_default, null), innerRef: searchInputInputRef, value: searchValue, placeholder, "aria-label": ariaLabel, onKeyDown: onEnter, onChange: onChangeHandler, type, name }),
      renderUtilities && React127.createElement(
        TextInputGroupUtilities,
        null,
        resultsCount && React127.createElement(Badge, { isRead: true }, resultsCount),
        !!onNextClick && !!onPreviousClick && React127.createElement(
          "div",
          { className: "pf-c-text-input-group__group" },
          React127.createElement(
            Button,
            { variant: ButtonVariant.plain, "aria-label": previousNavigationButtonAriaLabel, isDisabled: isDisabled || isPreviousNavigationButtonDisabled, onClick: onPreviousClick },
            React127.createElement(angle_up_icon_default, null)
          ),
          React127.createElement(
            Button,
            { variant: ButtonVariant.plain, "aria-label": nextNavigationButtonAriaLabel, isDisabled: isDisabled || isNextNavigationButtonDisabled, onClick: onNextClick },
            React127.createElement(angle_down_icon_default, null)
          )
        ),
        !!onClear && !expandableInput && React127.createElement(
          Button,
          { variant: ButtonVariant.plain, isDisabled, "aria-label": resetButtonLabel, onClick: onClearInput },
          React127.createElement(times_icon_default, null)
        )
      )
    );
  };
  const expandableToggle = React127.createElement(Button, { variant: ButtonVariant.plain, "aria-label": toggleAriaLabel, "aria-expanded": isExpanded, icon: isExpanded ? React127.createElement(times_icon_default, null) : React127.createElement(search_icon_default, null), onClick: onExpandHandler, ref: searchInputExpandableToggleRef });
  const buildExpandableSearchInput = (_a2 = {}) => {
    var searchInputProps2 = __rest(_a2, []);
    return React127.createElement(
      InputGroup,
      Object.assign({}, searchInputProps2),
      buildTextInputGroup(),
      expandableToggle
    );
  };
  const buildSearchTextInputGroup = (_a2 = {}) => {
    var searchInputProps2 = __rest(_a2, []);
    if (expandableInput) {
      return buildExpandableSearchInput(Object.assign({}, searchInputProps2));
    }
    return buildTextInputGroup(Object.assign({}, searchInputProps2));
  };
  const buildSearchTextInputGroupWithExtraButtons = (_a2 = {}) => {
    var searchInputProps2 = __rest(_a2, []);
    return React127.createElement(
      InputGroup,
      Object.assign({}, searchInputProps2),
      buildTextInputGroup(),
      (attributes.length > 0 || onToggleAdvancedSearch) && React127.createElement(
        Button,
        { className: isSearchMenuOpen && "pf-m-expanded", variant: ButtonVariant.control, "aria-label": openMenuButtonAriaLabel, onClick: onToggle, isDisabled, "aria-expanded": isSearchMenuOpen },
        React127.createElement(caret_down_icon_default, null)
      ),
      !!onSearch && React127.createElement(
        Button,
        { type: "submit", variant: ButtonVariant.control, "aria-label": submitSearchButtonLabel, onClick: onSearchHandler, isDisabled: isDisabled || !searchValue },
        React127.createElement(arrow_right_icon_default, null)
      ),
      expandableInput && expandableToggle
    );
  };
  const searchInputProps = Object.assign(Object.assign({}, props), { className: className && css(className), innerRef: searchInputRef });
  if (!!expandableInput && !isExpanded) {
    return React127.createElement(InputGroup, Object.assign({}, searchInputProps), expandableToggle);
  }
  if (!!onSearch || attributes.length > 0 || !!onToggleAdvancedSearch) {
    if (attributes.length > 0) {
      const AdvancedSearch = React127.createElement(
        "div",
        null,
        React127.createElement(AdvancedSearchMenu, { value, parentRef: searchInputRef, parentInputRef: searchInputInputRef, onSearch, onClear, onChange, onToggleAdvancedMenu: onToggle, resetButtonLabel, submitSearchButtonLabel, attributes, formAdditionalItems, hasWordsAttrLabel, advancedSearchDelimiter, getAttrValueMap, isSearchMenuOpen })
      );
      const AdvancedSearchWithPopper = React127.createElement(
        "div",
        Object.assign({ className: css(className), ref: searchInputRef }, props),
        React127.createElement(Popper, { trigger: buildSearchTextInputGroupWithExtraButtons(), popper: AdvancedSearch, isVisible: isSearchMenuOpen, enableFlip: true, appendTo: () => appendTo || searchInputRef.current, removeFindDomNode, zIndex })
      );
      const AdvancedSearchInline = React127.createElement(
        "div",
        Object.assign({ className: css(className), ref: searchInputRef }, props),
        buildSearchTextInputGroupWithExtraButtons(),
        AdvancedSearch
      );
      return appendTo !== "inline" ? AdvancedSearchWithPopper : AdvancedSearchInline;
    }
    return buildSearchTextInputGroupWithExtraButtons(Object.assign({}, searchInputProps));
  }
  return buildSearchTextInputGroup(searchInputProps);
};
SearchInputBase.displayName = "SearchInputBase";
var SearchInput = React127.forwardRef((props, ref) => React127.createElement(SearchInputBase, Object.assign({}, props, { innerRef: ref })));
SearchInput.displayName = "SearchInput";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorPane.js
var DualListSelectorPane = (_a) => {
  var { isChosen = false, className = "", status = "", actions, searchInput, children, onOptionSelect, onOptionCheck, title = "", options = [], selectedOptions = [], isSearchable = false, searchInputAriaLabel = "", onFilterUpdate, onSearchInputChanged, onSearchInputClear, filterOption, id = getUniqueId("dual-list-selector-pane"), isDisabled = false, listMinHeight } = _a, props = __rest(_a, ["isChosen", "className", "status", "actions", "searchInput", "children", "onOptionSelect", "onOptionCheck", "title", "options", "selectedOptions", "isSearchable", "searchInputAriaLabel", "onFilterUpdate", "onSearchInputChanged", "onSearchInputClear", "filterOption", "id", "isDisabled", "listMinHeight"]);
  const [input, setInput] = React128.useState("");
  const { isTree } = React128.useContext(DualListSelectorContext);
  const onChange = (e, newValue) => {
    let filtered;
    if (isTree) {
      filtered = options.map((opt) => Object.assign({}, opt)).filter((item) => filterInput(item, newValue));
    } else {
      filtered = options.filter((option) => {
        if (displayOption(option)) {
          return option;
        }
      });
    }
    onFilterUpdate(filtered, isChosen ? "chosen" : "available", newValue === "");
    if (onSearchInputChanged) {
      onSearchInputChanged(newValue, e);
    }
    setInput(newValue);
  };
  const filterInput = (item, input2) => {
    if (filterOption) {
      return filterOption(item, input2);
    } else {
      if (item.text.toLowerCase().includes(input2.toLowerCase()) || input2 === "") {
        return true;
      }
    }
    if (item.children) {
      return (item.children = item.children.map((opt) => Object.assign({}, opt)).filter((child) => filterInput(child, input2))).length > 0;
    }
  };
  const displayOption = (option) => {
    if (filterOption) {
      return filterOption(option, input);
    } else {
      return option.toString().toLowerCase().includes(input.toLowerCase());
    }
  };
  return React128.createElement(
    "div",
    Object.assign({ className: css(dual_list_selector_default.dualListSelectorPane, isChosen ? dual_list_selector_default.modifiers.chosen : "pf-m-available", className) }, props),
    title && React128.createElement(
      "div",
      { className: css(dual_list_selector_default.dualListSelectorHeader) },
      React128.createElement(
        "div",
        { className: "pf-c-dual-list-selector__title" },
        React128.createElement("div", { className: css(dual_list_selector_default.dualListSelectorTitleText) }, title)
      )
    ),
    (actions || searchInput || isSearchable) && React128.createElement(
      "div",
      { className: css(dual_list_selector_default.dualListSelectorTools) },
      (isSearchable || searchInput) && React128.createElement("div", { className: css(dual_list_selector_default.dualListSelectorToolsFilter) }, searchInput ? searchInput : React128.createElement(SearchInput, { onChange: isDisabled ? void 0 : onChange, onClear: onSearchInputClear ? onSearchInputClear : (e) => onChange(e, ""), isDisabled, "aria-label": searchInputAriaLabel, type: "search" })),
      actions && React128.createElement("div", { className: css(dual_list_selector_default.dualListSelectorToolsActions) }, actions)
    ),
    status && React128.createElement(
      "div",
      { className: css(dual_list_selector_default.dualListSelectorStatus) },
      React128.createElement("div", { className: css(dual_list_selector_default.dualListSelectorStatusText), id: `${id}-status` }, status)
    ),
    React128.createElement(
      DualListSelectorPaneContext.Provider,
      { value: { isChosen } },
      !isTree && React128.createElement(DualListSelectorListWrapper, Object.assign({ "aria-labelledby": `${id}-status`, options, selectedOptions, onOptionSelect: (e, index, id2) => onOptionSelect(e, index, isChosen, id2), displayOption, id: `${id}-list`, isDisabled }, listMinHeight && {
        style: { "--pf-c-dual-list-selector__menu--MinHeight": listMinHeight }
      }), children),
      isTree && React128.createElement(DualListSelectorListWrapper, Object.assign({ "aria-labelledby": `${id}-status`, id: `${id}-list` }, listMinHeight && {
        style: { "--pf-c-dual-list-selector__menu--MinHeight": listMinHeight }
      }), options.length > 0 ? React128.createElement(
        DualListSelectorList,
        null,
        React128.createElement(DualListSelectorTree, { data: isSearchable ? options.map((opt) => Object.assign({}, opt)).filter((item) => filterInput(item, input)) : options, onOptionCheck, id: `${id}-tree`, isDisabled })
      ) : children)
    )
  );
};
DualListSelectorPane.displayName = "DualListSelectorPane";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorControlsWrapper.js
var React129 = __toESM(require_react());
var DualListSelectorControlsWrapperBase = (_a) => {
  var { innerRef, children = null, className, "aria-label": ariaLabel = "Controls for moving options between lists" } = _a, props = __rest(_a, ["innerRef", "children", "className", "aria-label"]);
  const ref = React129.useRef(null);
  const wrapperRef = innerRef || ref;
  const handleKeys = (event) => {
    if (!wrapperRef.current || wrapperRef.current !== event.target.closest(".pf-c-dual-list-selector__controls") && !Array.from(wrapperRef.current.getElementsByClassName("pf-c-dual-list-selector__controls")).includes(event.target.closest(".pf-c-dual-list-selector__controls"))) {
      return;
    }
    event.stopImmediatePropagation();
    const controls = Array.from(wrapperRef.current.getElementsByTagName("BUTTON")).filter((el) => !el.classList.contains("pf-m-disabled"));
    const activeElement = document.activeElement;
    handleArrows(event, controls, (element) => activeElement.contains(element), (element) => element, void 0, void 0, true, false);
  };
  React129.useEffect(() => {
    window.addEventListener("keydown", handleKeys);
    return () => {
      window.removeEventListener("keydown", handleKeys);
    };
  }, [wrapperRef.current]);
  return React129.createElement("div", Object.assign({ className: css(dual_list_selector_default.dualListSelectorControls, className), tabIndex: 0, ref: wrapperRef, "aria-label": ariaLabel }, props), children);
};
DualListSelectorControlsWrapperBase.displayName = "DualListSelectorControlsWrapperBase";
var DualListSelectorControlsWrapper = React129.forwardRef((props, ref) => React129.createElement(DualListSelectorControlsWrapperBase, Object.assign({ innerRef: ref, role: "group" }, props)));
DualListSelectorControlsWrapper.displayName = "DualListSelectorControlsWrapper";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelectorControl.js
var React130 = __toESM(require_react());
var DualListSelectorControlBase = (_a) => {
  var { innerRef, children = null, className, "aria-label": ariaLabel, isDisabled = true, onClick = () => {
  }, tooltipContent, tooltipProps = {} } = _a, props = __rest(_a, ["innerRef", "children", "className", "aria-label", "isDisabled", "onClick", "tooltipContent", "tooltipProps"]);
  const privateRef = React130.useRef(null);
  const ref = innerRef || privateRef;
  return React130.createElement(
    "div",
    Object.assign({ className: css("pf-c-dual-list-selector__controls-item", className) }, props),
    React130.createElement(Button, { isDisabled, "aria-disabled": isDisabled, variant: ButtonVariant.plain, onClick, "aria-label": ariaLabel, tabIndex: -1, ref }, children),
    tooltipContent && React130.createElement(Tooltip, Object.assign({ content: tooltipContent, position: "left", reference: ref }, tooltipProps))
  );
};
DualListSelectorControlBase.displayName = "DualListSelectorControlBase";
var DualListSelectorControl = React130.forwardRef((props, ref) => React130.createElement(DualListSelectorControlBase, Object.assign({ innerRef: ref }, props)));
DualListSelectorControl.displayName = "DualListSelectorControl";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DualListSelector/DualListSelector.js
var DualListSelector = class extends React131.Component {
  constructor(props) {
    super(props);
    this.addAllButtonRef = React131.createRef();
    this.addSelectedButtonRef = React131.createRef();
    this.removeSelectedButtonRef = React131.createRef();
    this.removeAllButtonRef = React131.createRef();
    this.replacer = (key, value) => {
      if (key[0] === "_") {
        return void 0;
      }
      return value;
    };
    this.onFilterUpdate = (newFilteredOptions, paneType, isSearchReset) => {
      const { isTree } = this.props;
      if (paneType === "available") {
        if (isSearchReset) {
          this.setState({
            availableFilteredOptions: null,
            availableTreeFilteredOptions: null
          });
          return;
        }
        if (isTree) {
          this.setState({
            availableTreeFilteredOptions: flattenTreeWithFolders(newFilteredOptions)
          });
        } else {
          this.setState({
            availableFilteredOptions: newFilteredOptions
          });
        }
      } else if (paneType === "chosen") {
        if (isSearchReset) {
          this.setState({
            chosenFilteredOptions: null,
            chosenTreeFilteredOptions: null
          });
          return;
        }
        if (isTree) {
          this.setState({
            chosenTreeFilteredOptions: flattenTreeWithFolders(newFilteredOptions)
          });
        } else {
          this.setState({
            chosenFilteredOptions: newFilteredOptions
          });
        }
      }
    };
    this.addAllVisible = () => {
      this.setState((prevState) => {
        const itemsToRemove = [];
        const newAvailable = [];
        const movedOptions = prevState.availableFilteredOptions || prevState.availableOptions;
        prevState.availableOptions.forEach((value) => {
          if (movedOptions.indexOf(value) !== -1) {
            itemsToRemove.push(value);
          } else {
            newAvailable.push(value);
          }
        });
        const newChosen = [...prevState.chosenOptions, ...itemsToRemove];
        this.props.addAll && this.props.addAll(newAvailable, newChosen);
        this.props.onListChange && this.props.onListChange(newAvailable, newChosen);
        return {
          chosenOptions: newChosen,
          chosenFilteredOptions: newChosen,
          availableOptions: newAvailable,
          availableFilteredOptions: newAvailable,
          chosenOptionsSelected: [],
          availableOptionsSelected: []
        };
      });
    };
    this.addAllTreeVisible = () => {
      this.setState((prevState) => {
        const movedOptions = prevState.availableTreeFilteredOptions || flattenTreeWithFolders(prevState.availableOptions);
        const newAvailable = prevState.availableOptions.map((opt) => Object.assign({}, opt)).filter((item) => filterRestTreeItems(item, movedOptions));
        const currChosen = flattenTree(prevState.chosenOptions);
        const nextChosenOptions = currChosen.concat(movedOptions);
        const newChosen = this.createMergedCopy().map((opt) => Object.assign({}, opt)).filter((item) => filterTreeItemsWithoutFolders(item, nextChosenOptions));
        this.props.addAll && this.props.addAll(newAvailable, newChosen);
        this.props.onListChange && this.props.onListChange(newAvailable, newChosen);
        return {
          chosenOptions: newChosen,
          chosenFilteredOptions: newChosen,
          availableOptions: newAvailable,
          availableFilteredOptions: newAvailable,
          availableTreeOptionsChecked: [],
          chosenTreeOptionsChecked: []
        };
      });
    };
    this.addSelected = () => {
      this.setState((prevState) => {
        const itemsToRemove = [];
        const newAvailable = [];
        prevState.availableOptions.forEach((value, index) => {
          if (prevState.availableOptionsSelected.indexOf(index) !== -1) {
            itemsToRemove.push(value);
          } else {
            newAvailable.push(value);
          }
        });
        const newChosen = [...prevState.chosenOptions, ...itemsToRemove];
        this.props.addSelected && this.props.addSelected(newAvailable, newChosen);
        this.props.onListChange && this.props.onListChange(newAvailable, newChosen);
        return {
          chosenOptionsSelected: [],
          availableOptionsSelected: [],
          chosenOptions: newChosen,
          chosenFilteredOptions: newChosen,
          availableOptions: newAvailable,
          availableFilteredOptions: newAvailable
        };
      });
    };
    this.addTreeSelected = () => {
      this.setState((prevState) => {
        const newAvailable = prevState.availableOptions.map((opt) => Object.assign({}, opt)).filter((item) => filterRestTreeItems(item, prevState.availableTreeOptionsChecked));
        const currChosen = flattenTree(prevState.chosenOptions);
        const nextChosenOptions = currChosen.concat(prevState.availableTreeOptionsChecked);
        const newChosen = this.createMergedCopy().map((opt) => Object.assign({}, opt)).filter((item) => filterTreeItemsWithoutFolders(item, nextChosenOptions));
        this.props.addSelected && this.props.addSelected(newAvailable, newChosen);
        this.props.onListChange && this.props.onListChange(newAvailable, newChosen);
        return {
          availableTreeOptionsChecked: [],
          chosenTreeOptionsChecked: [],
          availableOptions: newAvailable,
          chosenOptions: newChosen
        };
      });
    };
    this.removeAllVisible = () => {
      this.setState((prevState) => {
        const itemsToRemove = [];
        const newChosen = [];
        const movedOptions = prevState.chosenFilteredOptions || prevState.chosenOptions;
        prevState.chosenOptions.forEach((value) => {
          if (movedOptions.indexOf(value) !== -1) {
            itemsToRemove.push(value);
          } else {
            newChosen.push(value);
          }
        });
        const newAvailable = [...prevState.availableOptions, ...itemsToRemove];
        this.props.removeAll && this.props.removeAll(newAvailable, newChosen);
        this.props.onListChange && this.props.onListChange(newAvailable, newChosen);
        return {
          chosenOptions: newChosen,
          chosenFilteredOptions: newChosen,
          availableOptions: newAvailable,
          availableFilteredOptions: newAvailable,
          chosenOptionsSelected: [],
          availableOptionsSelected: []
        };
      });
    };
    this.removeAllTreeVisible = () => {
      this.setState((prevState) => {
        const movedOptions = prevState.chosenTreeFilteredOptions || flattenTreeWithFolders(prevState.chosenOptions);
        const newChosen = prevState.chosenOptions.map((opt) => Object.assign({}, opt)).filter((item) => filterRestTreeItems(item, movedOptions));
        const currAvailable = flattenTree(prevState.availableOptions);
        const nextAvailableOptions = currAvailable.concat(movedOptions);
        const newAvailable = this.createMergedCopy().map((opt) => Object.assign({}, opt)).filter((item) => filterTreeItemsWithoutFolders(item, nextAvailableOptions));
        this.props.removeAll && this.props.removeAll(newAvailable, newChosen);
        this.props.onListChange && this.props.onListChange(newAvailable, newChosen);
        return {
          chosenOptions: newChosen,
          availableOptions: newAvailable,
          availableTreeOptionsChecked: [],
          chosenTreeOptionsChecked: []
        };
      });
    };
    this.removeSelected = () => {
      this.setState((prevState) => {
        const itemsToRemove = [];
        const newChosen = [];
        prevState.chosenOptions.forEach((value, index) => {
          if (prevState.chosenOptionsSelected.indexOf(index) !== -1) {
            itemsToRemove.push(value);
          } else {
            newChosen.push(value);
          }
        });
        const newAvailable = [...prevState.availableOptions, ...itemsToRemove];
        this.props.removeSelected && this.props.removeSelected(newAvailable, newChosen);
        this.props.onListChange && this.props.onListChange(newAvailable, newChosen);
        return {
          chosenOptionsSelected: [],
          availableOptionsSelected: [],
          chosenOptions: newChosen,
          chosenFilteredOptions: newChosen,
          availableOptions: newAvailable,
          availableFilteredOptions: newAvailable
        };
      });
    };
    this.removeTreeSelected = () => {
      this.setState((prevState) => {
        const newChosen = prevState.chosenOptions.map((opt) => Object.assign({}, opt)).filter((item) => filterRestTreeItems(item, prevState.chosenTreeOptionsChecked));
        const currAvailable = flattenTree(prevState.availableOptions);
        const nextAvailableOptions = currAvailable.concat(prevState.chosenTreeOptionsChecked);
        const newAvailable = this.createMergedCopy().map((opt) => Object.assign({}, opt)).filter((item) => filterTreeItemsWithoutFolders(item, nextAvailableOptions));
        this.props.removeSelected && this.props.removeSelected(newAvailable, newChosen);
        this.props.onListChange && this.props.onListChange(newAvailable, newChosen);
        return {
          availableTreeOptionsChecked: [],
          chosenTreeOptionsChecked: [],
          availableOptions: newAvailable,
          chosenOptions: newChosen
        };
      });
    };
    this.onOptionSelect = (e, index, isChosen, id, itemData, parentData) => {
      this.setState((prevState) => {
        const originalArray = isChosen ? prevState.chosenOptionsSelected : prevState.availableOptionsSelected;
        let updatedArray = null;
        if (originalArray.indexOf(index) !== -1) {
          updatedArray = originalArray.filter((value) => value !== index);
        } else {
          updatedArray = [...originalArray, index];
        }
        return {
          chosenOptionsSelected: isChosen ? updatedArray : prevState.chosenOptionsSelected,
          availableOptionsSelected: isChosen ? prevState.availableOptionsSelected : updatedArray
        };
      });
      this.props.onOptionSelect && this.props.onOptionSelect(e, index, isChosen, id, itemData, parentData);
    };
    this.isChecked = (treeItem, isChosen) => isChosen ? this.state.chosenTreeOptionsChecked.includes(treeItem.id) : this.state.availableTreeOptionsChecked.includes(treeItem.id);
    this.areAllDescendantsChecked = (treeItem, isChosen) => treeItem.children ? treeItem.children.every((child) => this.areAllDescendantsChecked(child, isChosen)) : this.isChecked(treeItem, isChosen);
    this.areSomeDescendantsChecked = (treeItem, isChosen) => treeItem.children ? treeItem.children.some((child) => this.areSomeDescendantsChecked(child, isChosen)) : this.isChecked(treeItem, isChosen);
    this.mapChecked = (item, isChosen) => {
      const hasCheck = this.areAllDescendantsChecked(item, isChosen);
      item.isChecked = false;
      if (hasCheck) {
        item.isChecked = true;
      } else {
        const hasPartialCheck = this.areSomeDescendantsChecked(item, isChosen);
        if (hasPartialCheck) {
          item.isChecked = null;
        }
      }
      if (item.children) {
        return Object.assign(Object.assign({}, item), { children: item.children.map((child) => this.mapChecked(child, isChosen)) });
      }
      return item;
    };
    this.onTreeOptionCheck = (evt, isChecked, itemData, isChosen) => {
      const { availableOptions, availableTreeFilteredOptions, chosenOptions, chosenTreeFilteredOptions } = this.state;
      let panelOptions;
      if (isChosen) {
        if (chosenTreeFilteredOptions) {
          panelOptions = chosenOptions.map((opt) => Object.assign({}, opt)).filter((item) => filterTreeItemsWithoutFolders(item, chosenTreeFilteredOptions));
        } else {
          panelOptions = chosenOptions;
        }
      } else {
        if (availableTreeFilteredOptions) {
          panelOptions = availableOptions.map((opt) => Object.assign({}, opt)).filter((item) => filterTreeItemsWithoutFolders(item, availableTreeFilteredOptions));
        } else {
          panelOptions = availableOptions;
        }
      }
      const checkedOptionTree = panelOptions.map((opt) => Object.assign({}, opt)).filter((item) => filterTreeItems(item, [itemData.id]));
      const flatTree = flattenTreeWithFolders(checkedOptionTree);
      const prevChecked = isChosen ? this.state.chosenTreeOptionsChecked : this.state.availableTreeOptionsChecked;
      let updatedChecked = [];
      if (isChecked) {
        updatedChecked = prevChecked.concat(flatTree.filter((id) => !prevChecked.includes(id)));
      } else {
        updatedChecked = prevChecked.filter((id) => !flatTree.includes(id));
      }
      this.setState((prevState) => ({
        availableTreeOptionsChecked: isChosen ? prevState.availableTreeOptionsChecked : updatedChecked,
        chosenTreeOptionsChecked: isChosen ? updatedChecked : prevState.chosenTreeOptionsChecked
      }), () => {
        this.props.onOptionCheck && this.props.onOptionCheck(evt, isChecked, itemData.id, updatedChecked);
      });
    };
    this.state = {
      availableOptions: [...this.props.availableOptions],
      availableOptionsSelected: [],
      availableFilteredOptions: null,
      availableTreeFilteredOptions: null,
      chosenOptions: [...this.props.chosenOptions],
      chosenOptionsSelected: [],
      chosenFilteredOptions: null,
      chosenTreeFilteredOptions: null,
      availableTreeOptionsChecked: [],
      chosenTreeOptionsChecked: []
    };
  }
  // If the DualListSelector uses trees, concat the two initial arrays and merge duplicate folder IDs
  createMergedCopy() {
    const copyOfAvailable = JSON.parse(JSON.stringify(this.props.availableOptions));
    const copyOfChosen = JSON.parse(JSON.stringify(this.props.chosenOptions));
    return this.props.isTree ? Object.values(copyOfAvailable.concat(copyOfChosen).reduce((mapObj, item) => {
      const key = item.id;
      if (mapObj[key]) {
        mapObj[key].children.push(...item.children);
      } else {
        mapObj[key] = Object.assign({}, item);
      }
      return mapObj;
    }, {})) : null;
  }
  componentDidUpdate() {
    if (JSON.stringify(this.props.availableOptions, this.replacer) !== JSON.stringify(this.state.availableOptions, this.replacer) || JSON.stringify(this.props.chosenOptions, this.replacer) !== JSON.stringify(this.state.chosenOptions, this.replacer)) {
      this.setState({
        availableOptions: [...this.props.availableOptions],
        chosenOptions: [...this.props.chosenOptions]
      });
    }
  }
  render() {
    const _a = this.props, {
      availableOptionsTitle,
      availableOptionsActions,
      availableOptionsSearchAriaLabel,
      className,
      children,
      chosenOptionsTitle,
      chosenOptionsActions,
      chosenOptionsSearchAriaLabel,
      filterOption,
      isSearchable,
      chosenOptionsStatus,
      availableOptionsStatus,
      controlsAriaLabel,
      addAllAriaLabel,
      addSelectedAriaLabel,
      removeSelectedAriaLabel,
      removeAllAriaLabel,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      availableOptions: consumerPassedAvailableOptions,
      chosenOptions: consumerPassedChosenOptions,
      removeSelected,
      addAll,
      removeAll,
      addSelected,
      onListChange,
      onAvailableOptionsSearchInputChanged,
      onChosenOptionsSearchInputChanged,
      onOptionSelect,
      onOptionCheck,
      id,
      isTree,
      isDisabled,
      addAllTooltip,
      addAllTooltipProps,
      addSelectedTooltip,
      addSelectedTooltipProps,
      removeAllTooltip,
      removeAllTooltipProps,
      removeSelectedTooltip,
      removeSelectedTooltipProps
    } = _a, props = __rest(_a, ["availableOptionsTitle", "availableOptionsActions", "availableOptionsSearchAriaLabel", "className", "children", "chosenOptionsTitle", "chosenOptionsActions", "chosenOptionsSearchAriaLabel", "filterOption", "isSearchable", "chosenOptionsStatus", "availableOptionsStatus", "controlsAriaLabel", "addAllAriaLabel", "addSelectedAriaLabel", "removeSelectedAriaLabel", "removeAllAriaLabel", "availableOptions", "chosenOptions", "removeSelected", "addAll", "removeAll", "addSelected", "onListChange", "onAvailableOptionsSearchInputChanged", "onChosenOptionsSearchInputChanged", "onOptionSelect", "onOptionCheck", "id", "isTree", "isDisabled", "addAllTooltip", "addAllTooltipProps", "addSelectedTooltip", "addSelectedTooltipProps", "removeAllTooltip", "removeAllTooltipProps", "removeSelectedTooltip", "removeSelectedTooltipProps"]);
    const { availableOptions, chosenOptions, chosenOptionsSelected, availableOptionsSelected, chosenTreeOptionsChecked, availableTreeOptionsChecked } = this.state;
    const availableOptionsStatusToDisplay = availableOptionsStatus || (isTree ? `${filterFolders(availableOptions, availableTreeOptionsChecked).length} of ${flattenTree(availableOptions).length} items selected` : `${availableOptionsSelected.length} of ${availableOptions.length} items selected`);
    const chosenOptionsStatusToDisplay = chosenOptionsStatus || (isTree ? `${filterFolders(chosenOptions, chosenTreeOptionsChecked).length} of ${flattenTree(chosenOptions).length} items selected` : `${chosenOptionsSelected.length} of ${chosenOptions.length} items selected`);
    const available = isTree ? availableOptions.map((item) => this.mapChecked(item, false)) : availableOptions;
    const chosen = isTree ? chosenOptions.map((item) => this.mapChecked(item, true)) : chosenOptions;
    return React131.createElement(
      DualListSelectorContext.Provider,
      { value: { isTree } },
      React131.createElement(GenerateId, null, (randomId) => React131.createElement("div", Object.assign({ className: css(dual_list_selector_default.dualListSelector, className), id: id || randomId }, props), children === "" ? React131.createElement(
        React131.Fragment,
        null,
        React131.createElement(DualListSelectorPane, { isSearchable, onFilterUpdate: this.onFilterUpdate, searchInputAriaLabel: availableOptionsSearchAriaLabel, filterOption, onSearchInputChanged: onAvailableOptionsSearchInputChanged, status: availableOptionsStatusToDisplay, title: availableOptionsTitle, options: available, selectedOptions: isTree ? availableTreeOptionsChecked : availableOptionsSelected, onOptionSelect: this.onOptionSelect, onOptionCheck: (e, isChecked, itemData) => this.onTreeOptionCheck(e, isChecked, itemData, false), actions: availableOptionsActions, id: `${id || randomId}-available-pane`, isDisabled }),
        React131.createElement(
          DualListSelectorControlsWrapper,
          { "aria-label": controlsAriaLabel },
          React131.createElement(
            DualListSelectorControl,
            { isDisabled: (isTree ? availableTreeOptionsChecked.length === 0 : availableOptionsSelected.length === 0) || isDisabled, onClick: isTree ? this.addTreeSelected : this.addSelected, ref: this.addSelectedButtonRef, "aria-label": addSelectedAriaLabel, tooltipContent: addSelectedTooltip, tooltipProps: addSelectedTooltipProps },
            React131.createElement(angle_right_icon_default, null)
          ),
          React131.createElement(
            DualListSelectorControl,
            { isDisabled: availableOptions.length === 0 || isDisabled, onClick: isTree ? this.addAllTreeVisible : this.addAllVisible, ref: this.addAllButtonRef, "aria-label": addAllAriaLabel, tooltipContent: addAllTooltip, tooltipProps: addAllTooltipProps },
            React131.createElement(angle_double_right_icon_default, null)
          ),
          React131.createElement(
            DualListSelectorControl,
            { isDisabled: chosenOptions.length === 0 || isDisabled, onClick: isTree ? this.removeAllTreeVisible : this.removeAllVisible, "aria-label": removeAllAriaLabel, ref: this.removeAllButtonRef, tooltipContent: removeAllTooltip, tooltipProps: removeAllTooltipProps },
            React131.createElement(angle_double_left_icon_default, null)
          ),
          React131.createElement(
            DualListSelectorControl,
            { onClick: isTree ? this.removeTreeSelected : this.removeSelected, isDisabled: (isTree ? chosenTreeOptionsChecked.length === 0 : chosenOptionsSelected.length === 0) || isDisabled, ref: this.removeSelectedButtonRef, "aria-label": removeSelectedAriaLabel, tooltipContent: removeSelectedTooltip, tooltipProps: removeSelectedTooltipProps },
            React131.createElement(angle_left_icon_default, null)
          )
        ),
        React131.createElement(DualListSelectorPane, { isChosen: true, isSearchable, onFilterUpdate: this.onFilterUpdate, searchInputAriaLabel: chosenOptionsSearchAriaLabel, filterOption, onSearchInputChanged: onChosenOptionsSearchInputChanged, title: chosenOptionsTitle, status: chosenOptionsStatusToDisplay, options: chosen, selectedOptions: isTree ? chosenTreeOptionsChecked : chosenOptionsSelected, onOptionSelect: this.onOptionSelect, onOptionCheck: (e, isChecked, itemData) => this.onTreeOptionCheck(e, isChecked, itemData, true), actions: chosenOptionsActions, id: `${id || randomId}-chosen-pane`, isDisabled })
      ) : children))
    );
  }
};
DualListSelector.displayName = "DualListSelector";
DualListSelector.defaultProps = {
  children: "",
  availableOptions: [],
  availableOptionsTitle: "Available options",
  availableOptionsSearchAriaLabel: "Available search input",
  chosenOptions: [],
  chosenOptionsTitle: "Chosen options",
  chosenOptionsSearchAriaLabel: "Chosen search input",
  controlsAriaLabel: "Selector controls",
  addAllAriaLabel: "Add all",
  addSelectedAriaLabel: "Add selected",
  removeSelectedAriaLabel: "Remove selected",
  removeAllAriaLabel: "Remove all",
  isTree: false,
  isDisabled: false
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ExpandableSection/ExpandableSection.js
var React132 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ExpandableSection/expandable-section.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ExpandableSection/expandable-section.css";
var expandable_section_default = {
  "expandableSection": "pf-c-expandable-section",
  "expandableSectionContent": "pf-c-expandable-section__content",
  "expandableSectionToggle": "pf-c-expandable-section__toggle",
  "expandableSectionToggleIcon": "pf-c-expandable-section__toggle-icon",
  "expandableSectionToggleText": "pf-c-expandable-section__toggle-text",
  "modifiers": {
    "expanded": "pf-m-expanded",
    "detached": "pf-m-detached",
    "truncate": "pf-m-truncate",
    "limitWidth": "pf-m-limit-width",
    "displayLg": "pf-m-display-lg",
    "indented": "pf-m-indented",
    "active": "pf-m-active",
    "expandTop": "pf-m-expand-top",
    "overpassFont": "pf-m-overpass-font"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_expandable_section_m_truncate__content_LineClamp.js
var c_expandable_section_m_truncate__content_LineClamp = {
  "name": "--pf-c-expandable-section--m-truncate__content--LineClamp",
  "value": "3",
  "var": "var(--pf-c-expandable-section--m-truncate__content--LineClamp)"
};
var c_expandable_section_m_truncate_content_LineClamp_default = c_expandable_section_m_truncate__content_LineClamp;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ExpandableSection/ExpandableSection.js
var ExpandableSectionVariant;
(function(ExpandableSectionVariant2) {
  ExpandableSectionVariant2["default"] = "default";
  ExpandableSectionVariant2["truncate"] = "truncate";
})(ExpandableSectionVariant || (ExpandableSectionVariant = {}));
var setLineClamp = (lines, element) => {
  if (!element || lines < 1) {
    return;
  }
  element.style.setProperty(c_expandable_section_m_truncate_content_LineClamp_default.name, lines.toString());
};
var ExpandableSection = class extends React132.Component {
  constructor(props) {
    super(props);
    this.expandableContentRef = React132.createRef();
    this.observer = () => {
    };
    this.checkToggleVisibility = () => {
      var _a;
      if ((_a = this.expandableContentRef) === null || _a === void 0 ? void 0 : _a.current) {
        const maxLines = this.props.truncateMaxLines || parseInt(c_expandable_section_m_truncate_content_LineClamp_default.value);
        const totalLines = this.expandableContentRef.current.scrollHeight / parseInt(getComputedStyle(this.expandableContentRef.current).lineHeight);
        this.setState({
          hasToggle: totalLines > maxLines
        });
      }
    };
    this.resize = () => {
      const { offsetWidth } = this.expandableContentRef.current;
      if (this.state.previousWidth !== offsetWidth) {
        this.setState({ previousWidth: offsetWidth });
        this.checkToggleVisibility();
      }
    };
    this.handleResize = debounce(this.resize, 250);
    this.state = {
      isExpanded: props.isExpanded,
      hasToggle: true,
      previousWidth: void 0
    };
  }
  calculateToggleText(toggleText, toggleTextExpanded, toggleTextCollapsed, propOrStateIsExpanded) {
    if (propOrStateIsExpanded && toggleTextExpanded !== "") {
      return toggleTextExpanded;
    }
    if (!propOrStateIsExpanded && toggleTextCollapsed !== "") {
      return toggleTextCollapsed;
    }
    return toggleText;
  }
  componentDidMount() {
    if (this.props.variant === ExpandableSectionVariant.truncate) {
      const expandableContent = this.expandableContentRef.current;
      this.setState({ previousWidth: expandableContent.offsetWidth });
      this.observer = getResizeObserver(expandableContent, this.handleResize, false);
      if (this.props.truncateMaxLines) {
        setLineClamp(this.props.truncateMaxLines, expandableContent);
      }
      this.checkToggleVisibility();
    }
  }
  componentDidUpdate(prevProps) {
    if (this.props.variant === ExpandableSectionVariant.truncate && prevProps.truncateMaxLines !== this.props.truncateMaxLines) {
      const expandableContent = this.expandableContentRef.current;
      setLineClamp(this.props.truncateMaxLines, expandableContent);
      this.checkToggleVisibility();
    }
  }
  componentWillUnmount() {
    if (this.props.variant === ExpandableSectionVariant.truncate) {
      this.observer();
    }
  }
  render() {
    const _a = this.props, {
      onToggle: onToggleProp,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      isActive,
      className,
      toggleText,
      toggleTextExpanded,
      toggleTextCollapsed,
      toggleContent,
      children,
      isExpanded,
      isDetached,
      displaySize,
      isWidthLimited,
      isIndented,
      contentId,
      variant,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      truncateMaxLines
    } = _a, props = __rest(_a, ["onToggle", "isActive", "className", "toggleText", "toggleTextExpanded", "toggleTextCollapsed", "toggleContent", "children", "isExpanded", "isDetached", "displaySize", "isWidthLimited", "isIndented", "contentId", "variant", "truncateMaxLines"]);
    let onToggle = onToggleProp;
    let propOrStateIsExpanded = isExpanded;
    if (isExpanded === void 0) {
      propOrStateIsExpanded = this.state.isExpanded;
      onToggle = (isOpen) => {
        this.setState({ isExpanded: isOpen }, () => onToggleProp(this.state.isExpanded));
      };
    }
    const computedToggleText = this.calculateToggleText(toggleText, toggleTextExpanded, toggleTextCollapsed, propOrStateIsExpanded);
    const expandableToggle = !isDetached && React132.createElement(
      "button",
      { className: css(expandable_section_default.expandableSectionToggle), type: "button", "aria-expanded": propOrStateIsExpanded, onClick: () => onToggle(!propOrStateIsExpanded) },
      variant !== ExpandableSectionVariant.truncate && React132.createElement(
        "span",
        { className: css(expandable_section_default.expandableSectionToggleIcon) },
        React132.createElement(angle_right_icon_default, { "aria-hidden": true })
      ),
      React132.createElement("span", { className: css(expandable_section_default.expandableSectionToggleText) }, toggleContent || computedToggleText)
    );
    return React132.createElement(
      "div",
      Object.assign({ className: css(expandable_section_default.expandableSection, propOrStateIsExpanded && expandable_section_default.modifiers.expanded, isActive && expandable_section_default.modifiers.active, isDetached && expandable_section_default.modifiers.detached, displaySize === "large" && expandable_section_default.modifiers.displayLg, isWidthLimited && expandable_section_default.modifiers.limitWidth, isIndented && expandable_section_default.modifiers.indented, variant === ExpandableSectionVariant.truncate && expandable_section_default.modifiers.truncate, className) }, props),
      variant === ExpandableSectionVariant.default && expandableToggle,
      React132.createElement("div", { ref: this.expandableContentRef, className: css(expandable_section_default.expandableSectionContent), hidden: variant !== ExpandableSectionVariant.truncate && !propOrStateIsExpanded, id: contentId }, children),
      variant === ExpandableSectionVariant.truncate && this.state.hasToggle && expandableToggle
    );
  }
};
ExpandableSection.displayName = "ExpandableSection";
ExpandableSection.defaultProps = {
  className: "",
  toggleText: "",
  toggleTextExpanded: "",
  toggleTextCollapsed: "",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onToggle: (isExpanded) => void 0,
  isActive: false,
  isDetached: false,
  displaySize: "default",
  isWidthLimited: false,
  isIndented: false,
  contentId: "",
  variant: "default"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ExpandableSection/ExpandableSectionToggle.js
var React133 = __toESM(require_react());
var ExpandableSectionToggle = (_a) => {
  var { children, className = "", isExpanded = false, onToggle, contentId, direction = "down", hasTruncatedContent = false } = _a, props = __rest(_a, ["children", "className", "isExpanded", "onToggle", "contentId", "direction", "hasTruncatedContent"]);
  return React133.createElement(
    "div",
    Object.assign({ className: css(expandable_section_default.expandableSection, isExpanded && expandable_section_default.modifiers.expanded, expandable_section_default.modifiers.detached, hasTruncatedContent && expandable_section_default.modifiers.truncate, className) }, props),
    React133.createElement(
      "button",
      { className: css(expandable_section_default.expandableSectionToggle), type: "button", "aria-expanded": isExpanded, "aria-controls": contentId, onClick: () => onToggle(!isExpanded) },
      !hasTruncatedContent && React133.createElement(
        "span",
        { className: css(expandable_section_default.expandableSectionToggleIcon, isExpanded && direction === "up" && expandable_section_default.modifiers.expandTop) },
        React133.createElement(angle_right_icon_default, { "aria-hidden": true })
      ),
      React133.createElement("span", { className: css(expandable_section_default.expandableSectionToggleText) }, children)
    )
  );
};
ExpandableSectionToggle.displayName = "ExpandableSectionToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/FileUpload/FileUploadField.js
var React134 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/FileUpload/file-upload.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/FileUpload/file-upload.css";
var file_upload_default = {
  "button": "pf-c-button",
  "fileUpload": "pf-c-file-upload",
  "fileUploadFileDetails": "pf-c-file-upload__file-details",
  "fileUploadFileDetailsSpinner": "pf-c-file-upload__file-details-spinner",
  "fileUploadFileSelect": "pf-c-file-upload__file-select",
  "formControl": "pf-c-form-control",
  "modifiers": {
    "dragHover": "pf-m-drag-hover",
    "loading": "pf-m-loading",
    "control": "pf-m-control"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/helpers/fileUtils.js
var fileReaderType;
(function(fileReaderType2) {
  fileReaderType2["text"] = "text";
  fileReaderType2["dataURL"] = "dataURL";
})(fileReaderType || (fileReaderType = {}));
function readFile(fileHandle, type) {
  return new Promise((resolve, reject) => {
    const reader = new FileReader();
    reader.onload = () => resolve(reader.result);
    reader.onerror = () => reject(reader.error);
    if (type === fileReaderType.text) {
      reader.readAsText(fileHandle);
    } else if (type === fileReaderType.dataURL) {
      reader.readAsDataURL(fileHandle);
    } else {
      reject("unknown type");
    }
  });
}

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/FileUpload/FileUploadField.js
var FileUploadField = (_a) => {
  var { id, type, value = "", filename = "", onChange = () => {
  }, onBrowseButtonClick = () => {
  }, onClearButtonClick = () => {
  }, onTextAreaClick, onTextChange, onTextAreaBlur, textAreaPlaceholder = "", className = "", isDisabled = false, isReadOnly = false, isLoading = false, spinnerAriaValueText, isRequired = false, isDragActive = false, validated = "default", "aria-label": ariaLabel = "File upload", filenamePlaceholder = "Drag a file here or browse to upload", filenameAriaLabel = filename ? "Read only filename" : filenamePlaceholder, browseButtonText = "Browse...", clearButtonText = "Clear", isClearButtonDisabled = !filename && !value, containerRef = null, allowEditingUploadedText = false, hideDefaultPreview = false, children = null } = _a, props = __rest(_a, ["id", "type", "value", "filename", "onChange", "onBrowseButtonClick", "onClearButtonClick", "onTextAreaClick", "onTextChange", "onTextAreaBlur", "textAreaPlaceholder", "className", "isDisabled", "isReadOnly", "isLoading", "spinnerAriaValueText", "isRequired", "isDragActive", "validated", "aria-label", "filenamePlaceholder", "filenameAriaLabel", "browseButtonText", "clearButtonText", "isClearButtonDisabled", "containerRef", "allowEditingUploadedText", "hideDefaultPreview", "children"]);
  const onTextAreaChange = (newValue, event) => {
    onChange(newValue, filename, event);
    onTextChange === null || onTextChange === void 0 ? void 0 : onTextChange(newValue);
  };
  return React134.createElement(
    "div",
    Object.assign({ className: css(file_upload_default.fileUpload, isDragActive && file_upload_default.modifiers.dragHover, isLoading && file_upload_default.modifiers.loading, className), ref: containerRef }, props),
    React134.createElement(
      "div",
      { className: file_upload_default.fileUploadFileSelect },
      React134.createElement(
        InputGroup,
        null,
        React134.createElement(TextInput, { isReadOnly: true, isDisabled, id: `${id}-filename`, name: `${id}-filename`, "aria-label": filenameAriaLabel, placeholder: filenamePlaceholder, "aria-describedby": `${id}-browse-button`, value: filename }),
        React134.createElement(Button, { id: `${id}-browse-button`, variant: ButtonVariant.control, onClick: onBrowseButtonClick, isDisabled }, browseButtonText),
        React134.createElement(Button, { variant: ButtonVariant.control, isDisabled: isDisabled || isClearButtonDisabled, onClick: onClearButtonClick }, clearButtonText)
      )
    ),
    React134.createElement(
      "div",
      { className: file_upload_default.fileUploadFileDetails },
      !hideDefaultPreview && type === fileReaderType.text && React134.createElement(TextArea, { readOnly: isReadOnly || !!filename && !allowEditingUploadedText, disabled: isDisabled, isRequired, resizeOrientation: TextAreResizeOrientation.vertical, validated, id, name: id, "aria-label": ariaLabel, value, onChange: onTextAreaChange, onClick: onTextAreaClick, onBlur: onTextAreaBlur, placeholder: textAreaPlaceholder }),
      isLoading && React134.createElement(
        "div",
        { className: file_upload_default.fileUploadFileDetailsSpinner },
        React134.createElement(Spinner, { size: spinnerSize.lg, "aria-valuetext": spinnerAriaValueText })
      )
    ),
    children
  );
};
FileUploadField.displayName = "FileUploadField";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/FileUpload/FileUpload.js
var React136 = __toESM(require_react());

// ../../node_modules/.pnpm/react-dropzone@9.0.0_react@18.2.0/node_modules/react-dropzone/dist/es/index.js
var import_react5 = __toESM(require_react());

// ../../node_modules/.pnpm/file-selector@0.1.19/node_modules/file-selector/dist/es5/file.js
var COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
  ["avi", "video/avi"],
  ["gif", "image/gif"],
  ["ico", "image/x-icon"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["mp4", "video/mp4"],
  ["pdf", "application/pdf"],
  ["png", "image/png"],
  ["zip", "application/zip"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
]);
function toFileWithPath(file, path) {
  var f = withMimeType(file);
  if (typeof f.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f;
}
function withMimeType(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}

// ../../node_modules/.pnpm/file-selector@0.1.19/node_modules/file-selector/dist/es5/file-selector.js
var FILES_TO_IGNORE = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  "Thumbs.db"
  // Windows
];
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, isDragEvt(evt) && evt.dataTransfer ? getDataTransferFiles(evt.dataTransfer, evt.type) : getInputFiles(evt)];
    });
  });
}
function isDragEvt(value) {
  return !!value.dataTransfer;
}
function getInputFiles(evt) {
  var files = isInput(evt.target) ? evt.target.files ? fromList(evt.target.files) : [] : [];
  return files.map(function(file) {
    return toFileWithPath(file);
  });
}
function isInput(value) {
  return value !== null;
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          if (!dt.items)
            return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  var files = [];
  for (var i = 0; i < items.length; i++) {
    var file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject(item + " is not a File");
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                if (!!batch.length)
                  return [3, 5];
                _a.label = 1;
              case 1:
                _a.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry));
                entries.push(items);
                readEntries();
                _a.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}

// ../../node_modules/.pnpm/react-dropzone@9.0.0_react@18.2.0/node_modules/react-dropzone/dist/es/index.js
var import_prop_types = __toESM(require_prop_types());

// ../../node_modules/.pnpm/react-dropzone@9.0.0_react@18.2.0/node_modules/react-dropzone/dist/es/utils/index.js
var import_attr_accept = __toESM(require_dist());
var supportMultiple = typeof document !== "undefined" && document && document.createElement ? "multiple" in document.createElement("input") : true;
function fileAccepted(file, accept) {
  return file.type === "application/x-moz-file" || (0, import_attr_accept.default)(file, accept);
}
function fileMatchSize(file, maxSize, minSize) {
  return file.size <= maxSize && file.size >= minSize;
}
function allFilesAccepted(files, accept) {
  return files.every(function(file) {
    return fileAccepted(file, accept);
  });
}
function isPropagationStopped(evt) {
  if (typeof evt.isPropagationStopped === "function") {
    return evt.isPropagationStopped();
  } else if (typeof evt.cancelBubble !== "undefined") {
    return evt.cancelBubble;
  }
  return false;
}
function isDefaultPrevented(evt) {
  if (typeof evt.defaultPrevented !== "undefined") {
    return evt.defaultPrevented;
  } else if (typeof evt.isDefaultPrevented === "function") {
    return evt.isDefaultPrevented();
  }
  return false;
}
function isDragDataWithFiles(evt) {
  if (!evt.dataTransfer) {
    return true;
  }
  return Array.prototype.some.call(evt.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(evt) {
  evt.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers() {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn) {
      fn && fn.apply(void 0, [event].concat(args));
      return event.defaultPrevented;
    });
  };
}

// ../../node_modules/.pnpm/react-dropzone@9.0.0_react@18.2.0/node_modules/react-dropzone/dist/es/index.js
var _extends = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var _createClass = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(obj, keys) {
  var target = {};
  for (var i in obj) {
    if (keys.indexOf(i) >= 0)
      continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i))
      continue;
    target[i] = obj[i];
  }
  return target;
}
function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return Array.from(arr);
  }
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var Dropzone = function(_React$Component) {
  _inherits(Dropzone2, _React$Component);
  function Dropzone2() {
    var _ref;
    var _temp, _this, _ret;
    _classCallCheck(this, Dropzone2);
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dropzone2.__proto__ || Object.getPrototypeOf(Dropzone2)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      draggedFiles: [],
      acceptedFiles: [],
      rejectedFiles: []
    }, _this.isFileDialogActive = false, _this.onDocumentDrop = function(evt) {
      if (_this.node && _this.node.contains(evt.target)) {
        return;
      }
      evt.preventDefault();
      _this.dragTargets = [];
    }, _this.onDragStart = function(evt) {
      evt.persist();
      if (_this.props.onDragStart && isDragDataWithFiles(evt)) {
        _this.props.onDragStart.call(_this, evt);
      }
    }, _this.onDragEnter = function(evt) {
      evt.preventDefault();
      if (_this.dragTargets.indexOf(evt.target) === -1) {
        _this.dragTargets.push(evt.target);
      }
      evt.persist();
      if (isDragDataWithFiles(evt)) {
        Promise.resolve(_this.props.getDataTransferItems(evt)).then(function(draggedFiles) {
          if (isPropagationStopped(evt)) {
            return;
          }
          _this.setState({
            draggedFiles,
            // Do not rely on files for the drag state. It doesn't work in Safari.
            isDragActive: true
          });
        });
        if (_this.props.onDragEnter) {
          _this.props.onDragEnter.call(_this, evt);
        }
      }
    }, _this.onDragOver = function(evt) {
      evt.preventDefault();
      evt.persist();
      if (evt.dataTransfer) {
        evt.dataTransfer.dropEffect = "copy";
      }
      if (_this.props.onDragOver && isDragDataWithFiles(evt)) {
        _this.props.onDragOver.call(_this, evt);
      }
      return false;
    }, _this.onDragLeave = function(evt) {
      evt.preventDefault();
      evt.persist();
      _this.dragTargets = _this.dragTargets.filter(function(el) {
        return el !== evt.target && _this.node.contains(el);
      });
      if (_this.dragTargets.length > 0) {
        return;
      }
      _this.setState({
        isDragActive: false,
        draggedFiles: []
      });
      if (_this.props.onDragLeave && isDragDataWithFiles(evt)) {
        _this.props.onDragLeave.call(_this, evt);
      }
    }, _this.onDrop = function(evt) {
      var _this$props = _this.props, onDrop = _this$props.onDrop, onDropAccepted = _this$props.onDropAccepted, onDropRejected = _this$props.onDropRejected, multiple = _this$props.multiple, accept = _this$props.accept, getDataTransferItems = _this$props.getDataTransferItems;
      evt.preventDefault();
      evt.persist();
      _this.dragTargets = [];
      _this.isFileDialogActive = false;
      _this.draggedFiles = null;
      _this.setState({
        isDragActive: false,
        draggedFiles: []
      });
      if (isDragDataWithFiles(evt)) {
        Promise.resolve(getDataTransferItems(evt)).then(function(fileList) {
          var acceptedFiles = [];
          var rejectedFiles = [];
          if (isPropagationStopped(evt)) {
            return;
          }
          fileList.forEach(function(file) {
            if (fileAccepted(file, accept) && fileMatchSize(file, _this.props.maxSize, _this.props.minSize)) {
              acceptedFiles.push(file);
            } else {
              rejectedFiles.push(file);
            }
          });
          if (!multiple && acceptedFiles.length > 1) {
            rejectedFiles.push.apply(rejectedFiles, _toConsumableArray(acceptedFiles.splice(0)));
          }
          _this.setState({ acceptedFiles, rejectedFiles }, function() {
            if (onDrop) {
              onDrop.call(_this, acceptedFiles, rejectedFiles, evt);
            }
            if (rejectedFiles.length > 0 && onDropRejected) {
              onDropRejected.call(_this, rejectedFiles, evt);
            }
            if (acceptedFiles.length > 0 && onDropAccepted) {
              onDropAccepted.call(_this, acceptedFiles, evt);
            }
          });
        });
      }
    }, _this.onClick = function(evt) {
      var onClick = _this.props.onClick;
      if (onClick) {
        onClick.call(_this, evt);
      }
      if (!isDefaultPrevented(evt)) {
        evt.stopPropagation();
        if (isIeOrEdge()) {
          setTimeout(_this.open, 0);
        } else {
          _this.open();
        }
      }
    }, _this.onInputElementClick = function(evt) {
      evt.stopPropagation();
    }, _this.onFileDialogCancel = function() {
      var onFileDialogCancel = _this.props.onFileDialogCancel;
      if (_this.isFileDialogActive) {
        setTimeout(function() {
          if (_this.input != null) {
            var files = _this.input.files;
            if (!files.length) {
              _this.isFileDialogActive = false;
              if (typeof onFileDialogCancel === "function") {
                onFileDialogCancel();
              }
            }
          }
        }, 300);
      }
    }, _this.onFocus = function(evt) {
      var onFocus = _this.props.onFocus;
      if (onFocus) {
        onFocus.call(_this, evt);
      }
      if (!isDefaultPrevented(evt)) {
        _this.setState({ isFocused: true });
      }
    }, _this.onBlur = function(evt) {
      var onBlur = _this.props.onBlur;
      if (onBlur) {
        onBlur.call(_this, evt);
      }
      if (!isDefaultPrevented(evt)) {
        _this.setState({ isFocused: false });
      }
    }, _this.onKeyDown = function(evt) {
      var onKeyDown = _this.props.onKeyDown;
      if (!_this.node.isEqualNode(evt.target)) {
        return;
      }
      if (onKeyDown) {
        onKeyDown.call(_this, evt);
      }
      if (!isDefaultPrevented(evt) && (evt.keyCode === 32 || evt.keyCode === 13)) {
        evt.preventDefault();
        _this.open();
      }
    }, _this.composeHandler = function(handler) {
      if (_this.props.disabled) {
        return null;
      }
      return handler;
    }, _this.getRootProps = function() {
      var _extends2;
      var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragStart = _ref2.onDragStart, onDragEnter = _ref2.onDragEnter, onDragOver = _ref2.onDragOver, onDragLeave = _ref2.onDragLeave, onDrop = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, ["refKey", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragStart", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"]);
      return _extends((_extends2 = {
        onKeyDown: _this.composeHandler(onKeyDown ? composeEventHandlers(onKeyDown, _this.onKeyDown) : _this.onKeyDown),
        onFocus: _this.composeHandler(onFocus ? composeEventHandlers(onFocus, _this.onFocus) : _this.onFocus),
        onBlur: _this.composeHandler(onBlur ? composeEventHandlers(onBlur, _this.onBlur) : _this.onBlur),
        onClick: _this.composeHandler(onClick ? composeEventHandlers(onClick, _this.onClick) : _this.onClick),
        onDragStart: _this.composeHandler(onDragStart ? composeEventHandlers(onDragStart, _this.onDragStart) : _this.onDragStart),
        onDragEnter: _this.composeHandler(onDragEnter ? composeEventHandlers(onDragEnter, _this.onDragEnter) : _this.onDragEnter),
        onDragOver: _this.composeHandler(onDragOver ? composeEventHandlers(onDragOver, _this.onDragOver) : _this.onDragOver),
        onDragLeave: _this.composeHandler(onDragLeave ? composeEventHandlers(onDragLeave, _this.onDragLeave) : _this.onDragLeave),
        onDrop: _this.composeHandler(onDrop ? composeEventHandlers(onDrop, _this.onDrop) : _this.onDrop)
      }, _defineProperty(_extends2, refKey, _this.setNodeRef), _defineProperty(_extends2, "tabIndex", _this.props.disabled ? -1 : 0), _extends2), rest);
    }, _this.getInputProps = function() {
      var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, ["refKey", "onChange", "onClick"]);
      var _this$props2 = _this.props, accept = _this$props2.accept, multiple = _this$props2.multiple, name = _this$props2.name;
      var inputProps = _defineProperty({
        accept,
        type: "file",
        style: { display: "none" },
        multiple: supportMultiple && multiple,
        onChange: composeEventHandlers(onChange, _this.onDrop),
        onClick: composeEventHandlers(onClick, _this.onInputElementClick),
        autoComplete: "off",
        tabIndex: -1
      }, refKey, _this.setInputRef);
      if (name && name.length) {
        inputProps.name = name;
      }
      return _extends({}, inputProps, rest);
    }, _this.setNodeRef = function(node) {
      _this.node = node;
    }, _this.setInputRef = function(input) {
      _this.input = input;
    }, _this.open = function() {
      _this.isFileDialogActive = true;
      if (_this.input) {
        _this.input.value = null;
        _this.input.click();
      }
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }
  _createClass(Dropzone2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var preventDropOnDocument = this.props.preventDropOnDocument;
      this.dragTargets = [];
      if (preventDropOnDocument) {
        document.addEventListener("dragover", onDocumentDragOver, false);
        document.addEventListener("drop", this.onDocumentDrop, false);
      }
      window.addEventListener("focus", this.onFileDialogCancel, false);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var preventDropOnDocument = this.props.preventDropOnDocument;
      if (preventDropOnDocument) {
        document.removeEventListener("dragover", onDocumentDragOver);
        document.removeEventListener("drop", this.onDocumentDrop);
      }
      window.removeEventListener("focus", this.onFileDialogCancel, false);
    }
    /**
     * Open system file upload dialog.
     *
     * @public
     */
  }, {
    key: "render",
    value: function render() {
      var _props = this.props, children = _props.children, multiple = _props.multiple, disabled = _props.disabled;
      var _state = this.state, isDragActive = _state.isDragActive, isFocused = _state.isFocused, draggedFiles = _state.draggedFiles, acceptedFiles = _state.acceptedFiles, rejectedFiles = _state.rejectedFiles;
      var filesCount = draggedFiles.length;
      var isMultipleAllowed = multiple || filesCount <= 1;
      var isDragAccept = filesCount > 0 && allFilesAccepted(draggedFiles, this.props.accept);
      var isDragReject = filesCount > 0 && (!isDragAccept || !isMultipleAllowed);
      return children({
        isDragActive,
        isDragAccept,
        isDragReject,
        draggedFiles,
        acceptedFiles,
        rejectedFiles,
        isFocused: isFocused && !disabled,
        getRootProps: this.getRootProps,
        getInputProps: this.getInputProps,
        open: this.open
      });
    }
  }]);
  return Dropzone2;
}(import_react5.default.Component);
var es_default = Dropzone;
Dropzone.propTypes = {
  /**
   * Allow specific types of files. See https://github.com/okonet/attr-accept for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all.
   * See: https://github.com/react-dropzone/react-dropzone/issues/276
   */
  accept: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]),
  /**
   * Render function that renders the actual component
   *
   * @param {Object} props
   * @param {Function} props.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} props.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} props.open Open the native file selection dialog
   * @param {Boolean} props.isFocused Dropzone area is in focus
   * @param {Boolean} props.isDragActive Active drag is in progress
   * @param {Boolean} props.isDragAccept Dragged files are accepted
   * @param {Boolean} props.isDragReject Some dragged files are rejected
   * @param {Array} props.draggedFiles Files in active drag
   * @param {Array} props.acceptedFiles Accepted files
   * @param {Array} props.rejectedFiles Rejected files
   */
  children: import_prop_types.default.func,
  /**
   * Enable/disable the dropzone entirely
   */
  disabled: import_prop_types.default.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: import_prop_types.default.bool,
  /**
   * Allow dropping multiple files
   */
  multiple: import_prop_types.default.bool,
  /**
   * `name` attribute for the input tag
   */
  name: import_prop_types.default.string,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: import_prop_types.default.number,
  /**
   * Minimum file size (in bytes)
   */
  minSize: import_prop_types.default.number,
  /**
   * getDataTransferItems handler
   * @param {Event} event
   * @returns {Array} array of File objects
   */
  getDataTransferItems: import_prop_types.default.func,
  /**
   * onClick callback
   * @param {Event} event
   */
  onClick: import_prop_types.default.func,
  /**
   * onFocus callback
   */
  onFocus: import_prop_types.default.func,
  /**
   * onBlur callback
   */
  onBlur: import_prop_types.default.func,
  /**
   * onKeyDown callback
   */
  onKeyDown: import_prop_types.default.func,
  /**
   * The `onDrop` method that accepts two arguments.
   * The first argument represents the accepted files and the second argument the rejected files.
   *
   * ```javascript
   * function onDrop(acceptedFiles, rejectedFiles) {
   *   // do stuff with files...
   * }
   * ```
   *
   * Files are accepted or rejected based on the `accept` prop.
   * This must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   *
   * Note that the `onDrop` callback will always be called regardless if the dropped files were accepted or rejected.
   * You can use the `onDropAccepted`/`onDropRejected` props if you'd like to react to a specific event instead of the `onDrop` prop.
   *
   * The `onDrop` callback will provide you with an array of [Files](https://developer.mozilla.org/en-US/docs/Web/API/File) which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```javascript
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   */
  onDrop: import_prop_types.default.func,
  /**
   * onDropAccepted callback
   */
  onDropAccepted: import_prop_types.default.func,
  /**
   * onDropRejected callback
   */
  onDropRejected: import_prop_types.default.func,
  /**
   * onDragStart callback
   */
  onDragStart: import_prop_types.default.func,
  /**
   * onDragEnter callback
   */
  onDragEnter: import_prop_types.default.func,
  /**
   * onDragOver callback
   */
  onDragOver: import_prop_types.default.func,
  /**
   * onDragLeave callback
   */
  onDragLeave: import_prop_types.default.func,
  /**
   * Provide a callback on clicking the cancel button of the file dialog
   */
  onFileDialogCancel: import_prop_types.default.func
};
Dropzone.defaultProps = {
  preventDropOnDocument: true,
  disabled: false,
  multiple: true,
  maxSize: Infinity,
  minSize: 0,
  getDataTransferItems: fromEvent
};

// ../../node_modules/.pnpm/file-selector@0.6.0/node_modules/file-selector/dist/es5/file.js
var COMMON_MIME_TYPES2 = /* @__PURE__ */ new Map([
  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["heic", "image/heic"],
  ["heif", "image/heif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  // Others
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function toFileWithPath2(file, path) {
  var f = withMimeType2(file);
  if (typeof f.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f;
}
function withMimeType2(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES2.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}

// ../../node_modules/.pnpm/file-selector@0.6.0/node_modules/file-selector/dist/es5/file-selector.js
var FILES_TO_IGNORE2 = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  "Thumbs.db"
  // Windows
];
function fromEvent2(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      if (isObject(evt) && isDataTransfer(evt.dataTransfer)) {
        return [2, getDataTransferFiles2(evt.dataTransfer, evt.type)];
      } else if (isChangeEvt(evt)) {
        return [2, getInputFiles2(evt)];
      } else if (Array.isArray(evt) && evt.every(function(item) {
        return "getFile" in item && typeof item.getFile === "function";
      })) {
        return [2, getFsHandleFiles(evt)];
      }
      return [2, []];
    });
  });
}
function isDataTransfer(value) {
  return isObject(value);
}
function isChangeEvt(value) {
  return isObject(value) && isObject(value.target);
}
function isObject(v) {
  return typeof v === "object" && v !== null;
}
function getInputFiles2(evt) {
  return fromList2(evt.target.files).map(function(file) {
    return toFileWithPath2(file);
  });
}
function getFsHandleFiles(handles) {
  return __awaiter(this, void 0, void 0, function() {
    var files;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          return [4, Promise.all(handles.map(function(h) {
            return h.getFile();
          }))];
        case 1:
          files = _a.sent();
          return [2, files.map(function(file) {
            return toFileWithPath2(file);
          })];
      }
    });
  });
}
function getDataTransferFiles2(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          if (!dt.items)
            return [3, 2];
          items = fromList2(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises2))];
        case 1:
          files = _a.sent();
          return [2, noIgnoredFiles2(flatten2(files))];
        case 2:
          return [2, noIgnoredFiles2(fromList2(dt.files).map(function(file) {
            return toFileWithPath2(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles2(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE2.indexOf(file.name) === -1;
  });
}
function fromList2(items) {
  if (items === null) {
    return [];
  }
  var files = [];
  for (var i = 0; i < items.length; i++) {
    var file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises2(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem2(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry2(entry);
  }
  return fromDataTransferItem2(item);
}
function flatten2(items) {
  return items.reduce(function(acc, files) {
    return __spreadArray(__spreadArray([], __read(acc), false), __read(Array.isArray(files) ? flatten2(files) : [files]), false);
  }, []);
}
function fromDataTransferItem2(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject("".concat(item, " is not a File"));
  }
  var fwp = toFileWithPath2(file);
  return Promise.resolve(fwp);
}
function fromEntry2(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, entry.isDirectory ? fromDirEntry2(entry) : fromFileEntry2(entry)];
    });
  });
}
function fromDirEntry2(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                if (!!batch.length)
                  return [3, 5];
                _a.label = 1;
              case 1:
                _a.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry2));
                entries.push(items);
                readEntries();
                _a.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry2(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath2(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/FileUpload/FileUpload.js
var FileUpload = (_a) => {
  var { id, type, value = type === fileReaderType.text || type === fileReaderType.dataURL ? "" : null, filename = "", children = null, onChange = () => {
  }, onFileInputChange = null, onReadStarted = () => {
  }, onReadFinished = () => {
  }, onReadFailed = () => {
  }, onClearClick, onClick = (event) => event.preventDefault(), onTextChange, onDataChange, dropzoneProps = {} } = _a, props = __rest(_a, ["id", "type", "value", "filename", "children", "onChange", "onFileInputChange", "onReadStarted", "onReadFinished", "onReadFailed", "onClearClick", "onClick", "onTextChange", "onDataChange", "dropzoneProps"]);
  const onDropAccepted = (acceptedFiles, event) => {
    if (acceptedFiles.length > 0) {
      const fileHandle = acceptedFiles[0];
      if (event.type === "drop") {
        onFileInputChange === null || onFileInputChange === void 0 ? void 0 : onFileInputChange(event, fileHandle);
      }
      if (type === fileReaderType.text || type === fileReaderType.dataURL) {
        onChange("", fileHandle.name, event);
        onReadStarted(fileHandle);
        readFile(fileHandle, type).then((data) => {
          onReadFinished(fileHandle);
          onChange(data, fileHandle.name, event);
          onDataChange === null || onDataChange === void 0 ? void 0 : onDataChange(data);
        }).catch((error) => {
          onReadFailed(error, fileHandle);
          onReadFinished(fileHandle);
          onChange("", "", event);
          onDataChange === null || onDataChange === void 0 ? void 0 : onDataChange("");
        });
      } else {
        onChange(fileHandle, fileHandle.name, event);
      }
    }
    dropzoneProps.onDropAccepted && dropzoneProps.onDropAccepted(acceptedFiles, event);
  };
  const onDropRejected = (rejectedFiles, event) => {
    if (rejectedFiles.length > 0) {
      onChange("", rejectedFiles[0].name, event);
    }
    dropzoneProps.onDropRejected && dropzoneProps.onDropRejected(rejectedFiles, event);
  };
  const fileInputRef = React136.useRef();
  const setFileValue = (filename2) => {
    fileInputRef.current.value = filename2;
  };
  const onClearButtonClick = (event) => {
    onChange("", "", event);
    onClearClick === null || onClearClick === void 0 ? void 0 : onClearClick(event);
    setFileValue(null);
  };
  return React136.createElement(es_default, Object.assign({ multiple: false }, dropzoneProps, { onDropAccepted, onDropRejected }), ({ getRootProps, getInputProps, isDragActive, open }) => {
    const oldInputProps = getInputProps();
    const inputProps = Object.assign(Object.assign({}, oldInputProps), { onChange: (e) => __awaiter(void 0, void 0, void 0, function* () {
      var _a2;
      (_a2 = oldInputProps.onChange) === null || _a2 === void 0 ? void 0 : _a2.call(oldInputProps, e);
      const files = yield fromEvent2(e.nativeEvent);
      if (files.length === 1) {
        onFileInputChange === null || onFileInputChange === void 0 ? void 0 : onFileInputChange(e, files[0]);
      }
    }) });
    return React136.createElement(
      FileUploadField,
      Object.assign({}, getRootProps(Object.assign(Object.assign({}, props), { refKey: "containerRef", onClick: (event) => event.preventDefault() })), { tabIndex: null, id, type, filename, value, onChange, isDragActive, onBrowseButtonClick: open, onClearButtonClick, onTextAreaClick: onClick, onTextChange }),
      React136.createElement("input", Object.assign({}, inputProps, { ref: (input) => {
        fileInputRef.current = input;
        inputProps.ref(input);
      } })),
      children
    );
  });
};
FileUpload.displayName = "FileUpload";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/HelperText/HelperText.js
var React137 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/HelperText/helper-text.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/HelperText/helper-text.css";
var helper_text_default = {
  "helperText": "pf-c-helper-text",
  "helperTextItem": "pf-c-helper-text__item",
  "helperTextItemIcon": "pf-c-helper-text__item-icon",
  "helperTextItemText": "pf-c-helper-text__item-text",
  "modifiers": {
    "indeterminate": "pf-m-indeterminate",
    "warning": "pf-m-warning",
    "success": "pf-m-success",
    "error": "pf-m-error",
    "dynamic": "pf-m-dynamic"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/HelperText/HelperText.js
var HelperText = (_a) => {
  var { children, className, component = "div", id, isLiveRegion = false } = _a, props = __rest(_a, ["children", "className", "component", "id", "isLiveRegion"]);
  const Component47 = component;
  return React137.createElement(Component47, Object.assign({ id, className: css(helper_text_default.helperText, className) }, isLiveRegion && { "aria-live": "polite" }, props), children);
};
HelperText.displayName = "HelperText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/HelperText/HelperTextItem.js
var React138 = __toESM(require_react());
var variantStyle = {
  default: "",
  indeterminate: helper_text_default.modifiers.indeterminate,
  warning: helper_text_default.modifiers.warning,
  success: helper_text_default.modifiers.success,
  error: helper_text_default.modifiers.error
};
var HelperTextItem = (_a) => {
  var { children, className, component = "div", variant = "default", icon, isDynamic = false, hasIcon = isDynamic, id, screenReaderText = `${variant} status` } = _a, props = __rest(_a, ["children", "className", "component", "variant", "icon", "isDynamic", "hasIcon", "id", "screenReaderText"]);
  const Component47 = component;
  return React138.createElement(
    Component47,
    Object.assign({ className: css(helper_text_default.helperTextItem, variantStyle[variant], isDynamic && helper_text_default.modifiers.dynamic, className), id }, props),
    icon && React138.createElement("span", { className: css(helper_text_default.helperTextItemIcon), "aria-hidden": true }, icon),
    hasIcon && !icon && React138.createElement(
      "span",
      { className: css(helper_text_default.helperTextItemIcon), "aria-hidden": true },
      (variant === "default" || variant === "indeterminate") && React138.createElement(minus_icon_default, null),
      variant === "warning" && React138.createElement(exclamation_triangle_icon_default, null),
      variant === "success" && React138.createElement(check_circle_icon_default, null),
      variant === "error" && React138.createElement(exclamation_circle_icon_default, null)
    ),
    React138.createElement(
      "span",
      { className: css(helper_text_default.helperTextItemText) },
      children,
      isDynamic && React138.createElement(
        "span",
        { className: "pf-u-screen-reader" },
        ": ",
        screenReaderText,
        ";"
      )
    )
  );
};
HelperTextItem.displayName = "HelperTextItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Hint/Hint.js
var React139 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Hint/hint.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Hint/hint.css";
var hint_default = {
  "button": "pf-c-button",
  "dropdown": "pf-c-dropdown",
  "dropdownToggle": "pf-c-dropdown__toggle",
  "hint": "pf-c-hint",
  "hintActions": "pf-c-hint__actions",
  "hintBody": "pf-c-hint__body",
  "hintFooter": "pf-c-hint__footer",
  "hintTitle": "pf-c-hint__title",
  "modifiers": {
    "link": "pf-m-link",
    "inline": "pf-m-inline",
    "plain": "pf-m-plain"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Hint/Hint.js
var Hint = (_a) => {
  var { children, className, actions } = _a, props = __rest(_a, ["children", "className", "actions"]);
  return React139.createElement(
    "div",
    Object.assign({ className: css(hint_default.hint, className) }, props),
    React139.createElement("div", { className: css(hint_default.hintActions) }, actions),
    children
  );
};
Hint.displayName = "Hint";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Hint/HintBody.js
var React140 = __toESM(require_react());
var HintBody = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React140.createElement("div", Object.assign({ className: css(hint_default.hintBody, className) }, props), children);
};
HintBody.displayName = "HintBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Hint/HintFooter.js
var React141 = __toESM(require_react());
var HintFooter = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React141.createElement("div", Object.assign({ className: css(hint_default.hintFooter, className) }, props), children);
};
HintFooter.displayName = "HintFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Hint/HintTitle.js
var React142 = __toESM(require_react());
var HintTitle = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React142.createElement("div", Object.assign({ className: css(hint_default.hintTitle, className) }, props), children);
};
HintTitle.displayName = "HintTitle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Icon/Icon.js
var React143 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Icon/icon.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Icon/icon.css";
var icon_default = {
  "icon": "pf-c-icon",
  "iconContent": "pf-c-icon__content",
  "iconProgress": "pf-c-icon__progress",
  "modifiers": {
    "inline": "pf-m-inline",
    "sm": "pf-m-sm",
    "md": "pf-m-md",
    "lg": "pf-m-lg",
    "xl": "pf-m-xl",
    "inProgress": "pf-m-in-progress",
    "danger": "pf-m-danger",
    "warning": "pf-m-warning",
    "success": "pf-m-success",
    "info": "pf-m-info",
    "default": "pf-m-default"
  },
  "spinner": "pf-c-spinner"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Icon/Icon.js
var Icon = (_a) => {
  var { children, className, progressIcon, size, iconSize, progressIconSize, status, isInline = false, isInProgress = false, defaultProgressArialabel = "Loading..." } = _a, props = __rest(_a, ["children", "className", "progressIcon", "size", "iconSize", "progressIconSize", "status", "isInline", "isInProgress", "defaultProgressArialabel"]);
  const _progressIcon = progressIcon ? progressIcon : React143.createElement(Spinner, { diameter: "1em", isSVG: true, "aria-label": defaultProgressArialabel });
  return React143.createElement(
    "span",
    Object.assign({ className: css(icon_default.icon, isInline && icon_default.modifiers.inline, isInProgress && icon_default.modifiers.inProgress, icon_default.modifiers[size], className) }, props),
    React143.createElement("span", { className: css(icon_default.iconContent, icon_default.modifiers[iconSize], icon_default.modifiers[status]) }, children),
    isInProgress && React143.createElement("span", { className: css(icon_default.iconProgress, icon_default.modifiers[progressIconSize], className) }, _progressIcon)
  );
};
Icon.displayName = "Icon";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/JumpLinks/JumpLinks.js
var React146 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/JumpLinks/jump-links.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/JumpLinks/jump-links.css";
var jump_links_default = {
  "button": "pf-c-button",
  "jumpLinks": "pf-c-jump-links",
  "jumpLinksItem": "pf-c-jump-links__item",
  "jumpLinksLabel": "pf-c-jump-links__label",
  "jumpLinksLink": "pf-c-jump-links__link",
  "jumpLinksLinkText": "pf-c-jump-links__link-text",
  "jumpLinksList": "pf-c-jump-links__list",
  "jumpLinksMain": "pf-c-jump-links__main",
  "jumpLinksToggle": "pf-c-jump-links__toggle",
  "jumpLinksToggleIcon": "pf-c-jump-links__toggle-icon",
  "jumpLinksToggleText": "pf-c-jump-links__toggle-text",
  "modifiers": {
    "center": "pf-m-center",
    "vertical": "pf-m-vertical",
    "expandable": "pf-m-expandable",
    "nonExpandable": "pf-m-non-expandable",
    "expandableOnSm": "pf-m-expandable-on-sm",
    "nonExpandableOnSm": "pf-m-non-expandable-on-sm",
    "expandableOnMd": "pf-m-expandable-on-md",
    "nonExpandableOnMd": "pf-m-non-expandable-on-md",
    "expandableOnLg": "pf-m-expandable-on-lg",
    "nonExpandableOnLg": "pf-m-non-expandable-on-lg",
    "expandableOnXl": "pf-m-expandable-on-xl",
    "nonExpandableOnXl": "pf-m-non-expandable-on-xl",
    "expandableOn_2xl": "pf-m-expandable-on-2xl",
    "nonExpandableOn_2xl": "pf-m-non-expandable-on-2xl",
    "expanded": "pf-m-expanded",
    "current": "pf-m-current"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Sidebar/sidebar.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Sidebar/sidebar.css";
var sidebar_default = {
  "modifiers": {
    "gutter": "pf-m-gutter",
    "panelRight": "pf-m-panel-right",
    "stack": "pf-m-stack",
    "split": "pf-m-split",
    "sticky": "pf-m-sticky",
    "static": "pf-m-static",
    "noBackground": "pf-m-no-background",
    "widthDefault": "pf-m-width-default",
    "width_25": "pf-m-width-25",
    "width_33": "pf-m-width-33",
    "width_50": "pf-m-width-50",
    "width_66": "pf-m-width-66",
    "width_75": "pf-m-width-75",
    "width_100": "pf-m-width-100",
    "widthDefaultOnSm": "pf-m-width-default-on-sm",
    "width_25OnSm": "pf-m-width-25-on-sm",
    "width_33OnSm": "pf-m-width-33-on-sm",
    "width_50OnSm": "pf-m-width-50-on-sm",
    "width_66OnSm": "pf-m-width-66-on-sm",
    "width_75OnSm": "pf-m-width-75-on-sm",
    "width_100OnSm": "pf-m-width-100-on-sm",
    "widthDefaultOnMd": "pf-m-width-default-on-md",
    "width_25OnMd": "pf-m-width-25-on-md",
    "width_33OnMd": "pf-m-width-33-on-md",
    "width_50OnMd": "pf-m-width-50-on-md",
    "width_66OnMd": "pf-m-width-66-on-md",
    "width_75OnMd": "pf-m-width-75-on-md",
    "width_100OnMd": "pf-m-width-100-on-md",
    "widthDefaultOnLg": "pf-m-width-default-on-lg",
    "width_25OnLg": "pf-m-width-25-on-lg",
    "width_33OnLg": "pf-m-width-33-on-lg",
    "width_50OnLg": "pf-m-width-50-on-lg",
    "width_66OnLg": "pf-m-width-66-on-lg",
    "width_75OnLg": "pf-m-width-75-on-lg",
    "width_100OnLg": "pf-m-width-100-on-lg",
    "widthDefaultOnXl": "pf-m-width-default-on-xl",
    "width_25OnXl": "pf-m-width-25-on-xl",
    "width_33OnXl": "pf-m-width-33-on-xl",
    "width_50OnXl": "pf-m-width-50-on-xl",
    "width_66OnXl": "pf-m-width-66-on-xl",
    "width_75OnXl": "pf-m-width-75-on-xl",
    "width_100OnXl": "pf-m-width-100-on-xl",
    "widthDefaultOn_2xl": "pf-m-width-default-on-2xl",
    "width_25On_2xl": "pf-m-width-25-on-2xl",
    "width_33On_2xl": "pf-m-width-33-on-2xl",
    "width_50On_2xl": "pf-m-width-50-on-2xl",
    "width_66On_2xl": "pf-m-width-66-on-2xl",
    "width_75On_2xl": "pf-m-width-75-on-2xl",
    "width_100On_2xl": "pf-m-width-100-on-2xl"
  },
  "sidebar": "pf-c-sidebar",
  "sidebarContent": "pf-c-sidebar__content",
  "sidebarMain": "pf-c-sidebar__main",
  "sidebarPanel": "pf-c-sidebar__panel"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/JumpLinks/JumpLinksItem.js
var React145 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/JumpLinks/JumpLinksList.js
var React144 = __toESM(require_react());
var JumpLinksList = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React144.createElement("ul", Object.assign({ className: css(jump_links_default.jumpLinksList, className) }, props), children);
};
JumpLinksList.displayName = "JumpLinksList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/JumpLinks/JumpLinksItem.js
var JumpLinksItem = (_a) => {
  var {
    isActive,
    href,
    // eslint-disable-next-line
    node,
    children,
    onClick,
    className
  } = _a, props = __rest(_a, ["isActive", "href", "node", "children", "onClick", "className"]);
  const childrenArr = React145.Children.toArray(children);
  const sublists = childrenArr.filter((child) => child.type === JumpLinksList);
  children = childrenArr.filter((child) => child.type !== JumpLinksList);
  return React145.createElement(
    "li",
    Object.assign({ className: css(jump_links_default.jumpLinksItem, isActive && jump_links_default.modifiers.current, className) }, isActive && { "aria-current": "location" }, props),
    React145.createElement(
      "a",
      { className: jump_links_default.jumpLinksLink, href, onClick },
      React145.createElement("span", { className: jump_links_default.jumpLinksLinkText }, children)
    ),
    sublists
  );
};
JumpLinksItem.displayName = "JumpLinksItem";

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_jump_links__toggle_Display.js
var c_jump_links__toggle_Display = {
  "name": "--pf-c-jump-links__toggle--Display",
  "value": "none",
  "var": "var(--pf-c-jump-links__toggle--Display)"
};
var c_jump_links_toggle_Display_default = c_jump_links__toggle_Display;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/JumpLinks/JumpLinks.js
var getScrollItems = (children, res) => {
  React146.Children.forEach(children, (child) => {
    if (canUseDOM && document.getElementById && document.querySelector && child.type === JumpLinksItem) {
      const scrollNode = child.props.node || child.props.href;
      if (typeof scrollNode === "string") {
        if (scrollNode.startsWith("#")) {
          res.push(document.getElementById(scrollNode.substr(1)));
        } else {
          res.push(document.querySelector(scrollNode));
        }
      } else if (scrollNode instanceof HTMLElement) {
        res.push(scrollNode);
      }
    }
    if ([React146.Fragment, JumpLinksList, JumpLinksItem].includes(child.type)) {
      getScrollItems(child.props.children, res);
    }
  });
  return res;
};
function isResponsive(jumpLinks) {
  return jumpLinks && getComputedStyle(jumpLinks).getPropertyValue(c_jump_links_toggle_Display_default.name).includes("block");
}
var JumpLinks = (_a) => {
  var { isCentered, isVertical, children, label, "aria-label": ariaLabel = typeof label === "string" ? label : null, scrollableSelector, activeIndex: activeIndexProp = 0, offset = 0, expandable, isExpanded: isExpandedProp = false, alwaysShowLabel = true, toggleAriaLabel = "Toggle jump links", className } = _a, props = __rest(_a, ["isCentered", "isVertical", "children", "label", "aria-label", "scrollableSelector", "activeIndex", "offset", "expandable", "isExpanded", "alwaysShowLabel", "toggleAriaLabel", "className"]);
  const hasScrollSpy = Boolean(scrollableSelector);
  const [scrollItems, setScrollItems] = React146.useState(hasScrollSpy ? getScrollItems(children, []) : []);
  const [activeIndex, setActiveIndex] = React146.useState(activeIndexProp);
  const [isExpanded, setIsExpanded] = React146.useState(isExpandedProp);
  const isLinkClicked = React146.useRef(false);
  React146.useEffect(() => setIsExpanded(isExpandedProp), [isExpandedProp]);
  const navRef = React146.useRef();
  let scrollableElement;
  const scrollSpy = React146.useCallback(() => {
    if (!canUseDOM || !hasScrollSpy || !(scrollableElement instanceof HTMLElement)) {
      return;
    }
    if (isLinkClicked.current) {
      isLinkClicked.current = false;
      return;
    }
    const scrollPosition = Math.ceil(scrollableElement.scrollTop + offset);
    window.requestAnimationFrame(() => {
      let newScrollItems = scrollItems;
      if (!newScrollItems[0] || newScrollItems.includes(null)) {
        newScrollItems = getScrollItems(children, []);
        setScrollItems(newScrollItems);
      }
      const scrollElements = newScrollItems.map((e, index) => ({
        y: e ? e.offsetTop : null,
        index
      })).filter(({ y }) => y !== null).sort((e1, e2) => e2.y - e1.y);
      for (const { y, index } of scrollElements) {
        if (scrollPosition >= y) {
          return setActiveIndex(index);
        }
      }
    });
  }, [scrollItems, hasScrollSpy, scrollableElement, offset]);
  React146.useEffect(() => {
    scrollableElement = document.querySelector(scrollableSelector);
    if (!(scrollableElement instanceof HTMLElement)) {
      return;
    }
    scrollableElement.addEventListener("scroll", scrollSpy);
    return () => scrollableElement.removeEventListener("scroll", scrollSpy);
  }, [scrollableSelector, scrollSpy]);
  React146.useEffect(() => {
    scrollSpy();
  }, []);
  let jumpLinkIndex = 0;
  const cloneChildren = (children2) => !hasScrollSpy ? children2 : React146.Children.map(children2, (child) => {
    if (child.type === JumpLinksItem) {
      const { onClick: onClickProp, isActive: isActiveProp } = child.props;
      const itemIndex = jumpLinkIndex++;
      const scrollItem = scrollItems[itemIndex];
      return React146.cloneElement(child, {
        onClick(ev) {
          isLinkClicked.current = true;
          let newScrollItems;
          if (!scrollItem) {
            newScrollItems = getScrollItems(children2, []);
            setScrollItems(newScrollItems);
          }
          const newScrollItem = scrollItem || newScrollItems[itemIndex];
          if (newScrollItem) {
            const scrollableElement2 = document.querySelector(scrollableSelector);
            if (scrollableElement2 instanceof HTMLElement) {
              if (isResponsive(navRef.current)) {
                if (navRef.current) {
                  navRef.current.classList.remove(jump_links_default.modifiers.expanded);
                }
                let stickyParent = navRef.current && navRef.current.parentElement;
                while (stickyParent && !stickyParent.classList.contains(sidebar_default.modifiers.sticky)) {
                  stickyParent = stickyParent.parentElement;
                }
                setIsExpanded(false);
                if (stickyParent) {
                  offset += stickyParent.scrollHeight;
                }
              }
              scrollableElement2.scrollTo(0, newScrollItem.offsetTop - offset);
            }
            newScrollItem.focus();
            ev.preventDefault();
            setActiveIndex(itemIndex);
          }
          if (onClickProp) {
            onClickProp(ev);
          }
        },
        isActive: isActiveProp || activeIndex === itemIndex,
        children: cloneChildren(child.props.children)
      });
    } else if (child.type === React146.Fragment) {
      return cloneChildren(child.props.children);
    } else if (child.type === JumpLinksList) {
      return React146.cloneElement(child, { children: cloneChildren(child.props.children) });
    }
    return child;
  });
  return React146.createElement(
    "nav",
    Object.assign({ className: css(jump_links_default.jumpLinks, isCentered && jump_links_default.modifiers.center, isVertical && jump_links_default.modifiers.vertical, formatBreakpointMods(expandable, jump_links_default), isExpanded && jump_links_default.modifiers.expanded, className), "aria-label": ariaLabel, ref: navRef }, props),
    React146.createElement(
      "div",
      { className: jump_links_default.jumpLinksMain },
      React146.createElement(
        "div",
        { className: css("pf-c-jump-links__header") },
        expandable && React146.createElement(
          "div",
          { className: jump_links_default.jumpLinksToggle },
          React146.createElement(
            Button,
            { variant: "plain", onClick: () => setIsExpanded(!isExpanded), "aria-label": toggleAriaLabel, "aria-expanded": isExpanded },
            React146.createElement(
              "span",
              { className: jump_links_default.jumpLinksToggleIcon },
              React146.createElement(angle_right_icon_default, null)
            ),
            label && React146.createElement(
              "span",
              { className: css(jump_links_default.jumpLinksToggleText) },
              " ",
              label,
              " "
            )
          )
        ),
        label && alwaysShowLabel && React146.createElement("div", { className: css(jump_links_default.jumpLinksLabel) }, label)
      ),
      React146.createElement("ul", { className: jump_links_default.jumpLinksList }, cloneChildren(children))
    )
  );
};
JumpLinks.displayName = "JumpLinks";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js
var React147 = __toESM(require_react());
var import_react6 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Label/label.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Label/label.css";
var label_default = {
  "button": "pf-c-button",
  "label": "pf-c-label",
  "labelContent": "pf-c-label__content",
  "labelIcon": "pf-c-label__icon",
  "labelText": "pf-c-label__text",
  "modifiers": {
    "compact": "pf-m-compact",
    "blue": "pf-m-blue",
    "green": "pf-m-green",
    "orange": "pf-m-orange",
    "red": "pf-m-red",
    "purple": "pf-m-purple",
    "cyan": "pf-m-cyan",
    "gold": "pf-m-gold",
    "outline": "pf-m-outline",
    "overflow": "pf-m-overflow",
    "add": "pf-m-add",
    "editable": "pf-m-editable",
    "editableActive": "pf-m-editable-active"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/LabelGroup/label-group.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/LabelGroup/label-group.css";
var label_group_default = {
  "button": "pf-c-button",
  "labelGroup": "pf-c-label-group",
  "labelGroupClose": "pf-c-label-group__close",
  "labelGroupLabel": "pf-c-label-group__label",
  "labelGroupList": "pf-c-label-group__list",
  "labelGroupListItem": "pf-c-label-group__list-item",
  "labelGroupMain": "pf-c-label-group__main",
  "labelGroupTextarea": "pf-c-label-group__textarea",
  "modifiers": {
    "category": "pf-m-category",
    "vertical": "pf-m-vertical",
    "editable": "pf-m-editable",
    "textarea": "pf-m-textarea"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js
var colorStyles = {
  blue: label_default.modifiers.blue,
  cyan: label_default.modifiers.cyan,
  green: label_default.modifiers.green,
  orange: label_default.modifiers.orange,
  purple: label_default.modifiers.purple,
  red: label_default.modifiers.red,
  gold: label_default.modifiers.gold,
  grey: ""
};
var Label = (_a) => {
  var { children, className = "", color = "grey", variant = "filled", isCompact = false, isEditable = false, editableProps, isTruncated = false, tooltipPosition, icon, onClose, onEditCancel, onEditComplete, closeBtn, closeBtnAriaLabel, closeBtnProps, href, isOverflowLabel, render } = _a, props = __rest(_a, ["children", "className", "color", "variant", "isCompact", "isEditable", "editableProps", "isTruncated", "tooltipPosition", "icon", "onClose", "onEditCancel", "onEditComplete", "closeBtn", "closeBtnAriaLabel", "closeBtnProps", "href", "isOverflowLabel", "render"]);
  const [isEditableActive, setIsEditableActive] = (0, import_react6.useState)(false);
  const [currValue, setCurrValue] = (0, import_react6.useState)(children);
  const editableButtonRef = React147.useRef();
  const editableInputRef = React147.useRef();
  React147.useEffect(() => {
    document.addEventListener("mousedown", onDocMouseDown);
    document.addEventListener("keydown", onKeyDown);
    return () => {
      document.removeEventListener("mousedown", onDocMouseDown);
      document.removeEventListener("keydown", onKeyDown);
    };
  });
  const onDocMouseDown = (event) => {
    if (isEditableActive && editableInputRef && editableInputRef.current && !editableInputRef.current.contains(event.target)) {
      if (editableInputRef.current.value) {
        onEditComplete && onEditComplete(event, editableInputRef.current.value);
      }
      setIsEditableActive(false);
    }
  };
  const onKeyDown = (event) => {
    var _a2, _b;
    const key = event.key;
    if (!isEditableActive && (!editableButtonRef || !editableButtonRef.current || !editableButtonRef.current.contains(event.target)) || isEditableActive && (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target))) {
      return;
    }
    if (isEditableActive && (key === "Enter" || key === "Tab")) {
      event.preventDefault();
      event.stopImmediatePropagation();
      if (editableInputRef.current.value) {
        onEditComplete && onEditComplete(event, editableInputRef.current.value);
      }
      setIsEditableActive(false);
      (_a2 = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a2 === void 0 ? void 0 : _a2.focus();
    }
    if (isEditableActive && key === "Escape") {
      event.preventDefault();
      event.stopImmediatePropagation();
      if (editableInputRef.current.value) {
        editableInputRef.current.value = children;
        onEditCancel && onEditCancel(event, children);
      }
      setIsEditableActive(false);
      (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();
    }
    if (!isEditableActive && key === "Enter") {
      event.preventDefault();
      event.stopImmediatePropagation();
      setIsEditableActive(true);
      const el = event.target;
      const range = document.createRange();
      const sel = window.getSelection();
      range.selectNodeContents(el);
      range.collapse(false);
      sel.removeAllRanges();
      sel.addRange(range);
    }
  };
  const LabelComponent = isOverflowLabel ? "button" : "span";
  const button = closeBtn ? closeBtn : React147.createElement(
    Button,
    Object.assign({ type: "button", variant: "plain", onClick: onClose, "aria-label": closeBtnAriaLabel || `Close ${children}` }, closeBtnProps),
    React147.createElement(times_icon_default, null)
  );
  const textRef = React147.createRef();
  const componentRef = React147.useRef();
  const [isTooltipVisible, setIsTooltipVisible] = React147.useState(false);
  useIsomorphicLayoutEffect(() => {
    const currTextRef = isEditable ? editableButtonRef : textRef;
    if (!isEditableActive) {
      setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);
    }
  }, [isEditableActive]);
  const content = React147.createElement(
    React147.Fragment,
    null,
    icon && React147.createElement("span", { className: css(label_default.labelIcon) }, icon),
    isTruncated && React147.createElement("span", { ref: textRef, className: css(label_default.labelText) }, children),
    !isTruncated && children
  );
  React147.useEffect(() => {
    if (isEditableActive && editableInputRef) {
      editableInputRef.current && editableInputRef.current.focus();
    }
  }, [editableInputRef, isEditableActive]);
  const updateVal = () => {
    setCurrValue(editableInputRef.current.value);
  };
  let labelComponentChild = React147.createElement("span", { className: css(label_default.labelContent) }, content);
  if (href) {
    labelComponentChild = React147.createElement("a", { className: css(label_default.labelContent), href }, content);
  } else if (isEditable) {
    labelComponentChild = React147.createElement("button", Object.assign({ ref: editableButtonRef, className: css(label_default.labelContent), onClick: (e) => {
      setIsEditableActive(true);
      e.stopPropagation();
    } }, editableProps), content);
  }
  if (render) {
    labelComponentChild = React147.createElement(
      React147.Fragment,
      null,
      isTooltipVisible && React147.createElement(Tooltip, { reference: componentRef, content: children, position: tooltipPosition }),
      render({
        className: label_default.labelContent,
        content,
        componentRef
      })
    );
  } else if (isTooltipVisible) {
    labelComponentChild = React147.createElement(Tooltip, { content: children, position: tooltipPosition }, labelComponentChild);
  }
  return React147.createElement(
    LabelComponent,
    Object.assign({}, props, { className: css(label_default.label, colorStyles[color], variant === "outline" && label_default.modifiers.outline, isOverflowLabel && label_default.modifiers.overflow, isCompact && label_default.modifiers.compact, isEditable && label_group_default.modifiers.editable, isEditableActive && label_default.modifiers.editableActive, className) }),
    !isEditableActive && labelComponentChild,
    !isEditableActive && onClose && button,
    isEditableActive && React147.createElement("input", Object.assign({ className: css(label_default.labelContent), type: "text", id: "editable-input", ref: editableInputRef, value: currValue, onChange: updateVal }, editableProps))
  );
};
Label.displayName = "Label";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LabelGroup/LabelGroup.js
var React148 = __toESM(require_react());
var LabelGroup = class extends React148.Component {
  constructor(props) {
    super(props);
    this.headingRef = React148.createRef();
    this.toggleCollapse = () => {
      this.setState((prevState) => ({
        isOpen: !prevState.isOpen,
        isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)
      }));
    };
    this.state = {
      isOpen: this.props.defaultIsOpen,
      isTooltipVisible: false
    };
  }
  componentDidMount() {
    this.setState({
      isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)
    });
  }
  renderLabel(id) {
    const { categoryName, tooltipPosition } = this.props;
    const { isTooltipVisible } = this.state;
    return isTooltipVisible ? React148.createElement(
      Tooltip,
      { position: tooltipPosition, content: categoryName },
      React148.createElement(
        "span",
        { tabIndex: 0, ref: this.headingRef, className: css(label_group_default.labelGroupLabel) },
        React148.createElement("span", { "aria-hidden": "true", id }, categoryName)
      )
    ) : React148.createElement("span", { ref: this.headingRef, className: css(label_group_default.labelGroupLabel), "aria-hidden": "true", id }, categoryName);
  }
  render() {
    const _a = this.props, {
      categoryName,
      children,
      className,
      isClosable,
      isCompact,
      closeBtnAriaLabel,
      "aria-label": ariaLabel,
      onClick,
      numLabels,
      expandedText,
      collapsedText,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      defaultIsOpen,
      tooltipPosition,
      isVertical,
      isEditable,
      hasEditableTextArea,
      editableTextAreaProps,
      addLabelControl
    } = _a, rest = __rest(_a, ["categoryName", "children", "className", "isClosable", "isCompact", "closeBtnAriaLabel", "aria-label", "onClick", "numLabels", "expandedText", "collapsedText", "defaultIsOpen", "tooltipPosition", "isVertical", "isEditable", "hasEditableTextArea", "editableTextAreaProps", "addLabelControl"]);
    const { isOpen } = this.state;
    const renderedChildren = React148.Children.toArray(children);
    const numChildren = renderedChildren.length;
    const collapsedTextResult = fillTemplate(collapsedText, {
      remaining: numChildren - numLabels
    });
    const renderLabelGroup = (id) => {
      const labelArray = !isOpen ? renderedChildren.slice(0, numLabels) : renderedChildren;
      const content = React148.createElement(
        React148.Fragment,
        null,
        categoryName && this.renderLabel(id),
        React148.createElement(
          "ul",
          Object.assign({ className: css(label_group_default.labelGroupList) }, categoryName && { "aria-labelledby": id }, !categoryName && { "aria-label": ariaLabel }, { role: "list" }, rest),
          labelArray.map((child, i) => React148.createElement("li", { className: css(label_group_default.labelGroupListItem), key: i }, child)),
          numChildren > numLabels && React148.createElement(
            "li",
            { className: css(label_group_default.labelGroupListItem) },
            React148.createElement(Label, { isOverflowLabel: true, onClick: this.toggleCollapse, className: css(isCompact && label_default.modifiers.compact) }, isOpen ? expandedText : collapsedTextResult)
          ),
          addLabelControl && React148.createElement("li", { className: css(label_group_default.labelGroupListItem) }, addLabelControl),
          isEditable && hasEditableTextArea && React148.createElement(
            "li",
            { className: css(label_group_default.labelGroupListItem, label_group_default.modifiers.textarea) },
            React148.createElement("textarea", Object.assign({ className: css(label_group_default.labelGroupTextarea), rows: 1, tabIndex: 0 }, editableTextAreaProps))
          )
        )
      );
      const close = React148.createElement(
        "div",
        { className: css(label_group_default.labelGroupClose) },
        React148.createElement(
          Button,
          { variant: "plain", "aria-label": closeBtnAriaLabel, onClick, id: `remove_group_${id}`, "aria-labelledby": `remove_group_${id} ${id}` },
          React148.createElement(times_circle_icon_default, { "aria-hidden": "true" })
        )
      );
      return React148.createElement(
        "div",
        { className: css(label_group_default.labelGroup, className, categoryName && label_group_default.modifiers.category, isVertical && label_group_default.modifiers.vertical, isEditable && label_group_default.modifiers.editable) },
        React148.createElement("div", { className: css(label_group_default.labelGroupMain) }, content),
        isClosable && close
      );
    };
    return numChildren === 0 && addLabelControl === void 0 ? null : React148.createElement(GenerateId, null, (randomId) => renderLabelGroup(this.props.id || randomId));
  }
};
LabelGroup.displayName = "LabelGroup";
LabelGroup.defaultProps = {
  expandedText: "Show Less",
  collapsedText: "${remaining} more",
  categoryName: "",
  defaultIsOpen: false,
  numLabels: 3,
  isClosable: false,
  isCompact: false,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onClick: (_e) => void 0,
  closeBtnAriaLabel: "Close label group",
  tooltipPosition: "top",
  "aria-label": "Label group category",
  isVertical: false,
  isEditable: false,
  hasEditableTextArea: false
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/List/List.js
var React149 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/List/list.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/List/list.css";
var list_default = {
  "list": "pf-c-list",
  "listItem": "pf-c-list__item",
  "listItemIcon": "pf-c-list__item-icon",
  "modifiers": {
    "iconLg": "pf-m-icon-lg",
    "plain": "pf-m-plain",
    "inline": "pf-m-inline",
    "bordered": "pf-m-bordered"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/List/List.js
var OrderType;
(function(OrderType2) {
  OrderType2["number"] = "1";
  OrderType2["lowercaseLetter"] = "a";
  OrderType2["uppercaseLetter"] = "A";
  OrderType2["lowercaseRomanNumber"] = "i";
  OrderType2["uppercaseRomanNumber"] = "I";
})(OrderType || (OrderType = {}));
var ListVariant;
(function(ListVariant2) {
  ListVariant2["inline"] = "inline";
})(ListVariant || (ListVariant = {}));
var ListComponent;
(function(ListComponent2) {
  ListComponent2["ol"] = "ol";
  ListComponent2["ul"] = "ul";
})(ListComponent || (ListComponent = {}));
var List = (_a) => {
  var { className = "", children = null, variant = null, isBordered = false, isPlain = false, iconSize = "default", type = OrderType.number, ref = null, component = ListComponent.ul } = _a, props = __rest(_a, ["className", "children", "variant", "isBordered", "isPlain", "iconSize", "type", "ref", "component"]);
  return component === ListComponent.ol ? React149.createElement("ol", Object.assign({ ref, type }, props, { className: css(list_default.list, variant && list_default.modifiers[variant], isBordered && list_default.modifiers.bordered, isPlain && list_default.modifiers.plain, iconSize && iconSize === "large" && list_default.modifiers.iconLg, className) }), children) : React149.createElement("ul", Object.assign({ ref }, props, { className: css(list_default.list, variant && list_default.modifiers[variant], isBordered && list_default.modifiers.bordered, isPlain && list_default.modifiers.plain, iconSize && iconSize === "large" && list_default.modifiers.iconLg, className) }), children);
};
List.displayName = "List";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/List/ListItem.js
var React150 = __toESM(require_react());
var ListItem = (_a) => {
  var { icon = null, children = null } = _a, props = __rest(_a, ["icon", "children"]);
  return React150.createElement(
    "li",
    Object.assign({ className: css(icon && list_default.listItem) }, props),
    icon && React150.createElement("span", { className: css(list_default.listItemIcon) }, icon),
    children
  );
};
ListItem.displayName = "ListItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginPage.js
var React157 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/Login.js
var React151 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Login/login.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Login/login.css";
var login_default = {
  "brand": "pf-c-brand",
  "button": "pf-c-button",
  "card": "pf-c-card",
  "dropdown": "pf-c-dropdown",
  "list": "pf-c-list",
  "login": "pf-c-login",
  "loginContainer": "pf-c-login__container",
  "loginFooter": "pf-c-login__footer",
  "loginHeader": "pf-c-login__header",
  "loginMain": "pf-c-login__main",
  "loginMainBody": "pf-c-login__main-body",
  "loginMainFooter": "pf-c-login__main-footer",
  "loginMainFooterBand": "pf-c-login__main-footer-band",
  "loginMainFooterLinks": "pf-c-login__main-footer-links",
  "loginMainFooterLinksItem": "pf-c-login__main-footer-links-item",
  "loginMainFooterLinksItemLink": "pf-c-login__main-footer-links-item-link",
  "loginMainHeader": "pf-c-login__main-header",
  "loginMainHeaderDesc": "pf-c-login__main-header-desc",
  "loginMainHeaderUtilities": "pf-c-login__main-header-utilities",
  "themeDark": "pf-theme-dark",
  "title": "pf-c-title"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/Login.js
var Login = (_a) => {
  var { className = "", children = null, footer = null, header = null } = _a, props = __rest(_a, ["className", "children", "footer", "header"]);
  return React151.createElement(
    "div",
    Object.assign({}, props, { className: css(login_default.login, className) }),
    React151.createElement(
      "div",
      { className: css(login_default.loginContainer) },
      header,
      React151.createElement("main", { className: css(login_default.loginMain) }, children),
      footer
    )
  );
};
Login.displayName = "Login";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginHeader.js
var React152 = __toESM(require_react());
var LoginHeader = (_a) => {
  var { className = "", children = null, headerBrand = null } = _a, props = __rest(_a, ["className", "children", "headerBrand"]);
  return React152.createElement(
    "header",
    Object.assign({ className: css(login_default.loginHeader, className) }, props),
    headerBrand,
    children
  );
};
LoginHeader.displayName = "LoginHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginFooter.js
var React153 = __toESM(require_react());
var LoginFooter = (_a) => {
  var { className = "", children = null } = _a, props = __rest(_a, ["className", "children"]);
  return React153.createElement("footer", Object.assign({ className: css(login_default.loginFooter, className) }, props), children);
};
LoginFooter.displayName = "LoginFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginMainHeader.js
var React154 = __toESM(require_react());
var LoginMainHeader = (_a) => {
  var { children = null, className = "", title = "", subtitle = "", headerUtilities = null } = _a, props = __rest(_a, ["children", "className", "title", "subtitle", "headerUtilities"]);
  return React154.createElement(
    "header",
    Object.assign({ className: css(login_default.loginMainHeader, className) }, props),
    title && React154.createElement(Title, { headingLevel: "h2", size: TitleSizes["3xl"] }, title),
    subtitle && React154.createElement("p", { className: css(login_default.loginMainHeaderDesc) }, subtitle),
    headerUtilities && React154.createElement("div", { className: css(login_default.loginMainHeaderUtilities) }, headerUtilities),
    children
  );
};
LoginMainHeader.displayName = "LoginMainHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginMainBody.js
var React155 = __toESM(require_react());
var LoginMainBody = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React155.createElement("div", Object.assign({ className: css(login_default.loginMainBody, className) }, props), children);
};
LoginMainBody.displayName = "LoginMainBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginMainFooter.js
var React156 = __toESM(require_react());
var LoginMainFooter = (_a) => {
  var { children = null, socialMediaLoginContent = null, signUpForAccountMessage = null, forgotCredentials = null, className = "" } = _a, props = __rest(_a, ["children", "socialMediaLoginContent", "signUpForAccountMessage", "forgotCredentials", "className"]);
  return React156.createElement(
    "div",
    Object.assign({ className: css(login_default.loginMainFooter, className) }, props),
    children,
    socialMediaLoginContent && React156.createElement("ul", { className: css(login_default.loginMainFooterLinks) }, socialMediaLoginContent),
    (signUpForAccountMessage || forgotCredentials) && React156.createElement(
      "div",
      { className: css(login_default.loginMainFooterBand) },
      signUpForAccountMessage,
      forgotCredentials
    )
  );
};
LoginMainFooter.displayName = "LoginMainFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginPage.js
var LoginPage = (_a) => {
  var { children = null, className = "", brandImgSrc = "", brandImgAlt = "", backgroundImgSrc = "", backgroundImgAlt = "", footerListItems = null, textContent = "", footerListVariants, loginTitle, loginSubtitle, headerUtilities, signUpForAccountMessage = null, forgotCredentials = null, socialMediaLoginContent = null } = _a, props = __rest(_a, ["children", "className", "brandImgSrc", "brandImgAlt", "backgroundImgSrc", "backgroundImgAlt", "footerListItems", "textContent", "footerListVariants", "loginTitle", "loginSubtitle", "headerUtilities", "signUpForAccountMessage", "forgotCredentials", "socialMediaLoginContent"]);
  const HeaderBrand = React157.createElement(
    React157.Fragment,
    null,
    React157.createElement(Brand, { src: brandImgSrc, alt: brandImgAlt })
  );
  const Header = React157.createElement(LoginHeader, { headerBrand: HeaderBrand });
  const Footer = React157.createElement(
    LoginFooter,
    null,
    React157.createElement("p", null, textContent),
    React157.createElement(List, { variant: footerListVariants }, footerListItems)
  );
  return React157.createElement(
    React157.Fragment,
    null,
    backgroundImgSrc && React157.createElement(BackgroundImage, { src: backgroundImgSrc, alt: backgroundImgAlt }),
    React157.createElement(
      Login,
      Object.assign({ header: Header, footer: Footer, className: css(className) }, props),
      React157.createElement(LoginMainHeader, { title: loginTitle, subtitle: loginSubtitle, headerUtilities }),
      React157.createElement(LoginMainBody, null, children),
      (socialMediaLoginContent || forgotCredentials || signUpForAccountMessage) && React157.createElement(LoginMainFooter, { socialMediaLoginContent, forgotCredentials, signUpForAccountMessage })
    )
  );
};
LoginPage.displayName = "LoginPage";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginForm.js
var React158 = __toESM(require_react());
var LoginForm = (_a) => {
  var { noAutoFocus = false, className = "", showHelperText = false, helperText = null, helperTextIcon = null, usernameLabel = "Username", usernameValue = "", onChangeUsername = () => void 0, isValidUsername = true, passwordLabel = "Password", passwordValue = "", onChangePassword = () => void 0, isShowPasswordEnabled = false, hidePasswordAriaLabel = "Hide password", showPasswordAriaLabel = "Show password", isValidPassword = true, loginButtonLabel = "Log In", isLoginButtonDisabled = false, onLoginButtonClick = () => void 0, rememberMeLabel = "", isRememberMeChecked = false, onChangeRememberMe = () => void 0 } = _a, props = __rest(_a, ["noAutoFocus", "className", "showHelperText", "helperText", "helperTextIcon", "usernameLabel", "usernameValue", "onChangeUsername", "isValidUsername", "passwordLabel", "passwordValue", "onChangePassword", "isShowPasswordEnabled", "hidePasswordAriaLabel", "showPasswordAriaLabel", "isValidPassword", "loginButtonLabel", "isLoginButtonDisabled", "onLoginButtonClick", "rememberMeLabel", "isRememberMeChecked", "onChangeRememberMe"]);
  const [passwordHidden, setPasswordHidden] = React158.useState(true);
  const passwordInput = React158.createElement(TextInput, { isRequired: true, type: passwordHidden ? "password" : "text", id: "pf-login-password-id", name: "pf-login-password-id", validated: isValidPassword ? ValidatedOptions.default : ValidatedOptions.error, value: passwordValue, onChange: onChangePassword });
  return React158.createElement(
    Form,
    Object.assign({ className }, props),
    React158.createElement(FormHelperText, { isError: !isValidUsername || !isValidPassword, isHidden: !showHelperText, icon: helperTextIcon }, helperText),
    React158.createElement(
      FormGroup,
      { label: usernameLabel, isRequired: true, validated: isValidUsername ? ValidatedOptions.default : ValidatedOptions.error, fieldId: "pf-login-username-id" },
      React158.createElement(TextInput, { autoFocus: !noAutoFocus, id: "pf-login-username-id", isRequired: true, validated: isValidUsername ? ValidatedOptions.default : ValidatedOptions.error, type: "text", name: "pf-login-username-id", value: usernameValue, onChange: onChangeUsername })
    ),
    React158.createElement(
      FormGroup,
      { label: passwordLabel, isRequired: true, validated: isValidPassword ? ValidatedOptions.default : ValidatedOptions.error, fieldId: "pf-login-password-id" },
      isShowPasswordEnabled && React158.createElement(
        InputGroup,
        null,
        passwordInput,
        React158.createElement(Button, { variant: "control", onClick: () => setPasswordHidden(!passwordHidden), "aria-label": passwordHidden ? showPasswordAriaLabel : hidePasswordAriaLabel }, passwordHidden ? React158.createElement(eye_icon_default, null) : React158.createElement(eye_slash_icon_default, null))
      ),
      !isShowPasswordEnabled && passwordInput
    ),
    rememberMeLabel.length > 0 && React158.createElement(
      FormGroup,
      { fieldId: "pf-login-remember-me-id" },
      React158.createElement(Checkbox, { id: "pf-login-remember-me-id", label: rememberMeLabel, isChecked: isRememberMeChecked, onChange: onChangeRememberMe })
    ),
    React158.createElement(
      ActionGroup,
      null,
      React158.createElement(Button, { variant: "primary", type: "submit", onClick: onLoginButtonClick, isBlock: true, isDisabled: isLoginButtonDisabled }, loginButtonLabel)
    )
  );
};
LoginForm.displayName = "LoginForm";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginFooterItem.js
var React159 = __toESM(require_react());
var LoginFooterItem = (_a) => {
  var { children = null, href = "#", target = "_blank" } = _a, props = __rest(_a, ["children", "href", "target"]);
  return React159.isValidElement(children) ? children : React159.createElement("a", Object.assign({ target, href }, props), children);
};
LoginFooterItem.displayName = "LoginFooterItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginMainFooterBandItem.js
var React160 = __toESM(require_react());
var LoginMainFooterBandItem = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React160.createElement("p", Object.assign({ className: css(`${login_default.loginMainFooterBand}-item`, className) }, props), children);
};
LoginMainFooterBandItem.displayName = "LoginMainFooterBandItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/LoginPage/LoginMainFooterLinksItem.js
var React161 = __toESM(require_react());
var LoginMainFooterLinksItem = (_a) => {
  var { children = null, href = "", target = "", className = "", linkComponent = "a", linkComponentProps } = _a, props = __rest(_a, ["children", "href", "target", "className", "linkComponent", "linkComponentProps"]);
  const LinkComponent = linkComponent;
  return React161.createElement(
    "li",
    Object.assign({ className: css(login_default.loginMainFooterLinksItem, className) }, props),
    React161.createElement(LinkComponent, Object.assign({ className: css(login_default.loginMainFooterLinksItemLink), href, target }, linkComponentProps), children)
  );
};
LoginMainFooterLinksItem.displayName = "LoginMainFooterLinksItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Masthead/Masthead.js
var React163 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Masthead/masthead.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Masthead/masthead.css";
var masthead_default = {
  "button": "pf-c-button",
  "card": "pf-c-card",
  "contextSelector": "pf-c-context-selector",
  "dropdown": "pf-c-dropdown",
  "masthead": "pf-c-masthead",
  "mastheadBrand": "pf-c-masthead__brand",
  "mastheadContent": "pf-c-masthead__content",
  "mastheadMain": "pf-c-masthead__main",
  "mastheadToggle": "pf-c-masthead__toggle",
  "menuToggle": "pf-c-menu-toggle",
  "modifiers": {
    "light_200": "pf-m-light-200",
    "light": "pf-m-light",
    "plain": "pf-m-plain",
    "resizeObserver": "pf-m-resize-observer",
    "fullHeight": "pf-m-full-height",
    "horizontal": "pf-m-horizontal",
    "displayStack": "pf-m-display-stack",
    "displayInline": "pf-m-display-inline",
    "insetNone": "pf-m-inset-none",
    "insetSm": "pf-m-inset-sm",
    "insetMd": "pf-m-inset-md",
    "insetLg": "pf-m-inset-lg",
    "insetXl": "pf-m-inset-xl",
    "inset_2xl": "pf-m-inset-2xl",
    "displayStackOnSm": "pf-m-display-stack-on-sm",
    "displayInlineOnSm": "pf-m-display-inline-on-sm",
    "insetNoneOnSm": "pf-m-inset-none-on-sm",
    "insetSmOnSm": "pf-m-inset-sm-on-sm",
    "insetMdOnSm": "pf-m-inset-md-on-sm",
    "insetLgOnSm": "pf-m-inset-lg-on-sm",
    "insetXlOnSm": "pf-m-inset-xl-on-sm",
    "inset_2xlOnSm": "pf-m-inset-2xl-on-sm",
    "displayStackOnMd": "pf-m-display-stack-on-md",
    "displayInlineOnMd": "pf-m-display-inline-on-md",
    "insetNoneOnMd": "pf-m-inset-none-on-md",
    "insetSmOnMd": "pf-m-inset-sm-on-md",
    "insetMdOnMd": "pf-m-inset-md-on-md",
    "insetLgOnMd": "pf-m-inset-lg-on-md",
    "insetXlOnMd": "pf-m-inset-xl-on-md",
    "inset_2xlOnMd": "pf-m-inset-2xl-on-md",
    "displayStackOnLg": "pf-m-display-stack-on-lg",
    "displayInlineOnLg": "pf-m-display-inline-on-lg",
    "insetNoneOnLg": "pf-m-inset-none-on-lg",
    "insetSmOnLg": "pf-m-inset-sm-on-lg",
    "insetMdOnLg": "pf-m-inset-md-on-lg",
    "insetLgOnLg": "pf-m-inset-lg-on-lg",
    "insetXlOnLg": "pf-m-inset-xl-on-lg",
    "inset_2xlOnLg": "pf-m-inset-2xl-on-lg",
    "displayStackOnXl": "pf-m-display-stack-on-xl",
    "displayInlineOnXl": "pf-m-display-inline-on-xl",
    "insetNoneOnXl": "pf-m-inset-none-on-xl",
    "insetSmOnXl": "pf-m-inset-sm-on-xl",
    "insetMdOnXl": "pf-m-inset-md-on-xl",
    "insetLgOnXl": "pf-m-inset-lg-on-xl",
    "insetXlOnXl": "pf-m-inset-xl-on-xl",
    "inset_2xlOnXl": "pf-m-inset-2xl-on-xl",
    "displayStackOn_2xl": "pf-m-display-stack-on-2xl",
    "displayInlineOn_2xl": "pf-m-display-inline-on-2xl",
    "insetNoneOn_2xl": "pf-m-inset-none-on-2xl",
    "insetSmOn_2xl": "pf-m-inset-sm-on-2xl",
    "insetMdOn_2xl": "pf-m-inset-md-on-2xl",
    "insetLgOn_2xl": "pf-m-inset-lg-on-2xl",
    "insetXlOn_2xl": "pf-m-inset-xl-on-2xl",
    "inset_2xlOn_2xl": "pf-m-inset-2xl-on-2xl"
  },
  "nav": "pf-c-nav",
  "page": "pf-c-page",
  "themeDark": "pf-theme-dark",
  "toolbar": "pf-c-toolbar",
  "toolbarContentSection": "pf-c-toolbar__content-section",
  "toolbarExpandableContent": "pf-c-toolbar__expandable-content"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageContext.js
var React162 = __toESM(require_react());
var pageContextDefaults = {
  isManagedSidebar: false,
  isNavOpen: false,
  onNavToggle: () => null,
  width: null,
  height: null,
  getBreakpoint,
  getVerticalBreakpoint
};
var PageContext = React162.createContext(pageContextDefaults);
var PageContextProvider = PageContext.Provider;
var PageContextConsumer = PageContext.Consumer;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Masthead/Masthead.js
var Masthead = (_a) => {
  var { children, className, backgroundColor = "dark", display = {
    md: "inline"
  }, inset } = _a, props = __rest(_a, ["children", "className", "backgroundColor", "display", "inset"]);
  const { width, getBreakpoint: getBreakpoint2 } = React163.useContext(PageContext);
  return React163.createElement("header", Object.assign({ className: css(masthead_default.masthead, formatBreakpointMods(display, masthead_default, "display-", getBreakpoint2(width)), formatBreakpointMods(inset, masthead_default, "", getBreakpoint2(width)), backgroundColor === "light" && masthead_default.modifiers.light, backgroundColor === "light200" && masthead_default.modifiers.light_200, className) }, props), children);
};
Masthead.displayName = "Masthead";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Masthead/MastheadBrand.js
var React164 = __toESM(require_react());
var MastheadBrand = (_a) => {
  var { children, className, component = "a" } = _a, props = __rest(_a, ["children", "className", "component"]);
  const Component47 = component;
  return React164.createElement(Component47, Object.assign({ className: css(masthead_default.mastheadBrand, className), tabIndex: 0 }, props), children);
};
MastheadBrand.displayName = "MastheadBrand";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Masthead/MastheadContent.js
var React165 = __toESM(require_react());
var MastheadContent = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React165.createElement("div", Object.assign({ className: css(masthead_default.mastheadContent, className) }, props), children);
};
MastheadContent.displayName = "MastheadContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Masthead/MastheadMain.js
var React166 = __toESM(require_react());
var MastheadMain = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React166.createElement("div", Object.assign({ className: css(masthead_default.mastheadMain, className) }, props), children);
};
MastheadMain.displayName = "MastheadMain";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Masthead/MastheadToggle.js
var React167 = __toESM(require_react());
var MastheadToggle = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React167.createElement("span", Object.assign({ className: css(masthead_default.mastheadToggle, className) }, props), children);
};
MastheadToggle.displayName = "MastheadToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/Menu.js
var React169 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Menu/menu.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Menu/menu.css";
var menu_default = {
  "breadcrumb": "pf-c-breadcrumb",
  "divider": "pf-c-divider",
  "menu": "pf-c-menu",
  "menuBreadcrumb": "pf-c-menu__breadcrumb",
  "menuContent": "pf-c-menu__content",
  "menuFooter": "pf-c-menu__footer",
  "menuGroup": "pf-c-menu__group",
  "menuGroupTitle": "pf-c-menu__group-title",
  "menuHeader": "pf-c-menu__header",
  "menuItem": "pf-c-menu__item",
  "menuItemAction": "pf-c-menu__item-action",
  "menuItemActionIcon": "pf-c-menu__item-action-icon",
  "menuItemCheck": "pf-c-menu__item-check",
  "menuItemDescription": "pf-c-menu__item-description",
  "menuItemExternalIcon": "pf-c-menu__item-external-icon",
  "menuItemIcon": "pf-c-menu__item-icon",
  "menuItemMain": "pf-c-menu__item-main",
  "menuItemSelectIcon": "pf-c-menu__item-select-icon",
  "menuItemText": "pf-c-menu__item-text",
  "menuItemToggleIcon": "pf-c-menu__item-toggle-icon",
  "menuList": "pf-c-menu__list",
  "menuListItem": "pf-c-menu__list-item",
  "menuSearch": "pf-c-menu__search",
  "modifiers": {
    "hidden": "pf-m-hidden",
    "hiddenOnSm": "pf-m-hidden-on-sm",
    "visibleOnSm": "pf-m-visible-on-sm",
    "hiddenOnMd": "pf-m-hidden-on-md",
    "visibleOnMd": "pf-m-visible-on-md",
    "hiddenOnLg": "pf-m-hidden-on-lg",
    "visibleOnLg": "pf-m-visible-on-lg",
    "hiddenOnXl": "pf-m-hidden-on-xl",
    "visibleOnXl": "pf-m-visible-on-xl",
    "hiddenOn_2xl": "pf-m-hidden-on-2xl",
    "visibleOn_2xl": "pf-m-visible-on-2xl",
    "flyout": "pf-m-flyout",
    "top": "pf-m-top",
    "left": "pf-m-left",
    "drilldown": "pf-m-drilldown",
    "drilledIn": "pf-m-drilled-in",
    "currentPath": "pf-m-current-path",
    "static": "pf-m-static",
    "plain": "pf-m-plain",
    "scrollable": "pf-m-scrollable",
    "nav": "pf-m-nav",
    "focus": "pf-m-focus",
    "disabled": "pf-m-disabled",
    "load": "pf-m-load",
    "loading": "pf-m-loading",
    "danger": "pf-m-danger",
    "selected": "pf-m-selected",
    "favorite": "pf-m-favorite",
    "favorited": "pf-m-favorited"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuContext.js
var React168 = __toESM(require_react());
var MenuContext = React168.createContext({
  menuId: null,
  parentMenu: null,
  onActionClick: () => null,
  onSelect: () => null,
  activeItemId: null,
  selected: null,
  drilledInMenus: [],
  drilldownItemPath: [],
  onDrillIn: null,
  onDrillOut: null,
  onGetMenuHeight: () => null,
  flyoutRef: null,
  setFlyoutRef: () => null,
  disableHover: false,
  role: "menu"
});
var MenuItemContext = React168.createContext({
  itemId: null,
  isDisabled: false
});

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/Menu.js
var MenuBase = class extends React169.Component {
  constructor(props) {
    super(props);
    this.menuRef = React169.createRef();
    this.activeMenu = null;
    this.state = {
      ouiaStateId: getDefaultOUIAId(Menu.displayName),
      searchInputValue: "",
      transitionMoveTarget: null,
      flyoutRef: null,
      disableHover: false,
      currentDrilldownMenuId: this.props.id
    };
    this.handleDrilldownTransition = (event) => {
      const current = this.menuRef.current;
      if (!current || current !== event.target.closest(".pf-c-menu") && !Array.from(current.getElementsByClassName("pf-c-menu")).includes(event.target.closest(".pf-c-menu"))) {
        return;
      }
      if (this.state.transitionMoveTarget) {
        this.state.transitionMoveTarget.focus();
        this.setState({ transitionMoveTarget: null });
      } else {
        const nextMenu = current.querySelector("#" + this.props.activeMenu) || current || null;
        const nextMenuChildren = Array.from(nextMenu.getElementsByTagName("UL")[0].children);
        if (!this.state.currentDrilldownMenuId || nextMenu.id !== this.state.currentDrilldownMenuId) {
          this.setState({ currentDrilldownMenuId: nextMenu.id });
        } else {
          return;
        }
        const nextTarget = nextMenuChildren.filter((el) => !(el.classList.contains("pf-m-disabled") || el.classList.contains("pf-c-divider")))[0].firstChild;
        nextTarget.focus();
        nextTarget.tabIndex = 0;
      }
    };
    this.handleExtraKeys = (event) => {
      const isDrilldown = this.props.containsDrilldown;
      const activeElement = document.activeElement;
      if (event.target.closest(".pf-c-menu") !== this.activeMenu && !event.target.classList.contains("pf-c-breadcrumb__link")) {
        this.activeMenu = event.target.closest(".pf-c-menu");
        this.setState({ disableHover: true });
      }
      if (event.target.tagName === "INPUT") {
        return;
      }
      const parentMenu = this.activeMenu;
      const key = event.key;
      const isFromBreadcrumb = activeElement.classList.contains("pf-c-breadcrumb__link") || activeElement.classList.contains("pf-c-dropdown__toggle");
      if (key === " " || key === "Enter") {
        event.preventDefault();
        if (isDrilldown && !isFromBreadcrumb) {
          const isDrillingOut = activeElement.closest("li").classList.contains("pf-m-current-path");
          if (isDrillingOut && parentMenu.parentElement.tagName === "LI") {
            activeElement.tabIndex = -1;
            parentMenu.parentElement.firstChild.tabIndex = 0;
            this.setState({ transitionMoveTarget: parentMenu.parentElement.firstChild });
          } else {
            if (activeElement.nextElementSibling && activeElement.nextElementSibling.classList.contains("pf-c-menu")) {
              const childItems = Array.from(activeElement.nextElementSibling.getElementsByTagName("UL")[0].children).filter((el) => !(el.classList.contains("pf-m-disabled") || el.classList.contains("pf-c-divider")));
              activeElement.tabIndex = -1;
              childItems[0].firstChild.tabIndex = 0;
              this.setState({ transitionMoveTarget: childItems[0].firstChild });
            }
          }
        }
        document.activeElement.click();
      }
    };
    this.createNavigableElements = () => {
      const isDrilldown = this.props.containsDrilldown;
      if (isDrilldown) {
        return this.activeMenu ? Array.from(this.activeMenu.getElementsByTagName("UL")[0].children).filter((el) => !(el.classList.contains("pf-m-disabled") || el.classList.contains("pf-c-divider"))) : [];
      } else {
        return this.menuRef.current ? Array.from(this.menuRef.current.getElementsByTagName("LI")).filter((el) => !(el.classList.contains("pf-m-disabled") || el.classList.contains("pf-c-divider"))) : [];
      }
    };
    if (props.innerRef) {
      this.menuRef = props.innerRef;
    }
  }
  allowTabFirstItem() {
    const current = this.menuRef.current;
    if (current) {
      const first = current.querySelector("ul button:not(:disabled), ul a:not(:disabled)");
      if (first) {
        first.tabIndex = 0;
      }
    }
  }
  componentDidMount() {
    if (this.context) {
      this.setState({ disableHover: this.context.disableHover });
    }
    if (canUseDOM) {
      window.addEventListener("transitionend", this.props.isRootMenu ? this.handleDrilldownTransition : null);
    }
    this.allowTabFirstItem();
  }
  componentWillUnmount() {
    if (canUseDOM) {
      window.removeEventListener("transitionend", this.handleDrilldownTransition);
    }
  }
  componentDidUpdate(prevProps) {
    if (prevProps.children !== this.props.children) {
      this.allowTabFirstItem();
    }
  }
  render() {
    const _a = this.props, {
      "aria-label": ariaLabel,
      id,
      children,
      className,
      onSelect,
      selected = null,
      onActionClick,
      ouiaId,
      ouiaSafe,
      containsFlyout,
      isNavFlyout,
      containsDrilldown,
      isMenuDrilledIn,
      isPlain,
      isScrollable,
      drilldownItemPath,
      drilledInMenus,
      onDrillIn,
      onDrillOut,
      onGetMenuHeight,
      parentMenu = null,
      activeItemId = null,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      innerRef,
      isRootMenu,
      activeMenu,
      role
    } = _a, props = __rest(_a, ["aria-label", "id", "children", "className", "onSelect", "selected", "onActionClick", "ouiaId", "ouiaSafe", "containsFlyout", "isNavFlyout", "containsDrilldown", "isMenuDrilledIn", "isPlain", "isScrollable", "drilldownItemPath", "drilledInMenus", "onDrillIn", "onDrillOut", "onGetMenuHeight", "parentMenu", "activeItemId", "innerRef", "isRootMenu", "activeMenu", "role"]);
    const _isMenuDrilledIn = isMenuDrilledIn || drilledInMenus && drilledInMenus.includes(id) || false;
    return React169.createElement(
      MenuContext.Provider,
      { value: {
        menuId: id,
        parentMenu: parentMenu || id,
        onSelect,
        onActionClick,
        activeItemId,
        selected,
        drilledInMenus,
        drilldownItemPath,
        onDrillIn,
        onDrillOut,
        onGetMenuHeight,
        flyoutRef: this.state.flyoutRef,
        setFlyoutRef: (flyoutRef) => this.setState({ flyoutRef }),
        disableHover: this.state.disableHover,
        role
      } },
      isRootMenu && React169.createElement(KeyboardHandler, { containerRef: this.menuRef || null, additionalKeyHandler: this.handleExtraKeys, createNavigableElements: this.createNavigableElements, isActiveElement: (element) => document.activeElement.closest("li") === element || // if element is a basic MenuItem
      document.activeElement.parentElement === element || document.activeElement.closest(".pf-c-menu__search") === element || // if element is a MenuInput
      document.activeElement.closest("ol") && document.activeElement.closest("ol").firstChild === element, getFocusableElement: (navigableElement) => navigableElement.tagName === "DIV" && navigableElement.querySelector("input") || // for MenuInput
      navigableElement.firstChild.tagName === "LABEL" && navigableElement.querySelector("input") || // for MenuItem checkboxes
      navigableElement.firstChild, noHorizontalArrowHandling: document.activeElement && (document.activeElement.classList.contains("pf-c-breadcrumb__link") || document.activeElement.classList.contains("pf-c-dropdown__toggle")), noEnterHandling: true, noSpaceHandling: true }),
      React169.createElement("div", Object.assign({ id, className: css(menu_default.menu, isPlain && menu_default.modifiers.plain, isScrollable && menu_default.modifiers.scrollable, containsFlyout && menu_default.modifiers.flyout, isNavFlyout && menu_default.modifiers.nav, containsDrilldown && menu_default.modifiers.drilldown, _isMenuDrilledIn && menu_default.modifiers.drilledIn, className), "aria-label": ariaLabel, ref: this.menuRef }, getOUIAProps(Menu.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), children)
    );
  }
};
MenuBase.displayName = "Menu";
MenuBase.contextType = MenuContext;
MenuBase.defaultProps = {
  ouiaSafe: true,
  isRootMenu: true,
  isPlain: false,
  isScrollable: false,
  role: "menu"
};
var Menu = React169.forwardRef((props, ref) => React169.createElement(MenuBase, Object.assign({}, props, { innerRef: ref })));
Menu.displayName = "Menu";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuContent.js
var React170 = __toESM(require_react());
var MenuContent = React170.forwardRef((props, ref) => {
  const { getHeight, children, menuHeight, maxMenuHeight } = props, rest = __rest(props, ["getHeight", "children", "menuHeight", "maxMenuHeight"]);
  const menuContentRef = React170.createRef();
  const refCallback = (el, menuId, onGetMenuHeight) => {
    if (el) {
      let clientHeight = el.clientHeight;
      let rootMenuList = null;
      let parentEl = el.closest(`.${menu_default.menuList}`);
      while (parentEl !== null && parentEl.nodeType === 1) {
        if (parentEl.classList.contains(menu_default.menuList)) {
          rootMenuList = parentEl;
        }
        parentEl = parentEl.parentElement;
      }
      if (rootMenuList) {
        const rootMenuListStyles = getComputedStyle(rootMenuList);
        const rootMenuListPaddingOffset = parseFloat(rootMenuListStyles.getPropertyValue("padding-top").replace(/px/g, "")) + parseFloat(rootMenuListStyles.getPropertyValue("padding-bottom").replace(/px/g, "")) + parseFloat(getComputedStyle(rootMenuList.parentElement).getPropertyValue("border-bottom-width").replace(/px/g, ""));
        clientHeight = clientHeight + rootMenuListPaddingOffset;
      }
      onGetMenuHeight && onGetMenuHeight(menuId, clientHeight);
      getHeight && getHeight(clientHeight.toString());
    }
    return ref || menuContentRef;
  };
  return React170.createElement(MenuContext.Consumer, null, ({ menuId, onGetMenuHeight }) => React170.createElement("div", Object.assign({}, rest, { className: css(menu_default.menuContent, props.className), ref: (el) => refCallback(el, menuId, onGetMenuHeight), style: Object.assign(Object.assign({}, menuHeight && { "--pf-c-menu__content--Height": menuHeight }), maxMenuHeight && { "--pf-c-menu__content--MaxHeight": maxMenuHeight }) }), children));
});
MenuContent.displayName = "MenuContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuFooter.js
var React171 = __toESM(require_react());
var MenuFooter = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React171.createElement("div", Object.assign({}, props, { className: css(menu_default.menuFooter, className) }), children);
};
MenuFooter.displayName = "MenuFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuInput.js
var React172 = __toESM(require_react());
var MenuInput = React172.forwardRef((props, ref) => React172.createElement("div", Object.assign({}, props, { className: css(menu_default.menuSearch, props.className), ref })));
MenuInput.displayName = "MenuInput";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuGroup.js
var React173 = __toESM(require_react());
var MenuGroupBase = (_a) => {
  var { children, className = "", label = "", titleId = "", innerRef, labelHeadingLevel: HeadingLevel = "h1" } = _a, props = __rest(_a, ["children", "className", "label", "titleId", "innerRef", "labelHeadingLevel"]);
  const Wrapper = typeof label === "function" ? label : HeadingLevel;
  return React173.createElement(
    "section",
    Object.assign({}, props, { className: css("pf-c-menu__group", className), ref: innerRef }),
    React173.createElement(
      React173.Fragment,
      null,
      ["function", "string"].includes(typeof label) ? React173.createElement(Wrapper, { className: css(menu_default.menuGroupTitle), id: titleId }, label) : label,
      children
    )
  );
};
var MenuGroup = React173.forwardRef((props, ref) => React173.createElement(MenuGroupBase, Object.assign({}, props, { innerRef: ref })));
MenuGroup.displayName = "MenuGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuItem.js
var React175 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_top_offset.js
var c_menu_m_flyout__menu_top_offset = {
  "name": "--pf-c-menu--m-flyout__menu--top-offset",
  "value": "0px",
  "var": "var(--pf-c-menu--m-flyout__menu--top-offset)"
};
var c_menu_m_flyout_menu_top_offset_default = c_menu_m_flyout__menu_top_offset;

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_m_left_right_offset.js
var c_menu_m_flyout__menu_m_left_right_offset = {
  "name": "--pf-c-menu--m-flyout__menu--m-left--right-offset",
  "value": "0px",
  "var": "var(--pf-c-menu--m-flyout__menu--m-left--right-offset)"
};
var c_menu_m_flyout_menu_m_left_right_offset_default = c_menu_m_flyout__menu_m_left_right_offset;

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_menu_m_flyout__menu_left_offset.js
var c_menu_m_flyout__menu_left_offset = {
  "name": "--pf-c-menu--m-flyout__menu--left-offset",
  "value": "0px",
  "var": "var(--pf-c-menu--m-flyout__menu--left-offset)"
};
var c_menu_m_flyout_menu_left_offset_default = c_menu_m_flyout__menu_left_offset;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuItemAction.js
var React174 = __toESM(require_react());
var MenuItemActionBase = (_a) => {
  var { className = "", icon, onClick, "aria-label": ariaLabel, isFavorited = null, isDisabled, actionId, innerRef } = _a, props = __rest(_a, ["className", "icon", "onClick", "aria-label", "isFavorited", "isDisabled", "actionId", "innerRef"]);
  return React174.createElement(MenuContext.Consumer, null, ({ onActionClick }) => React174.createElement(MenuItemContext.Consumer, null, ({ itemId, isDisabled: isDisabledContext }) => {
    const onClickButton = (event) => {
      onClick && onClick(event);
      onActionClick && onActionClick(event, itemId, actionId);
    };
    return React174.createElement(
      "button",
      Object.assign({ className: css(menu_default.menuItemAction, isFavorited !== null && menu_default.modifiers.favorite, isFavorited && menu_default.modifiers.favorited, className), "aria-label": ariaLabel, onClick: onClickButton }, (isDisabled === true || isDisabledContext === true) && { disabled: true }, { ref: innerRef, tabIndex: -1 }, props),
      React174.createElement("span", { className: css(menu_default.menuItemActionIcon) }, icon === "favorites" || isFavorited !== null ? React174.createElement(star_icon_default, { "aria-hidden": true }) : icon)
    );
  }));
};
var MenuItemAction = React174.forwardRef((props, ref) => React174.createElement(MenuItemActionBase, Object.assign({}, props, { innerRef: ref })));
MenuItemAction.displayName = "MenuItemAction";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuItem.js
var FlyoutContext = React175.createContext({
  direction: "right"
});
var MenuItemBase = (_a) => {
  var { children, className, itemId = null, to, hasCheck = false, isActive = null, isFavorited = null, isLoadButton = false, isLoading = false, flyoutMenu, direction, description = null, onClick = () => {
  }, component = "button", isDisabled = false, isExternalLink = false, isSelected = null, isFocused, isDanger = false, icon, actions, onShowFlyout, drilldownMenu, isOnPath, innerRef } = _a, props = __rest(_a, ["children", "className", "itemId", "to", "hasCheck", "isActive", "isFavorited", "isLoadButton", "isLoading", "flyoutMenu", "direction", "description", "onClick", "component", "isDisabled", "isExternalLink", "isSelected", "isFocused", "isDanger", "icon", "actions", "onShowFlyout", "drilldownMenu", "isOnPath", "innerRef"]);
  const { menuId, parentMenu, onSelect, onActionClick, activeItemId, selected, drilldownItemPath, onDrillIn, onDrillOut, flyoutRef, setFlyoutRef, disableHover, role: menuRole } = React175.useContext(MenuContext);
  let Component47 = to ? "a" : component;
  if (hasCheck && !to) {
    Component47 = "label";
  }
  const [flyoutTarget, setFlyoutTarget] = React175.useState(null);
  const flyoutContext = React175.useContext(FlyoutContext);
  const [flyoutXDirection, setFlyoutXDirection] = React175.useState(flyoutContext.direction);
  const ref = React175.useRef();
  const flyoutVisible = ref === flyoutRef;
  const hasFlyout = flyoutMenu !== void 0;
  const showFlyout = (show) => {
    if (!flyoutVisible && show) {
      setFlyoutRef(ref);
    } else if (flyoutVisible && !show) {
      setFlyoutRef(null);
    }
    onShowFlyout && show && onShowFlyout();
  };
  useIsomorphicLayoutEffect(() => {
    if (hasFlyout && ref.current && canUseDOM) {
      const flyoutMenu2 = ref.current.lastElementChild;
      if (flyoutMenu2 && flyoutMenu2.classList.contains(menu_default.menu)) {
        const origin = ref.current.getClientRects()[0];
        const rect = flyoutMenu2.getClientRects()[0];
        if (origin && rect) {
          const spaceLeftLeft = origin.x - rect.width;
          const spaceLeftRight = window.innerWidth - origin.x - origin.width - rect.width;
          let xDir = flyoutXDirection;
          if (spaceLeftRight < 0 && xDir !== "left") {
            setFlyoutXDirection("left");
            xDir = "left";
          } else if (spaceLeftLeft < 0 && xDir !== "right") {
            setFlyoutXDirection("right");
            xDir = "right";
          }
          let xOffset = 0;
          if (spaceLeftLeft < 0 && spaceLeftRight < 0) {
            xOffset = xDir === "right" ? -spaceLeftRight : -spaceLeftLeft;
          }
          if (xDir === "left") {
            flyoutMenu2.classList.add(menu_default.modifiers.left);
            flyoutMenu2.style.setProperty(c_menu_m_flyout_menu_m_left_right_offset_default.name, `-${xOffset}px`);
          } else {
            flyoutMenu2.style.setProperty(c_menu_m_flyout_menu_left_offset_default.name, `-${xOffset}px`);
          }
          const spaceLeftBot = window.innerHeight - origin.y - rect.height;
          const spaceLeftTop = window.innerHeight - rect.height;
          if (spaceLeftTop < 0 && spaceLeftBot < 0) {
          } else if (spaceLeftBot < 0) {
            flyoutMenu2.style.setProperty(c_menu_m_flyout_menu_top_offset_default.name, `${spaceLeftBot}px`);
          }
        }
      }
    }
  }, [flyoutVisible, flyoutMenu]);
  React175.useEffect(() => {
    setFlyoutXDirection(flyoutContext.direction);
  }, [flyoutContext]);
  React175.useEffect(() => {
    if (flyoutTarget) {
      if (flyoutVisible) {
        const flyoutMenu2 = flyoutTarget.nextElementSibling;
        const flyoutItems = Array.from(flyoutMenu2.getElementsByTagName("UL")[0].children).filter((el) => !(el.classList.contains("pf-m-disabled") || el.classList.contains("pf-c-divider")));
        flyoutItems[0].firstChild.focus();
      } else {
        flyoutTarget.focus();
      }
    }
  }, [flyoutVisible, flyoutTarget]);
  const handleFlyout = (event) => {
    const key = event.key;
    const target = event.target;
    const type = event.type;
    if (key === " " || key === "Enter" || key === "ArrowRight" || type === "click") {
      event.stopPropagation();
      event.preventDefault();
      if (!flyoutVisible) {
        showFlyout(true);
        setFlyoutTarget(target);
      }
    }
    if (key === "Escape" || key === "ArrowLeft") {
      if (flyoutVisible) {
        event.stopPropagation();
        showFlyout(false);
      }
    }
  };
  const onItemSelect = (event, onSelect2) => {
    onSelect2 && onSelect2(event, itemId);
    onClick && onClick(event);
  };
  const _isOnPath = isOnPath && isOnPath || drilldownItemPath && drilldownItemPath.includes(itemId) || false;
  let drill;
  if (direction) {
    if (direction === "down") {
      drill = (event) => onDrillIn && onDrillIn(event, menuId, typeof drilldownMenu === "function" ? drilldownMenu().props.id : drilldownMenu.props.id, itemId);
    } else {
      drill = (event) => onDrillOut && onDrillOut(event, parentMenu, itemId);
    }
  }
  let additionalProps = {};
  if (Component47 === "a") {
    additionalProps = {
      href: to,
      "aria-disabled": isDisabled ? true : null,
      // prevent invalid 'disabled' attribute on <a> tags
      disabled: null
    };
  } else if (Component47 === "button") {
    additionalProps = {
      type: "button"
    };
  }
  if (isOnPath) {
    additionalProps["aria-expanded"] = true;
  } else if (hasFlyout) {
    additionalProps["aria-haspopup"] = "menu";
    additionalProps["aria-expanded"] = flyoutVisible;
  }
  const getAriaCurrent = () => {
    if (isActive !== null) {
      if (isActive) {
        return "page";
      } else {
        return null;
      }
    } else if (itemId !== null && activeItemId !== null) {
      return itemId === activeItemId;
    }
    return null;
  };
  const getIsSelected = () => {
    if (isSelected !== null) {
      return isSelected;
    } else if (selected !== null && itemId !== null) {
      return Array.isArray(selected) && selected.includes(itemId) || itemId === selected;
    }
    return false;
  };
  const onMouseOver = () => {
    if (disableHover) {
      return;
    }
    if (hasFlyout) {
      showFlyout(true);
    } else {
      setFlyoutRef(null);
    }
  };
  const isSelectMenu = menuRole === "listbox";
  return React175.createElement(
    "li",
    Object.assign({ className: css(menu_default.menuListItem, isDisabled && menu_default.modifiers.disabled, _isOnPath && menu_default.modifiers.currentPath, isLoadButton && menu_default.modifiers.load, isLoading && menu_default.modifiers.loading, isFocused && menu_default.modifiers.focus, isDanger && menu_default.modifiers.danger, className), onMouseOver }, flyoutMenu && { onKeyDown: handleFlyout }, { ref, role: !hasCheck ? "none" : "menuitem" }, props),
    React175.createElement(GenerateId, null, (randomId) => React175.createElement(
      Component47,
      Object.assign({ tabIndex: -1, className: css(menu_default.menuItem, getIsSelected() && !hasCheck && menu_default.modifiers.selected, className), "aria-current": getAriaCurrent() }, !hasCheck && { disabled: isDisabled }, !hasCheck && !flyoutMenu && { role: isSelectMenu ? "option" : "menuitem" }, !hasCheck && !flyoutMenu && isSelectMenu && { "aria-selected": getIsSelected() }, { ref: innerRef }, !hasCheck && {
        onClick: (event) => {
          onItemSelect(event, onSelect);
          drill && drill(event);
          flyoutMenu && handleFlyout(event);
        }
      }, hasCheck && { htmlFor: randomId }, additionalProps),
      React175.createElement(
        "span",
        { className: css(menu_default.menuItemMain) },
        direction === "up" && React175.createElement(
          "span",
          { className: css(menu_default.menuItemToggleIcon) },
          React175.createElement(angle_left_icon_default, { "aria-hidden": true })
        ),
        icon && React175.createElement("span", { className: css(menu_default.menuItemIcon) }, icon),
        hasCheck && React175.createElement(
          "span",
          { className: css("pf-c-menu__item-check") },
          React175.createElement(Checkbox, { id: randomId, component: "span", isChecked: isSelected || false, onChange: (event) => onItemSelect(event, onSelect), isDisabled })
        ),
        React175.createElement("span", { className: css(menu_default.menuItemText) }, children),
        isExternalLink && React175.createElement(
          "span",
          { className: css(menu_default.menuItemExternalIcon) },
          React175.createElement(external_link_alt_icon_default, { "aria-hidden": true })
        ),
        (flyoutMenu || direction === "down") && React175.createElement(
          "span",
          { className: css(menu_default.menuItemToggleIcon) },
          React175.createElement(angle_right_icon_default, { "aria-hidden": true })
        ),
        getIsSelected() && React175.createElement(
          "span",
          { className: css(menu_default.menuItemSelectIcon) },
          React175.createElement(check_icon_default, { "aria-hidden": true })
        )
      ),
      description && direction !== "up" && React175.createElement(
        "span",
        { className: css(menu_default.menuItemDescription) },
        React175.createElement("span", null, description)
      )
    )),
    flyoutVisible && React175.createElement(
      MenuContext.Provider,
      { value: { disableHover } },
      React175.createElement(FlyoutContext.Provider, { value: { direction: flyoutXDirection } }, flyoutMenu)
    ),
    typeof drilldownMenu === "function" ? drilldownMenu() : drilldownMenu,
    React175.createElement(
      MenuItemContext.Provider,
      { value: { itemId, isDisabled } },
      actions,
      isFavorited !== null && React175.createElement(MenuItemAction, { icon: "favorites", isFavorited, "aria-label": isFavorited ? "starred" : "not starred", onClick: (event) => onActionClick(event, itemId), tabIndex: -1, actionId: "fav" })
    )
  );
};
var MenuItem = React175.forwardRef((props, ref) => React175.createElement(MenuItemBase, Object.assign({}, props, { innerRef: ref })));
MenuItem.displayName = "MenuItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuList.js
var React176 = __toESM(require_react());
var MenuList = (_a) => {
  var { children = null, className, isAriaMultiselectable = false } = _a, props = __rest(_a, ["children", "className", "isAriaMultiselectable"]);
  const { role } = React176.useContext(MenuContext);
  return React176.createElement("ul", Object.assign({ role }, role === "listbox" && { "aria-multiselectable": isAriaMultiselectable }, { className: css(menu_default.menuList, className) }, props), children);
};
MenuList.displayName = "MenuList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/DrilldownMenu.js
var import_react7 = __toESM(require_react());
var DrilldownMenu = (_a) => {
  var { children, id, isMenuDrilledIn = false, getHeight } = _a, props = __rest(_a, ["children", "id", "isMenuDrilledIn", "getHeight"]);
  return (
    /* eslint-disable @typescript-eslint/no-unused-vars */
    import_react7.default.createElement(MenuContext.Consumer, null, (_a2) => {
      var { menuId, parentMenu, flyoutRef, setFlyoutRef, disableHover } = _a2, context = __rest(_a2, ["menuId", "parentMenu", "flyoutRef", "setFlyoutRef", "disableHover"]);
      return import_react7.default.createElement(
        Menu,
        Object.assign({ id, parentMenu: menuId, isMenuDrilledIn, isRootMenu: false, ref: import_react7.default.createRef() }, context, props),
        import_react7.default.createElement(
          MenuContent,
          { getHeight },
          import_react7.default.createElement(MenuList, null, children)
        )
      );
    })
  );
};
DrilldownMenu.displayName = "DrilldownMenu";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Menu/MenuBreadcrumb.js
var import_react8 = __toESM(require_react());
var MenuBreadcrumb = (_a) => {
  var { children } = _a, props = __rest(_a, ["children"]);
  return import_react8.default.createElement("div", Object.assign({ className: css(menu_default.menuBreadcrumb) }, props), children);
};
MenuBreadcrumb.displayName = "MenuBreadcrumb";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggle.js
var React179 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/MenuToggle/menu-toggle.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/MenuToggle/menu-toggle.css";
var menu_toggle_default = {
  "check": "pf-c-check",
  "menuToggle": "pf-c-menu-toggle",
  "menuToggleButton": "pf-c-menu-toggle__button",
  "menuToggleControls": "pf-c-menu-toggle__controls",
  "menuToggleCount": "pf-c-menu-toggle__count",
  "menuToggleIcon": "pf-c-menu-toggle__icon",
  "menuToggleText": "pf-c-menu-toggle__text",
  "menuToggleToggleIcon": "pf-c-menu-toggle__toggle-icon",
  "modifiers": {
    "primary": "pf-m-primary",
    "secondary": "pf-m-secondary",
    "expanded": "pf-m-expanded",
    "plain": "pf-m-plain",
    "text": "pf-m-text",
    "disabled": "pf-m-disabled",
    "fullHeight": "pf-m-full-height",
    "typeahead": "pf-m-typeahead",
    "splitButton": "pf-m-split-button",
    "action": "pf-m-action",
    "active": "pf-m-active",
    "fullWidth": "pf-m-full-width"
  },
  "textInputGroup": "pf-c-text-input-group",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggle.js
var MenuToggleBase = class extends React179.Component {
  constructor() {
    super(...arguments);
    this.displayName = "MenuToggleBase";
  }
  render() {
    const _a = this.props, { children, className, icon, badge, isExpanded, isDisabled, isFullHeight, isFullWidth, splitButtonOptions, variant, innerRef, onClick, "aria-label": ariaLabel } = _a, otherProps = __rest(_a, ["children", "className", "icon", "badge", "isExpanded", "isDisabled", "isFullHeight", "isFullWidth", "splitButtonOptions", "variant", "innerRef", "onClick", "aria-label"]);
    const isPlain = variant === "plain";
    const isPlainText = variant === "plainText";
    const isTypeahead = variant === "typeahead";
    const toggleControls = React179.createElement(
      "span",
      { className: css(menu_toggle_default.menuToggleControls) },
      React179.createElement(
        "span",
        { className: css(menu_toggle_default.menuToggleToggleIcon) },
        React179.createElement(caret_down_icon_default, { "aria-hidden": true })
      )
    );
    const content = React179.createElement(
      React179.Fragment,
      null,
      icon && React179.createElement("span", { className: css(menu_toggle_default.menuToggleIcon) }, icon),
      isTypeahead ? children : React179.createElement("span", { className: css(menu_toggle_default.menuToggleText) }, children),
      React179.isValidElement(badge) && React179.createElement("span", { className: css(menu_toggle_default.menuToggleCount) }, badge),
      isTypeahead ? React179.createElement("button", { type: "button", className: css(menu_toggle_default.menuToggleButton), "aria-expanded": isExpanded, onClick, "aria-label": "Menu toggle" }, toggleControls) : toggleControls
    );
    const commonStyles = css(menu_toggle_default.menuToggle, isExpanded && menu_toggle_default.modifiers.expanded, variant === "primary" && menu_toggle_default.modifiers.primary, variant === "secondary" && menu_toggle_default.modifiers.secondary, (isPlain || isPlainText) && menu_toggle_default.modifiers.plain, isPlainText && menu_toggle_default.modifiers.text, isFullHeight && menu_toggle_default.modifiers.fullHeight, isFullWidth && menu_toggle_default.modifiers.fullWidth, isDisabled && menu_toggle_default.modifiers.disabled, className);
    const componentProps = Object.assign(Object.assign({ children: isPlain ? children : content }, isDisabled && { disabled: true }), otherProps);
    if (isTypeahead) {
      return React179.createElement("div", Object.assign({ ref: innerRef, className: css(commonStyles, menu_toggle_default.modifiers.typeahead) }, componentProps));
    }
    if (splitButtonOptions) {
      return React179.createElement(
        "div",
        { ref: innerRef, className: css(commonStyles, menu_toggle_default.modifiers.splitButton, (splitButtonOptions === null || splitButtonOptions === void 0 ? void 0 : splitButtonOptions.variant) === "action" && menu_toggle_default.modifiers.action) },
        splitButtonOptions === null || splitButtonOptions === void 0 ? void 0 : splitButtonOptions.items,
        React179.createElement("button", Object.assign({ className: css(menu_toggle_default.menuToggleButton), type: "button", "aria-expanded": isExpanded, "aria-label": ariaLabel, disabled: isDisabled, onClick }, otherProps), toggleControls)
      );
    }
    return React179.createElement("button", Object.assign({ className: css(commonStyles), type: "button", "aria-label": ariaLabel, "aria-expanded": isExpanded, ref: innerRef, disabled: isDisabled, onClick }, componentProps));
  }
};
MenuToggleBase.defaultProps = {
  className: "",
  isExpanded: false,
  isDisabled: false,
  isFullWidth: false,
  isFullHeight: false
};
var MenuToggle = React179.forwardRef((props, ref) => React179.createElement(MenuToggleBase, Object.assign({ innerRef: ref }, props)));
MenuToggle.displayName = "MenuToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggleAction.js
var React180 = __toESM(require_react());
var MenuToggleAction = class extends React180.Component {
  render() {
    const _a = this.props, { id, className, onClick, isDisabled, children } = _a, props = __rest(_a, ["id", "className", "onClick", "isDisabled", "children"]);
    return React180.createElement("button", Object.assign({ id, className: css(menu_toggle_default.menuToggleButton, className), onClick, type: "button", disabled: isDisabled }, props), children);
  }
};
MenuToggleAction.displayName = "MenuToggleAction";
MenuToggleAction.defaultProps = {
  className: "",
  isDisabled: false,
  onClick: () => {
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggleCheckbox.js
var React181 = __toESM(require_react());
var MenuToggleCheckbox = class _MenuToggleCheckbox extends React181.Component {
  constructor(props) {
    super(props);
    this.handleChange = (event) => {
      this.props.onChange(event.target.checked, event);
    };
    this.calculateChecked = () => {
      const { isChecked, defaultChecked } = this.props;
      if (isChecked === null) {
        return false;
      } else if (isChecked !== void 0) {
        return isChecked;
      }
      return defaultChecked;
    };
    this.state = {
      ouiaStateId: getDefaultOUIAId(_MenuToggleCheckbox.displayName)
    };
  }
  render() {
    const _a = this.props, {
      className,
      isValid,
      isDisabled,
      isChecked,
      children,
      ouiaId,
      ouiaSafe,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      onChange,
      defaultChecked,
      id
    } = _a, props = __rest(_a, ["className", "isValid", "isDisabled", "isChecked", "children", "ouiaId", "ouiaSafe", "onChange", "defaultChecked", "id"]);
    const text = children && React181.createElement("span", { className: css(check_default.checkLabel, className), "aria-hidden": "true", id }, children);
    return React181.createElement(
      "label",
      { className: css(check_default.check, !children && check_default.modifiers.standalone, className), htmlFor: id },
      React181.createElement("input", Object.assign({ className: css(check_default.checkInput) }, this.calculateChecked() !== void 0 && { onChange: this.handleChange }, { name: id, type: "checkbox", ref: (elem) => elem && (elem.indeterminate = isChecked === null), "aria-invalid": !isValid, disabled: isDisabled }, defaultChecked !== void 0 ? { defaultChecked } : { checked: isChecked }, getOUIAProps(_MenuToggleCheckbox.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe), props)),
      text
    );
  }
};
MenuToggleCheckbox.displayName = "MenuToggleCheckbox";
MenuToggleCheckbox.defaultProps = {
  isValid: true,
  isDisabled: false,
  onChange: () => void 0
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/Modal.js
var React190 = __toESM(require_react());
var ReactDOM3 = __toESM(require_react_dom());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalContent.js
var React189 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ModalBox/modal-box.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ModalBox/modal-box.css";
var modal_box_default = {
  "button": "pf-c-button",
  "modalBox": "pf-c-modal-box",
  "modalBoxBody": "pf-c-modal-box__body",
  "modalBoxDescription": "pf-c-modal-box__description",
  "modalBoxFooter": "pf-c-modal-box__footer",
  "modalBoxHeader": "pf-c-modal-box__header",
  "modalBoxHeaderMain": "pf-c-modal-box__header-main",
  "modalBoxTitle": "pf-c-modal-box__title",
  "modalBoxTitleIcon": "pf-c-modal-box__title-icon",
  "modalBoxTitleText": "pf-c-modal-box__title-text",
  "modifiers": {
    "sm": "pf-m-sm",
    "md": "pf-m-md",
    "lg": "pf-m-lg",
    "alignTop": "pf-m-align-top",
    "danger": "pf-m-danger",
    "warning": "pf-m-warning",
    "success": "pf-m-success",
    "default": "pf-m-default",
    "info": "pf-m-info",
    "help": "pf-m-help",
    "icon": "pf-m-icon"
  },
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalBoxBody.js
var React182 = __toESM(require_react());
var ModalBoxBody = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React182.createElement("div", Object.assign({}, props, { className: css(modal_box_default.modalBoxBody, className) }), children);
};
ModalBoxBody.displayName = "ModalBoxBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalBoxCloseButton.js
var React183 = __toESM(require_react());
var ModalBoxCloseButton = (_a) => {
  var { className = "", onClose = () => void 0, ouiaId } = _a, props = __rest(_a, ["className", "onClose", "ouiaId"]);
  return React183.createElement(
    Button,
    Object.assign({ className, variant: "plain", onClick: onClose, "aria-label": "Close" }, ouiaId && { ouiaId: `${ouiaId}-${ModalBoxCloseButton.displayName}` }, props),
    React183.createElement(times_icon_default, null)
  );
};
ModalBoxCloseButton.displayName = "ModalBoxCloseButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalBox.js
var React184 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_modal_box_m_align_top_spacer.js
var c_modal_box_m_align_top_spacer = {
  "name": "--pf-c-modal-box--m-align-top--spacer",
  "value": "0.5rem",
  "var": "var(--pf-c-modal-box--m-align-top--spacer)"
};
var c_modal_box_m_align_top_spacer_default = c_modal_box_m_align_top_spacer;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalBox.js
var ModalBox = (_a) => {
  var { children, className = "", variant = "default", position, positionOffset, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel = "", "aria-describedby": ariaDescribedby, style } = _a, props = __rest(_a, ["children", "className", "variant", "position", "positionOffset", "aria-labelledby", "aria-label", "aria-describedby", "style"]);
  if (positionOffset) {
    style = style || {};
    style[c_modal_box_m_align_top_spacer_default.name] = positionOffset;
  }
  return React184.createElement("div", Object.assign({}, props, { role: "dialog", "aria-label": ariaLabel || null, "aria-labelledby": ariaLabelledby || null, "aria-describedby": ariaDescribedby, "aria-modal": "true", className: css(modal_box_default.modalBox, className, position === "top" && modal_box_default.modifiers.alignTop, variant === "large" && modal_box_default.modifiers.lg, variant === "small" && modal_box_default.modifiers.sm, variant === "medium" && modal_box_default.modifiers.md), style }), children);
};
ModalBox.displayName = "ModalBox";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalBoxFooter.js
var React185 = __toESM(require_react());
var ModalBoxFooter = (_a) => {
  var { children = null, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React185.createElement("footer", Object.assign({}, props, { className: css(modal_box_default.modalBoxFooter, className) }), children);
};
ModalBoxFooter.displayName = "ModalBoxFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalBoxDescription.js
var React186 = __toESM(require_react());
var ModalBoxDescription = (_a) => {
  var { children = null, className = "", id = "" } = _a, props = __rest(_a, ["children", "className", "id"]);
  return React186.createElement("div", Object.assign({}, props, { id, className: css(modal_box_default.modalBoxDescription, className) }), children);
};
ModalBoxDescription.displayName = "ModalBoxDescription";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalBoxHeader.js
var React187 = __toESM(require_react());
var ModalBoxHeader = (_a) => {
  var { children = null, className = "", help = null } = _a, props = __rest(_a, ["children", "className", "help"]);
  return React187.createElement(
    "header",
    Object.assign({ className: css(modal_box_default.modalBoxHeader, help && modal_box_default.modifiers.help, className) }, props),
    help && React187.createElement(
      React187.Fragment,
      null,
      React187.createElement("div", { className: css(modal_box_default.modalBoxHeaderMain) }, children),
      React187.createElement("div", { className: "pf-c-modal-box__header-help" }, help)
    ),
    !help && children
  );
};
ModalBoxHeader.displayName = "ModalBoxHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalBoxTitle.js
var React188 = __toESM(require_react());
var isVariantIcon = (icon) => ["success", "danger", "warning", "info", "default"].includes(icon);
var ModalBoxTitle = (_a) => {
  var { className = "", id, title, titleIconVariant, titleLabel = "" } = _a, props = __rest(_a, ["className", "id", "title", "titleIconVariant", "titleLabel"]);
  const [hasTooltip, setHasTooltip] = React188.useState(false);
  const h1 = React188.useRef(null);
  const label = titleLabel || (isVariantIcon(titleIconVariant) ? `${capitalize(titleIconVariant)} alert:` : titleLabel);
  const variantIcons4 = {
    success: React188.createElement(check_circle_icon_default, null),
    danger: React188.createElement(exclamation_circle_icon_default, null),
    warning: React188.createElement(exclamation_triangle_icon_default, null),
    info: React188.createElement(info_circle_icon_default, null),
    default: React188.createElement(bell_icon_default, null)
  };
  const CustomIcon = !isVariantIcon(titleIconVariant) && titleIconVariant;
  useIsomorphicLayoutEffect(() => {
    setHasTooltip(h1.current && h1.current.offsetWidth < h1.current.scrollWidth);
  }, []);
  const content = React188.createElement(
    "h1",
    Object.assign({ id, ref: h1, className: css(modal_box_default.modalBoxTitle, titleIconVariant && modal_box_default.modifiers.icon, className) }, props),
    titleIconVariant && React188.createElement("span", { className: css(modal_box_default.modalBoxTitleIcon) }, isVariantIcon(titleIconVariant) ? variantIcons4[titleIconVariant] : React188.createElement(CustomIcon, null)),
    label && React188.createElement("span", { className: css(accessibility_default.screenReader) }, label),
    React188.createElement("span", { className: css(modal_box_default.modalBoxTitleText) }, title)
  );
  return hasTooltip ? React188.createElement(Tooltip, { content: title }, content) : content;
};
ModalBoxTitle.displayName = "ModalBoxTitle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/ModalContent.js
var ModalContent = (_a) => {
  var { children, className = "", isOpen = false, header = null, help = null, description = null, title = "", titleIconVariant = null, titleLabel = "", "aria-label": ariaLabel = "", "aria-describedby": ariaDescribedby, "aria-labelledby": ariaLabelledby, bodyAriaLabel, bodyAriaRole, showClose = true, footer = null, actions = [], onClose = () => void 0, variant = "default", position, positionOffset, width = -1, boxId, labelId, descriptorId, disableFocusTrap = false, hasNoBodyWrapper = false, ouiaId, ouiaSafe = true } = _a, props = __rest(_a, ["children", "className", "isOpen", "header", "help", "description", "title", "titleIconVariant", "titleLabel", "aria-label", "aria-describedby", "aria-labelledby", "bodyAriaLabel", "bodyAriaRole", "showClose", "footer", "actions", "onClose", "variant", "position", "positionOffset", "width", "boxId", "labelId", "descriptorId", "disableFocusTrap", "hasNoBodyWrapper", "ouiaId", "ouiaSafe"]);
  if (!isOpen) {
    return null;
  }
  const modalBoxHeader = header ? React189.createElement(ModalBoxHeader, { help }, header) : title && React189.createElement(
    ModalBoxHeader,
    { help },
    React189.createElement(ModalBoxTitle, { title, titleIconVariant, titleLabel, id: labelId }),
    description && React189.createElement(ModalBoxDescription, { id: descriptorId }, description)
  );
  const modalBoxFooter = footer ? React189.createElement(ModalBoxFooter, null, footer) : actions.length > 0 && React189.createElement(ModalBoxFooter, null, actions);
  const defaultModalBodyAriaRole = bodyAriaLabel ? "region" : void 0;
  const modalBody = hasNoBodyWrapper ? children : React189.createElement(ModalBoxBody, Object.assign({ "aria-label": bodyAriaLabel, role: bodyAriaRole || defaultModalBodyAriaRole }, props, !description && !ariaDescribedby && { id: descriptorId }), children);
  const boxStyle = width === -1 ? {} : { width };
  const ariaLabelledbyFormatted = () => {
    if (ariaLabelledby === null) {
      return null;
    }
    const idRefList = [];
    if ((ariaLabel && boxId) !== "") {
      idRefList.push(ariaLabel && boxId);
    }
    if (ariaLabelledby) {
      idRefList.push(ariaLabelledby);
    }
    if (title) {
      idRefList.push(labelId);
    }
    return idRefList.join(" ");
  };
  const modalBox = React189.createElement(
    ModalBox,
    Object.assign({ id: boxId, style: boxStyle, className: css(className, isVariantIcon(titleIconVariant) && modal_box_default.modifiers[titleIconVariant]), variant, position, positionOffset, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledbyFormatted(), "aria-describedby": ariaDescribedby || (hasNoBodyWrapper ? null : descriptorId) }, getOUIAProps(ModalContent.displayName, ouiaId, ouiaSafe)),
    showClose && React189.createElement(ModalBoxCloseButton, { onClose, ouiaId }),
    modalBoxHeader,
    modalBody,
    modalBoxFooter
  );
  return React189.createElement(
    Backdrop,
    null,
    React189.createElement(FocusTrap, { active: !disableFocusTrap, focusTrapOptions: { clickOutsideDeactivates: true, tabbableOptions: { displayCheck: "none" } }, className: css(bullseye_default.bullseye) }, modalBox)
  );
};
ModalContent.displayName = "ModalContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Modal/Modal.js
var ModalVariant;
(function(ModalVariant2) {
  ModalVariant2["small"] = "small";
  ModalVariant2["medium"] = "medium";
  ModalVariant2["large"] = "large";
  ModalVariant2["default"] = "default";
})(ModalVariant || (ModalVariant = {}));
var Modal = class _Modal extends React190.Component {
  constructor(props) {
    super(props);
    this.boxId = "";
    this.labelId = "";
    this.descriptorId = "";
    this.handleEscKeyClick = (event) => {
      var _a, _b;
      const { onEscapePress } = this.props;
      if (event.key === KeyTypes.Escape && this.props.isOpen) {
        onEscapePress ? onEscapePress(event) : (_b = (_a = this.props).onClose) === null || _b === void 0 ? void 0 : _b.call(_a);
      }
    };
    this.getElement = (appendTo) => {
      if (typeof appendTo === "function") {
        return appendTo();
      }
      return appendTo || document.body;
    };
    this.toggleSiblingsFromScreenReaders = (hide) => {
      const { appendTo } = this.props;
      const target = this.getElement(appendTo);
      const bodyChildren = target.children;
      for (const child of Array.from(bodyChildren)) {
        if (child !== this.state.container) {
          hide ? child.setAttribute("aria-hidden", "" + hide) : child.removeAttribute("aria-hidden");
        }
      }
    };
    this.isEmpty = (value) => value === null || value === void 0 || value === "";
    const boxIdNum = _Modal.currentId++;
    const labelIdNum = boxIdNum + 1;
    const descriptorIdNum = boxIdNum + 2;
    this.boxId = props.id || `pf-modal-part-${boxIdNum}`;
    this.labelId = `pf-modal-part-${labelIdNum}`;
    this.descriptorId = `pf-modal-part-${descriptorIdNum}`;
    this.state = {
      container: void 0,
      ouiaStateId: getDefaultOUIAId(_Modal.displayName, props.variant)
    };
  }
  componentDidMount() {
    const { appendTo, title, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, hasNoBodyWrapper, header } = this.props;
    const target = this.getElement(appendTo);
    const container = document.createElement("div");
    this.setState({ container });
    target.appendChild(container);
    target.addEventListener("keydown", this.handleEscKeyClick, false);
    if (this.props.isOpen) {
      target.classList.add(css(backdrop_default.backdropOpen));
    } else {
      target.classList.remove(css(backdrop_default.backdropOpen));
    }
    if (this.isEmpty(title) && this.isEmpty(ariaLabel) && this.isEmpty(ariaLabelledby)) {
      console.error("Modal: Specify at least one of: title, aria-label, aria-labelledby.");
    }
    if (this.isEmpty(ariaLabel) && this.isEmpty(ariaLabelledby) && (hasNoBodyWrapper || header)) {
      console.error("Modal: When using hasNoBodyWrapper or setting a custom header, ensure you assign an accessible name to the the modal container with aria-label or aria-labelledby.");
    }
  }
  componentDidUpdate() {
    const { appendTo } = this.props;
    const target = this.getElement(appendTo);
    if (this.props.isOpen) {
      target.classList.add(css(backdrop_default.backdropOpen));
      this.toggleSiblingsFromScreenReaders(true);
    } else {
      target.classList.remove(css(backdrop_default.backdropOpen));
      this.toggleSiblingsFromScreenReaders(false);
    }
  }
  componentWillUnmount() {
    const { appendTo } = this.props;
    const target = this.getElement(appendTo);
    if (this.state.container) {
      target.removeChild(this.state.container);
    }
    target.removeEventListener("keydown", this.handleEscKeyClick, false);
    target.classList.remove(css(backdrop_default.backdropOpen));
  }
  render() {
    const _a = this.props, {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      appendTo,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onEscapePress,
      "aria-labelledby": ariaLabelledby,
      "aria-label": ariaLabel,
      "aria-describedby": ariaDescribedby,
      bodyAriaLabel,
      bodyAriaRole,
      title,
      titleIconVariant,
      titleLabel,
      ouiaId,
      ouiaSafe
    } = _a, props = __rest(_a, ["appendTo", "onEscapePress", "aria-labelledby", "aria-label", "aria-describedby", "bodyAriaLabel", "bodyAriaRole", "title", "titleIconVariant", "titleLabel", "ouiaId", "ouiaSafe"]);
    const { container } = this.state;
    if (!canUseDOM || !container) {
      return null;
    }
    return ReactDOM3.createPortal(React190.createElement(ModalContent, Object.assign({}, props, { boxId: this.boxId, labelId: this.labelId, descriptorId: this.descriptorId, title, titleIconVariant, titleLabel, "aria-label": ariaLabel, "aria-describedby": ariaDescribedby, "aria-labelledby": ariaLabelledby, bodyAriaLabel, bodyAriaRole, ouiaId: ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe })), container);
  }
};
Modal.displayName = "Modal";
Modal.currentId = 0;
Modal.defaultProps = {
  className: "",
  isOpen: false,
  title: "",
  titleIconVariant: null,
  titleLabel: "",
  "aria-label": "",
  showClose: true,
  "aria-describedby": "",
  "aria-labelledby": "",
  id: void 0,
  actions: [],
  onClose: () => void 0,
  variant: "default",
  hasNoBodyWrapper: false,
  appendTo: () => document.body,
  ouiaSafe: true
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUpload.js
var React191 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/MultipleFileUpload/multiple-file-upload.css";
var multiple_file_upload_default = {
  "modifiers": {
    "horizontal": "pf-m-horizontal",
    "dragOver": "pf-m-drag-over"
  },
  "multipleFileUpload": "pf-c-multiple-file-upload",
  "multipleFileUploadInfo": "pf-c-multiple-file-upload__info",
  "multipleFileUploadMain": "pf-c-multiple-file-upload__main",
  "multipleFileUploadStatus": "pf-c-multiple-file-upload__status",
  "multipleFileUploadStatusItem": "pf-c-multiple-file-upload__status-item",
  "multipleFileUploadStatusItemClose": "pf-c-multiple-file-upload__status-item-close",
  "multipleFileUploadStatusItemIcon": "pf-c-multiple-file-upload__status-item-icon",
  "multipleFileUploadStatusItemMain": "pf-c-multiple-file-upload__status-item-main",
  "multipleFileUploadStatusItemProgress": "pf-c-multiple-file-upload__status-item-progress",
  "multipleFileUploadStatusItemProgressSize": "pf-c-multiple-file-upload__status-item-progress-size",
  "multipleFileUploadStatusItemProgressText": "pf-c-multiple-file-upload__status-item-progress-text",
  "multipleFileUploadStatusProgress": "pf-c-multiple-file-upload__status-progress",
  "multipleFileUploadStatusProgressIcon": "pf-c-multiple-file-upload__status-progress-icon",
  "multipleFileUploadTitle": "pf-c-multiple-file-upload__title",
  "multipleFileUploadTitleIcon": "pf-c-multiple-file-upload__title-icon",
  "multipleFileUploadTitleText": "pf-c-multiple-file-upload__title-text",
  "multipleFileUploadTitleTextSeparator": "pf-c-multiple-file-upload__title-text-separator",
  "multipleFileUploadUpload": "pf-c-multiple-file-upload__upload"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUpload.js
var MultipleFileUploadContext = React191.createContext({
  open: () => {
  }
});
var MultipleFileUpload = (_a) => {
  var { className, children, dropzoneProps = {}, isHorizontal, onFileDrop = () => {
  } } = _a, props = __rest(_a, ["className", "children", "dropzoneProps", "isHorizontal", "onFileDrop"]);
  const onDropAccepted = (acceptedFiles, event) => {
    onFileDrop(acceptedFiles);
    dropzoneProps.onDropAccepted && dropzoneProps.onDropAccepted(acceptedFiles, event);
  };
  const onDropRejected = (rejectedFiles, event) => {
    dropzoneProps.onDropRejected && (dropzoneProps === null || dropzoneProps === void 0 ? void 0 : dropzoneProps.onDropRejected(rejectedFiles, event));
  };
  return React191.createElement(es_default, Object.assign({ multiple: true }, dropzoneProps, { onDropAccepted, onDropRejected }), ({ getRootProps, getInputProps, isDragActive, open }) => {
    const rootProps = getRootProps(Object.assign(Object.assign({}, props), {
      onClick: (event) => event.preventDefault()
      // Prevents clicking TextArea from opening file dialog
    }));
    const inputProps = getInputProps();
    return React191.createElement(
      MultipleFileUploadContext.Provider,
      { value: { open } },
      React191.createElement(
        "div",
        Object.assign({ className: css(multiple_file_upload_default.multipleFileUpload, isDragActive && multiple_file_upload_default.modifiers.dragOver, isHorizontal && multiple_file_upload_default.modifiers.horizontal, className) }, rootProps, props),
        React191.createElement("input", Object.assign({}, inputProps)),
        children
      )
    );
  });
};
MultipleFileUpload.displayName = "MultipleFileUpload";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadMain.js
var React198 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadTitle.js
var React195 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadTitleIcon.js
var React192 = __toESM(require_react());
var MultipleFileUploadTitleIcon = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React192.createElement("div", Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadTitleIcon, className) }, props), children);
};
MultipleFileUploadTitleIcon.displayName = "MultipleFileUploadTitleIcon";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadTitleText.js
var React193 = __toESM(require_react());
var MultipleFileUploadTitleText = (_a) => {
  var { className, children } = _a, props = __rest(_a, ["className", "children"]);
  return React193.createElement("div", Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadTitleText, className) }, props), children);
};
MultipleFileUploadTitleText.displayName = "MultipleFileUploadTitleText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadTitleTextSeparator.js
var React194 = __toESM(require_react());
var MultipleFileUploadTitleTextSeparator = (_a) => {
  var { className, children } = _a, props = __rest(_a, ["className", "children"]);
  return React194.createElement("div", Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadTitleTextSeparator, className) }, props), children);
};
MultipleFileUploadTitleTextSeparator.displayName = "MultipleFileUploadTitleTextSeparator";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadTitle.js
var MultipleFileUploadTitle = (_a) => {
  var { className, icon, text = "", textSeparator = "" } = _a, props = __rest(_a, ["className", "icon", "text", "textSeparator"]);
  return React195.createElement(
    "div",
    Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadTitle, className) }, props),
    icon && React195.createElement(MultipleFileUploadTitleIcon, null, icon),
    text && React195.createElement(
      MultipleFileUploadTitleText,
      null,
      `${text} `,
      textSeparator && React195.createElement(MultipleFileUploadTitleTextSeparator, null, textSeparator)
    )
  );
};
MultipleFileUploadTitle.displayName = "MultipleFileUploadTitle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadButton.js
var React196 = __toESM(require_react());
var MultipleFileUploadButton = (_a) => {
  var { className, "aria-label": ariaLabel } = _a, props = __rest(_a, ["className", "aria-label"]);
  const { open } = React196.useContext(MultipleFileUploadContext);
  return React196.createElement(
    "div",
    Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadUpload, className) }, props),
    React196.createElement(Button, { variant: "secondary", "aria-label": ariaLabel, onClick: open }, "Upload")
  );
};
MultipleFileUploadButton.displayName = "MultipleFileUploadButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadInfo.js
var React197 = __toESM(require_react());
var MultipleFileUploadInfo = (_a) => {
  var { className, children } = _a, props = __rest(_a, ["className", "children"]);
  return React197.createElement("div", Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadInfo, className) }, props), children);
};
MultipleFileUploadInfo.displayName = "MultipleFileUploadInfo";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadMain.js
var MultipleFileUploadMain = (_a) => {
  var { className, titleIcon, titleText, titleTextSeparator, infoText, isUploadButtonHidden } = _a, props = __rest(_a, ["className", "titleIcon", "titleText", "titleTextSeparator", "infoText", "isUploadButtonHidden"]);
  const showTitle = !!titleIcon || !!titleText || !!titleTextSeparator;
  return React198.createElement(
    "div",
    Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadMain, className) }, props),
    showTitle && React198.createElement(MultipleFileUploadTitle, { icon: titleIcon, text: titleText, textSeparator: titleTextSeparator }),
    isUploadButtonHidden || React198.createElement(MultipleFileUploadButton, null),
    !!infoText && React198.createElement(MultipleFileUploadInfo, null, infoText)
  );
};
MultipleFileUploadMain.displayName = "MultipleFileUploadMain";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadStatus.js
var React199 = __toESM(require_react());
var MultipleFileUploadStatus = (_a) => {
  var { children, className, statusToggleText, statusToggleIcon } = _a, props = __rest(_a, ["children", "className", "statusToggleText", "statusToggleIcon"]);
  const [icon, setIcon] = React199.useState();
  const [isOpen, setIsOpen] = React199.useState(true);
  React199.useEffect(() => {
    switch (statusToggleIcon) {
      case "danger":
        setIcon(React199.createElement(times_circle_icon_default, null));
        break;
      case "success":
        setIcon(React199.createElement(check_circle_icon_default, null));
        break;
      case "inProgress":
        setIcon(React199.createElement(in_progress_icon_default, null));
        break;
      default:
        setIcon(statusToggleIcon);
    }
  }, [statusToggleIcon]);
  const toggle = React199.createElement(
    "div",
    { className: multiple_file_upload_default.multipleFileUploadStatusProgress },
    React199.createElement("div", { className: multiple_file_upload_default.multipleFileUploadStatusProgressIcon }, icon),
    React199.createElement("div", { className: multiple_file_upload_default.multipleFileUploadStatusItemProgressText }, statusToggleText)
  );
  const toggleExpandableSection = () => {
    setIsOpen(!isOpen);
  };
  return React199.createElement(
    "div",
    Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadStatus, className) }, props),
    React199.createElement(
      ExpandableSection,
      { toggleContent: toggle, isExpanded: isOpen, onToggle: toggleExpandableSection },
      React199.createElement("ul", { className: "pf-c-multiple-file-upload__status-list" }, children)
    )
  );
};
MultipleFileUploadStatus.displayName = "MultipleFileUploadStatus";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadStatusItem.js
var React204 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Progress/Progress.js
var React203 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Progress/progress.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Progress/progress.css";
var progress_default = {
  "modifiers": {
    "sm": "pf-m-sm",
    "lg": "pf-m-lg",
    "inside": "pf-m-inside",
    "outside": "pf-m-outside",
    "staticWidth": "pf-m-static-width",
    "singleline": "pf-m-singleline",
    "success": "pf-m-success",
    "warning": "pf-m-warning",
    "danger": "pf-m-danger",
    "truncate": "pf-m-truncate"
  },
  "progress": "pf-c-progress",
  "progressBar": "pf-c-progress__bar",
  "progressDescription": "pf-c-progress__description",
  "progressHelperText": "pf-c-progress__helper-text",
  "progressIndicator": "pf-c-progress__indicator",
  "progressMeasure": "pf-c-progress__measure",
  "progressStatus": "pf-c-progress__status",
  "progressStatusIcon": "pf-c-progress__status-icon",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Progress/ProgressContainer.js
var React202 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Progress/ProgressBar.js
var React200 = __toESM(require_react());
var ProgressBar = (_a) => {
  var { progressBarAriaProps, className = "", children = null, value } = _a, props = __rest(_a, ["progressBarAriaProps", "className", "children", "value"]);
  return React200.createElement(
    "div",
    Object.assign({}, props, { className: css(progress_default.progressBar, className) }, progressBarAriaProps),
    React200.createElement(
      "div",
      { className: css(progress_default.progressIndicator), style: { width: `${value}%` } },
      React200.createElement("span", { className: css(progress_default.progressMeasure) }, children)
    )
  );
};
ProgressBar.displayName = "ProgressBar";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Progress/ProgressHelperText.js
var React201 = __toESM(require_react());
var ProgressHelperText = (_a) => {
  var { children } = _a, props = __rest(_a, ["children"]);
  return React201.createElement("div", Object.assign({ className: progress_default.progressHelperText }, props), children);
};
ProgressHelperText.displayName = "ProgressHelperText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Progress/ProgressContainer.js
var ProgressMeasureLocation;
(function(ProgressMeasureLocation2) {
  ProgressMeasureLocation2["outside"] = "outside";
  ProgressMeasureLocation2["inside"] = "inside";
  ProgressMeasureLocation2["top"] = "top";
  ProgressMeasureLocation2["none"] = "none";
})(ProgressMeasureLocation || (ProgressMeasureLocation = {}));
var ProgressVariant;
(function(ProgressVariant2) {
  ProgressVariant2["danger"] = "danger";
  ProgressVariant2["success"] = "success";
  ProgressVariant2["warning"] = "warning";
})(ProgressVariant || (ProgressVariant = {}));
var variantToIcon = {
  danger: times_circle_icon_default,
  success: check_circle_icon_default,
  warning: exclamation_triangle_icon_default
};
var ProgressContainer = ({ progressBarAriaProps, value, title = "", parentId, label = null, variant = null, measureLocation = ProgressMeasureLocation.top, isTitleTruncated = false, tooltipPosition, helperText }) => {
  const StatusIcon = variantToIcon.hasOwnProperty(variant) && variantToIcon[variant];
  const [tooltip, setTooltip] = React202.useState("");
  const onMouseEnter = (event) => {
    if (event.target.offsetWidth < event.target.scrollWidth) {
      setTooltip(title || event.target.innerHTML);
    } else {
      setTooltip("");
    }
  };
  const Title2 = React202.createElement("div", { className: css(progress_default.progressDescription, isTitleTruncated && typeof title === "string" && progress_default.modifiers.truncate), id: `${parentId}-description`, "aria-hidden": "true", onMouseEnter: isTitleTruncated && typeof title === "string" ? onMouseEnter : null }, title);
  return React202.createElement(
    React202.Fragment,
    null,
    tooltip ? React202.createElement(Tooltip, { position: tooltipPosition, content: tooltip, isVisible: true }, Title2) : Title2,
    React202.createElement(
      "div",
      { className: css(progress_default.progressStatus), "aria-hidden": "true" },
      (measureLocation === ProgressMeasureLocation.top || measureLocation === ProgressMeasureLocation.outside) && React202.createElement("span", { className: css(progress_default.progressMeasure) }, label || `${value}%`),
      variantToIcon.hasOwnProperty(variant) && React202.createElement(
        "span",
        { className: css(progress_default.progressStatusIcon) },
        React202.createElement(StatusIcon, null)
      )
    ),
    React202.createElement(ProgressBar, { role: "progressbar", progressBarAriaProps, value }, measureLocation === ProgressMeasureLocation.inside && `${value}%`),
    helperText && React202.createElement(ProgressHelperText, null, helperText)
  );
};
ProgressContainer.displayName = "ProgressContainer";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Progress/Progress.js
var ProgressSize;
(function(ProgressSize2) {
  ProgressSize2["sm"] = "sm";
  ProgressSize2["md"] = "md";
  ProgressSize2["lg"] = "lg";
})(ProgressSize || (ProgressSize = {}));
var Progress = class extends React203.Component {
  constructor() {
    super(...arguments);
    this.id = this.props.id || getUniqueId();
  }
  render() {
    const _a = this.props, {
      /* eslint-disable @typescript-eslint/no-unused-vars */
      id,
      size,
      /* eslint-enable @typescript-eslint/no-unused-vars */
      className,
      value,
      title,
      label,
      variant,
      measureLocation,
      min,
      max,
      valueText,
      isTitleTruncated,
      tooltipPosition,
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledBy,
      helperText
    } = _a, props = __rest(_a, ["id", "size", "className", "value", "title", "label", "variant", "measureLocation", "min", "max", "valueText", "isTitleTruncated", "tooltipPosition", "aria-label", "aria-labelledby", "helperText"]);
    const progressBarAriaProps = {
      "aria-valuemin": min,
      "aria-valuenow": value,
      "aria-valuemax": max
    };
    if (title || ariaLabelledBy) {
      progressBarAriaProps["aria-labelledby"] = title ? `${this.id}-description` : ariaLabelledBy;
    }
    if (ariaLabel) {
      progressBarAriaProps["aria-label"] = ariaLabel;
    }
    if (valueText) {
      progressBarAriaProps["aria-valuetext"] = valueText;
    }
    if (!title && !ariaLabelledBy && !ariaLabel) {
      console.warn("One of aria-label or aria-labelledby properties should be passed when using the progress component without a title.");
    }
    const scaledValue = Math.min(100, Math.max(0, Math.floor((value - min) / (max - min) * 100))) || 0;
    return React203.createElement(
      "div",
      Object.assign({}, props, { className: css(progress_default.progress, progress_default.modifiers[variant], ["inside", "outside"].includes(measureLocation) && progress_default.modifiers[measureLocation], measureLocation === "inside" ? progress_default.modifiers[ProgressSize.lg] : progress_default.modifiers[size], !title && progress_default.modifiers.singleline, className), id: this.id }),
      React203.createElement(ProgressContainer, { parentId: this.id, value: scaledValue, title, label, variant, measureLocation, progressBarAriaProps, isTitleTruncated, tooltipPosition, helperText })
    );
  }
};
Progress.displayName = "Progress";
Progress.defaultProps = {
  className: "",
  measureLocation: ProgressMeasureLocation.top,
  variant: null,
  id: "",
  title: "",
  min: 0,
  max: 100,
  size: null,
  label: null,
  value: 0,
  valueText: null,
  isTitleTruncated: false,
  tooltipPosition: "top",
  "aria-label": null,
  "aria-labelledby": null
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/MultipleFileUpload/MultipleFileUploadStatusItem.js
var MultipleFileUploadStatusItem = (_a) => {
  var { className, file, fileIcon, onReadStarted = () => {
  }, onReadFinished = () => {
  }, onReadSuccess = () => {
  }, onReadFail = () => {
  }, onClearClick = () => {
  }, customFileHandler, fileName, fileSize, progressValue, progressVariant, progressAriaLabel, progressAriaLabelledBy, progressId, progressAriaLiveMessage, buttonAriaLabel = "Remove from list", progressHelperText } = _a, props = __rest(_a, ["className", "file", "fileIcon", "onReadStarted", "onReadFinished", "onReadSuccess", "onReadFail", "onClearClick", "customFileHandler", "fileName", "fileSize", "progressValue", "progressVariant", "progressAriaLabel", "progressAriaLabelledBy", "progressId", "progressAriaLiveMessage", "buttonAriaLabel", "progressHelperText"]);
  const [loadPercentage, setLoadPercentage] = React204.useState(0);
  const [loadResult, setLoadResult] = React204.useState();
  function readFile2(file2) {
    return new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.onload = () => resolve(reader.result);
      reader.onerror = () => reject(reader.error);
      reader.onprogress = (data) => {
        if (data.lengthComputable) {
          setLoadPercentage(data.loaded / data.total * 100);
        }
      };
      reader.readAsDataURL(file2);
    });
  }
  React204.useEffect(() => {
    if (customFileHandler) {
      customFileHandler(file);
    } else {
      onReadStarted(file);
      readFile2(file).then((data) => {
        setLoadResult("success");
        setLoadPercentage(100);
        onReadFinished(file);
        onReadSuccess(data, file);
      }).catch((error) => {
        onReadFinished(file);
        onReadFail(error, file);
        setLoadResult("danger");
      });
    }
  }, []);
  const getHumanReadableFileSize = (size) => {
    const prefixes = ["", "K", "M", "G", "T"];
    let prefixUnit = 0;
    while (size >= 1e3) {
      prefixUnit += 1;
      size = size / 1e3;
    }
    if (prefixUnit >= prefixes.length) {
      return "File size too large";
    }
    return `${Math.round(size)}${prefixes[prefixUnit]}B`;
  };
  const value = progressValue || loadPercentage;
  const variant = progressVariant || loadResult;
  const title = React204.createElement(
    "span",
    { className: multiple_file_upload_default.multipleFileUploadStatusItemProgress },
    React204.createElement("span", { className: multiple_file_upload_default.multipleFileUploadStatusItemProgressText }, fileName || (file === null || file === void 0 ? void 0 : file.name) || ""),
    React204.createElement("span", { className: multiple_file_upload_default.multipleFileUploadStatusItemProgressSize }, fileSize || getHumanReadableFileSize((file === null || file === void 0 ? void 0 : file.size) || 0))
  );
  return React204.createElement(
    "li",
    Object.assign({ className: css(multiple_file_upload_default.multipleFileUploadStatusItem, className) }, props),
    React204.createElement("div", { className: multiple_file_upload_default.multipleFileUploadStatusItemIcon }, fileIcon || React204.createElement(file_icon_default, null)),
    React204.createElement(
      "div",
      { className: multiple_file_upload_default.multipleFileUploadStatusItemMain },
      React204.createElement(
        "div",
        { className: "pf-screen-reader", "aria-live": "polite" },
        progressAriaLiveMessage && typeof progressAriaLiveMessage === "function" && progressAriaLiveMessage(+loadPercentage.toFixed(2)),
        progressAriaLiveMessage && typeof progressAriaLiveMessage === "string" && progressAriaLiveMessage,
        !progressAriaLiveMessage && `Progress value is ${progressValue || Math.floor(loadPercentage)}%.`
      ),
      React204.createElement(Progress, { title, value, variant, "aria-label": progressAriaLabel, "aria-labelledby": progressAriaLabelledBy, id: progressId, helperText: progressHelperText })
    ),
    React204.createElement(
      "div",
      { className: multiple_file_upload_default.multipleFileUploadStatusItemClose },
      React204.createElement(
        Button,
        { variant: "plain", "aria-label": buttonAriaLabel, onClick: onClearClick },
        React204.createElement(times_circle_icon_default, null)
      )
    )
  );
};
MultipleFileUploadStatusItem.displayName = "MultipleFileUploadStatusItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Nav/Nav.js
var React205 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Nav/nav.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Nav/nav.css";
var nav_default = {
  "divider": "pf-c-divider",
  "menu": "pf-c-menu",
  "menuContent": "pf-c-menu__content",
  "menuItem": "pf-c-menu__item",
  "menuItemToggleIcon": "pf-c-menu__item-toggle-icon",
  "menuListItem": "pf-c-menu__list-item",
  "modifiers": {
    "flyout": "pf-m-flyout",
    "top": "pf-m-top",
    "left": "pf-m-left",
    "current": "pf-m-current",
    "drillUp": "pf-m-drill-up",
    "horizontal": "pf-m-horizontal",
    "tertiary": "pf-m-tertiary",
    "horizontalSubnav": "pf-m-horizontal-subnav",
    "light": "pf-m-light",
    "scrollable": "pf-m-scrollable",
    "overflowHidden": "pf-m-overflow-hidden",
    "expandable": "pf-m-expandable",
    "expanded": "pf-m-expanded",
    "drilldown": "pf-m-drilldown",
    "hover": "pf-m-hover",
    "start": "pf-m-start",
    "noTitle": "pf-m-no-title"
  },
  "nav": "pf-c-nav",
  "navItem": "pf-c-nav__item",
  "navLink": "pf-c-nav__link",
  "navList": "pf-c-nav__list",
  "navScrollButton": "pf-c-nav__scroll-button",
  "navSection": "pf-c-nav__section",
  "navSectionTitle": "pf-c-nav__section-title",
  "navSubnav": "pf-c-nav__subnav",
  "navToggle": "pf-c-nav__toggle",
  "navToggleIcon": "pf-c-nav__toggle-icon",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Nav/Nav.js
var navContextDefaults = {};
var NavContext = React205.createContext(navContextDefaults);
var Nav = class _Nav extends React205.Component {
  constructor() {
    super(...arguments);
    this.state = {
      isScrollable: false,
      ouiaStateId: getDefaultOUIAId(_Nav.displayName, this.props.variant),
      flyoutRef: null
    };
  }
  // Callback from NavItem
  onSelect(event, groupId, itemId, to, preventDefault, onClick) {
    if (preventDefault) {
      event.preventDefault();
    }
    this.props.onSelect({ groupId, itemId, event, to });
    if (onClick) {
      onClick(event, itemId, groupId, to);
    }
  }
  // Callback from NavExpandable
  onToggle(event, groupId, toggleValue) {
    this.props.onToggle({
      event,
      groupId,
      isExpanded: toggleValue
    });
  }
  render() {
    const _a = this.props, {
      "aria-label": ariaLabel,
      children,
      className,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onSelect,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onToggle,
      theme,
      ouiaId,
      ouiaSafe,
      variant
    } = _a, props = __rest(_a, ["aria-label", "children", "className", "onSelect", "onToggle", "theme", "ouiaId", "ouiaSafe", "variant"]);
    const isHorizontal = ["horizontal", "tertiary"].includes(variant);
    return React205.createElement(
      NavContext.Provider,
      { value: {
        onSelect: (event, groupId, itemId, to, preventDefault, onClick) => this.onSelect(event, groupId, itemId, to, preventDefault, onClick),
        onToggle: (event, groupId, expanded) => this.onToggle(event, groupId, expanded),
        updateIsScrollable: (isScrollable) => this.setState({ isScrollable }),
        isHorizontal: ["horizontal", "tertiary", "horizontal-subnav"].includes(variant),
        flyoutRef: this.state.flyoutRef,
        setFlyoutRef: (flyoutRef) => this.setState({ flyoutRef })
      } },
      React205.createElement("nav", Object.assign({ className: css(nav_default.nav, theme === "light" && nav_default.modifiers.light, isHorizontal && nav_default.modifiers.horizontal, variant === "tertiary" && nav_default.modifiers.tertiary, variant === "horizontal-subnav" && nav_default.modifiers.horizontalSubnav, this.state.isScrollable && nav_default.modifiers.scrollable, className), "aria-label": ariaLabel || (variant === "tertiary" ? "Local" : "Global") }, getOUIAProps(_Nav.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe), props), children)
    );
  }
};
Nav.displayName = "Nav";
Nav.defaultProps = {
  onSelect: () => void 0,
  onToggle: () => void 0,
  theme: "dark",
  ouiaSafe: true
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Nav/NavList.js
var React207 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageSidebar.js
var React206 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Page/page.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Page/page.css";
var page_default = {
  "avatar": "pf-c-avatar",
  "brand": "pf-c-brand",
  "button": "pf-c-button",
  "card": "pf-c-card",
  "contextSelector": "pf-c-context-selector",
  "drawer": "pf-c-drawer",
  "masthead": "pf-c-masthead",
  "modifiers": {
    "light": "pf-m-light",
    "menu": "pf-m-menu",
    "hidden": "pf-m-hidden",
    "hiddenOnSm": "pf-m-hidden-on-sm",
    "visibleOnSm": "pf-m-visible-on-sm",
    "hiddenOnMd": "pf-m-hidden-on-md",
    "visibleOnMd": "pf-m-visible-on-md",
    "hiddenOnLg": "pf-m-hidden-on-lg",
    "visibleOnLg": "pf-m-visible-on-lg",
    "hiddenOnXl": "pf-m-hidden-on-xl",
    "visibleOnXl": "pf-m-visible-on-xl",
    "hiddenOn_2xl": "pf-m-hidden-on-2xl",
    "visibleOn_2xl": "pf-m-visible-on-2xl",
    "fullHeight": "pf-m-full-height",
    "read": "pf-m-read",
    "selected": "pf-m-selected",
    "unread": "pf-m-unread",
    "attention": "pf-m-attention",
    "expanded": "pf-m-expanded",
    "collapsed": "pf-m-collapsed",
    "limitWidth": "pf-m-limit-width",
    "alignCenter": "pf-m-align-center",
    "overflowScroll": "pf-m-overflow-scroll",
    "shadowBottom": "pf-m-shadow-bottom",
    "shadowTop": "pf-m-shadow-top",
    "stickyTop": "pf-m-sticky-top",
    "stickyBottom": "pf-m-sticky-bottom",
    "stickyTopOnSmHeight": "pf-m-sticky-top-on-sm-height",
    "stickyBottomOnSmHeight": "pf-m-sticky-bottom-on-sm-height",
    "stickyTopOnMdHeight": "pf-m-sticky-top-on-md-height",
    "stickyBottomOnMdHeight": "pf-m-sticky-bottom-on-md-height",
    "stickyTopOnLgHeight": "pf-m-sticky-top-on-lg-height",
    "stickyBottomOnLgHeight": "pf-m-sticky-bottom-on-lg-height",
    "stickyTopOnXlHeight": "pf-m-sticky-top-on-xl-height",
    "stickyBottomOnXlHeight": "pf-m-sticky-bottom-on-xl-height",
    "stickyTopOn_2xlHeight": "pf-m-sticky-top-on-2xl-height",
    "stickyBottomOn_2xlHeight": "pf-m-sticky-bottom-on-2xl-height",
    "fill": "pf-m-fill",
    "noFill": "pf-m-no-fill",
    "light_100": "pf-m-light-100",
    "dark_100": "pf-m-dark-100",
    "dark_200": "pf-m-dark-200",
    "padding": "pf-m-padding",
    "noPadding": "pf-m-no-padding",
    "paddingOnSm": "pf-m-padding-on-sm",
    "noPaddingOnSm": "pf-m-no-padding-on-sm",
    "paddingOnMd": "pf-m-padding-on-md",
    "noPaddingOnMd": "pf-m-no-padding-on-md",
    "paddingOnLg": "pf-m-padding-on-lg",
    "noPaddingOnLg": "pf-m-no-padding-on-lg",
    "paddingOnXl": "pf-m-padding-on-xl",
    "noPaddingOnXl": "pf-m-no-padding-on-xl",
    "paddingOn_2xl": "pf-m-padding-on-2xl",
    "noPaddingOn_2xl": "pf-m-no-padding-on-2xl",
    "light_200": "pf-m-light-200"
  },
  "nav": "pf-c-nav",
  "notificationBadge": "pf-c-notification-badge",
  "page": "pf-c-page",
  "pageDrawer": "pf-c-page__drawer",
  "pageHeader": "pf-c-page__header",
  "pageHeaderBrand": "pf-c-page__header-brand",
  "pageHeaderBrandLink": "pf-c-page__header-brand-link",
  "pageHeaderBrandToggle": "pf-c-page__header-brand-toggle",
  "pageHeaderNav": "pf-c-page__header-nav",
  "pageHeaderTools": "pf-c-page__header-tools",
  "pageHeaderToolsGroup": "pf-c-page__header-tools-group",
  "pageHeaderToolsItem": "pf-c-page__header-tools-item",
  "pageMain": "pf-c-page__main",
  "pageMainBody": "pf-c-page__main-body",
  "pageMainBreadcrumb": "pf-c-page__main-breadcrumb",
  "pageMainDrawer": "pf-c-page__main-drawer",
  "pageMainGroup": "pf-c-page__main-group",
  "pageMainNav": "pf-c-page__main-nav",
  "pageMainSection": "pf-c-page__main-section",
  "pageMainSubnav": "pf-c-page__main-subnav",
  "pageMainTabs": "pf-c-page__main-tabs",
  "pageMainWizard": "pf-c-page__main-wizard",
  "pageSidebar": "pf-c-page__sidebar",
  "pageSidebarBody": "pf-c-page__sidebar-body",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageSidebar.js
var pageSidebarContextDefaults = {
  isNavOpen: true
};
var PageSidebarContext = React206.createContext(pageSidebarContextDefaults);
var PageSidebar = (_a) => {
  var { className = "", nav, isNavOpen = true, theme = "dark", id = "page-sidebar" } = _a, props = __rest(_a, ["className", "nav", "isNavOpen", "theme", "id"]);
  return React206.createElement(PageContextConsumer, null, ({ isManagedSidebar, isNavOpen: managedIsNavOpen }) => {
    const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;
    return React206.createElement(
      "div",
      Object.assign({ id, className: css(page_default.pageSidebar, theme === "light" && page_default.modifiers.light, navOpen && page_default.modifiers.expanded, !navOpen && page_default.modifiers.collapsed, className), "aria-hidden": !navOpen }, props),
      React206.createElement(
        "div",
        { className: css(page_default.pageSidebarBody) },
        React206.createElement(PageSidebarContext.Provider, { value: { isNavOpen: navOpen } }, nav)
      )
    );
  });
};
PageSidebar.displayName = "PageSidebar";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Nav/NavList.js
var NavList = class extends React207.Component {
  constructor() {
    super(...arguments);
    this.state = {
      scrollViewAtStart: false,
      scrollViewAtEnd: false
    };
    this.navList = React207.createRef();
    this.observer = () => {
    };
    this.handleScrollButtons = () => {
      const container = this.navList.current;
      if (container) {
        const scrollViewAtStart = isElementInView(container, container.firstChild, false);
        const scrollViewAtEnd = isElementInView(container, container.lastChild, false);
        this.setState({
          scrollViewAtStart,
          scrollViewAtEnd
        });
        this.context.updateIsScrollable(!scrollViewAtStart || !scrollViewAtEnd);
      }
    };
    this.scrollLeft = () => {
      const container = this.navList.current;
      if (container) {
        const childrenArr = Array.from(container.children);
        let firstElementInView;
        let lastElementOutOfView;
        for (let i = 0; i < childrenArr.length && !firstElementInView; i++) {
          if (isElementInView(container, childrenArr[i], false)) {
            firstElementInView = childrenArr[i];
            lastElementOutOfView = childrenArr[i - 1];
          }
        }
        if (lastElementOutOfView) {
          container.scrollLeft -= lastElementOutOfView.scrollWidth;
        }
        this.handleScrollButtons();
      }
    };
    this.scrollRight = () => {
      const container = this.navList.current;
      if (container) {
        const childrenArr = Array.from(container.children);
        let lastElementInView;
        let firstElementOutOfView;
        for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {
          if (isElementInView(container, childrenArr[i], false)) {
            lastElementInView = childrenArr[i];
            firstElementOutOfView = childrenArr[i + 1];
          }
        }
        if (firstElementOutOfView) {
          container.scrollLeft += firstElementOutOfView.scrollWidth;
        }
        this.handleScrollButtons();
      }
    };
  }
  componentDidMount() {
    this.observer = getResizeObserver(this.navList.current, this.handleScrollButtons);
    this.handleScrollButtons();
  }
  componentWillUnmount() {
    this.observer();
  }
  render() {
    const _a = this.props, { children, className, ariaLeftScroll, ariaRightScroll } = _a, props = __rest(_a, ["children", "className", "ariaLeftScroll", "ariaRightScroll"]);
    const { scrollViewAtStart, scrollViewAtEnd } = this.state;
    return React207.createElement(NavContext.Consumer, null, ({ isHorizontal }) => React207.createElement(PageSidebarContext.Consumer, null, ({ isNavOpen }) => React207.createElement(
      React207.Fragment,
      null,
      isHorizontal && React207.createElement(
        "button",
        { className: css(nav_default.navScrollButton), "aria-label": ariaLeftScroll, onClick: this.scrollLeft, disabled: scrollViewAtStart, tabIndex: isNavOpen ? null : -1 },
        React207.createElement(angle_left_icon_default, null)
      ),
      React207.createElement("ul", Object.assign({ ref: this.navList, className: css(nav_default.navList, className), onScroll: this.handleScrollButtons }, props), children),
      isHorizontal && React207.createElement(
        "button",
        { className: css(nav_default.navScrollButton), "aria-label": ariaRightScroll, onClick: this.scrollRight, disabled: scrollViewAtEnd, tabIndex: isNavOpen ? null : -1 },
        React207.createElement(angle_right_icon_default, null)
      )
    )));
  }
};
NavList.displayName = "NavList";
NavList.contextType = NavContext;
NavList.defaultProps = {
  ariaLeftScroll: "Scroll left",
  ariaRightScroll: "Scroll right"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Nav/NavGroup.js
var React208 = __toESM(require_react());
var NavGroup = (_a) => {
  var { title, children = null, className = "", id = getUniqueId() } = _a, props = __rest(_a, ["title", "children", "className", "id"]);
  if (!title && !props["aria-label"]) {
    console.warn("For accessibility reasons an aria-label should be specified on nav groups if a title isn't");
  }
  const labelledBy = title ? id : void 0;
  return React208.createElement(
    "section",
    Object.assign({ className: css(nav_default.navSection, className), "aria-labelledby": labelledBy }, props),
    title && React208.createElement("h2", { className: css(nav_default.navSectionTitle), id }, title),
    React208.createElement("ul", { className: css(nav_default.navList, className) }, children)
  );
};
NavGroup.displayName = "NavGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Nav/NavItem.js
var React209 = __toESM(require_react());
var NavItem = (_a) => {
  var { children, styleChildren = true, className, to, isActive = false, groupId = null, itemId = null, preventDefault = false, onClick = null, component = "a", flyout, onShowFlyout, ouiaId, ouiaSafe, removeFindDomNode = false, zIndex = 9999 } = _a, props = __rest(_a, ["children", "styleChildren", "className", "to", "isActive", "groupId", "itemId", "preventDefault", "onClick", "component", "flyout", "onShowFlyout", "ouiaId", "ouiaSafe", "removeFindDomNode", "zIndex"]);
  const { flyoutRef, setFlyoutRef } = React209.useContext(NavContext);
  const { isNavOpen } = React209.useContext(PageSidebarContext);
  const [flyoutTarget, setFlyoutTarget] = React209.useState(null);
  const [isHovered, setIsHovered] = React209.useState(false);
  const ref = React209.useRef();
  const flyoutVisible = ref === flyoutRef;
  const popperRef = React209.useRef();
  const hasFlyout = flyout !== void 0;
  const Component47 = hasFlyout ? "button" : component;
  if (to && hasFlyout) {
    console.error('NavItem cannot have both "to" and "flyout" props.');
  }
  const showFlyout = (show, override) => {
    if ((!flyoutVisible || override) && show) {
      setFlyoutRef(ref);
    } else if ((flyoutVisible || override) && !show) {
      setFlyoutRef(null);
    }
    onShowFlyout && show && onShowFlyout();
  };
  const onMouseOver = (event) => {
    const evtContainedInFlyout = event.target.closest(".pf-c-nav__item.pf-m-flyout");
    if (hasFlyout && !flyoutVisible) {
      showFlyout(true);
    } else if (flyoutRef !== null && !evtContainedInFlyout) {
      setFlyoutRef(null);
    }
  };
  const onFlyoutClick = (event) => {
    const target = event.target;
    const closestItem = target.closest(".pf-m-flyout");
    if (!closestItem) {
      if (hasFlyout) {
        showFlyout(false, true);
      } else if (flyoutRef !== null) {
        setFlyoutRef(null);
      }
    }
  };
  const handleFlyout = (event) => {
    var _a2, _b;
    const key = event.key;
    const target = event.target;
    if ((key === " " || key === "Enter" || key === "ArrowRight") && hasFlyout && ((_a2 = ref === null || ref === void 0 ? void 0 : ref.current) === null || _a2 === void 0 ? void 0 : _a2.contains(target))) {
      event.stopPropagation();
      event.preventDefault();
      if (!flyoutVisible) {
        showFlyout(true);
        setFlyoutTarget(target);
      }
    }
    if ((key === "Escape" || key === "ArrowLeft") && ((_b = popperRef === null || popperRef === void 0 ? void 0 : popperRef.current) === null || _b === void 0 ? void 0 : _b.querySelectorAll(".pf-c-menu").length) === 1) {
      if (flyoutVisible) {
        event.stopPropagation();
        event.preventDefault();
        showFlyout(false);
      }
    }
  };
  React209.useEffect(() => {
    if (hasFlyout) {
      window.addEventListener("click", onFlyoutClick);
    }
    return () => {
      if (hasFlyout) {
        window.removeEventListener("click", onFlyoutClick);
      }
    };
  }, []);
  React209.useEffect(() => {
    if (flyoutTarget) {
      if (flyoutVisible) {
        const flyoutItems = Array.from(popperRef.current.getElementsByTagName("UL")[0].children).filter((el) => !(el.classList.contains("pf-m-disabled") || el.classList.contains("pf-c-divider")));
        flyoutItems[0].firstChild.focus();
      } else {
        flyoutTarget.focus();
      }
    }
  }, [flyoutVisible, flyoutTarget]);
  const flyoutButton = React209.createElement(
    "span",
    { className: css(nav_default.navToggle) },
    React209.createElement(
      "span",
      { className: css(nav_default.navToggleIcon) },
      React209.createElement(angle_right_icon_default, { "aria-hidden": true })
    )
  );
  const ariaFlyoutProps = {
    "aria-haspopup": "menu",
    "aria-expanded": flyoutVisible
  };
  const tabIndex = isNavOpen ? null : -1;
  const renderDefaultLink = (context) => {
    const preventLinkDefault = preventDefault || !to;
    return React209.createElement(
      Component47,
      Object.assign({ href: to, onClick: (e) => context.onSelect(e, groupId, itemId, to, preventLinkDefault, onClick), className: css(nav_default.navLink, isActive && nav_default.modifiers.current, isHovered && nav_default.modifiers.hover, className), "aria-current": isActive ? "page" : null, tabIndex }, hasFlyout && Object.assign({}, ariaFlyoutProps), props),
      children,
      flyout && flyoutButton
    );
  };
  const renderClonedChild = (context, child) => React209.cloneElement(child, Object.assign(Object.assign({ onClick: (e) => context.onSelect(e, groupId, itemId, to, preventDefault, onClick), "aria-current": isActive ? "page" : null }, styleChildren && {
    className: css(nav_default.navLink, isActive && nav_default.modifiers.current, child.props && child.props.className)
  }), { tabIndex: child.props.tabIndex || tabIndex, children: hasFlyout ? React209.createElement(
    React209.Fragment,
    null,
    child.props.children,
    flyoutButton
  ) : child.props.children }));
  const ouiaProps = useOUIAProps(NavItem.displayName, ouiaId, ouiaSafe);
  const handleMouseEnter = () => {
    setIsHovered(true);
  };
  const handleMouseLeave = () => {
    setIsHovered(false);
  };
  const flyoutPopper = React209.createElement(Popper, { reference: ref, popper: React209.createElement("div", { ref: popperRef, onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave }, flyout), placement: "right-start", isVisible: flyoutVisible, onDocumentKeyDown: handleFlyout, removeFindDomNode, zIndex });
  const navItem = React209.createElement(
    React209.Fragment,
    null,
    React209.createElement(
      "li",
      Object.assign({ onMouseOver, className: css(nav_default.navItem, hasFlyout && nav_default.modifiers.flyout, className), ref }, ouiaProps),
      React209.createElement(NavContext.Consumer, null, (context) => React209.isValidElement(children) ? renderClonedChild(context, children) : renderDefaultLink(context))
    ),
    flyout && flyoutPopper
  );
  return navItem;
};
NavItem.displayName = "NavItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Nav/NavItemSeparator.js
var React210 = __toESM(require_react());
var NavItemSeparator = (_a) => {
  var { component = "li" } = _a, props = __rest(_a, ["component"]);
  return React210.createElement(Divider, Object.assign({ component }, props));
};
NavItemSeparator.displayName = "NavItemSeparator";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Nav/NavExpandable.js
var React211 = __toESM(require_react());
var NavExpandable = class _NavExpandable extends React211.Component {
  constructor() {
    super(...arguments);
    this.id = this.props.id || getUniqueId();
    this.state = {
      expandedState: this.props.isExpanded,
      ouiaStateId: getDefaultOUIAId(_NavExpandable.displayName)
    };
    this.onExpand = (e, onToggle) => {
      const { expandedState } = this.state;
      if (this.props.onExpand) {
        this.props.onExpand(e, !expandedState);
      } else {
        this.setState((prevState) => ({ expandedState: !prevState.expandedState }));
        const { groupId } = this.props;
        onToggle(e, groupId, !expandedState);
      }
    };
  }
  componentDidMount() {
    this.setState({ expandedState: this.props.isExpanded });
  }
  componentDidUpdate(prevProps) {
    if (this.props.isExpanded !== prevProps.isExpanded) {
      this.setState({ expandedState: this.props.isExpanded });
    }
  }
  render() {
    const _a = this.props, {
      title,
      srText,
      children,
      className,
      isActive,
      ouiaId,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      groupId,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      id,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      isExpanded,
      buttonProps,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onExpand
    } = _a, props = __rest(_a, ["title", "srText", "children", "className", "isActive", "ouiaId", "groupId", "id", "isExpanded", "buttonProps", "onExpand"]);
    const { expandedState, ouiaStateId } = this.state;
    return React211.createElement(NavContext.Consumer, null, (context) => React211.createElement(
      "li",
      Object.assign({ className: css(nav_default.navItem, nav_default.modifiers.expandable, expandedState && nav_default.modifiers.expanded, isActive && nav_default.modifiers.current, className) }, getOUIAProps(_NavExpandable.displayName, ouiaId !== void 0 ? ouiaId : ouiaStateId), props),
      React211.createElement(PageSidebarContext.Consumer, null, ({ isNavOpen }) => React211.createElement(
        "button",
        Object.assign({ className: nav_default.navLink, id: srText ? null : this.id, onClick: (e) => this.onExpand(e, context.onToggle), "aria-expanded": expandedState, tabIndex: isNavOpen ? null : -1 }, buttonProps),
        title,
        React211.createElement(
          "span",
          { className: css(nav_default.navToggle) },
          React211.createElement(
            "span",
            { className: css(nav_default.navToggleIcon) },
            React211.createElement(angle_right_icon_default, { "aria-hidden": "true" })
          )
        )
      )),
      React211.createElement(
        "section",
        { className: css(nav_default.navSubnav), "aria-labelledby": this.id, hidden: expandedState ? null : true },
        srText && React211.createElement("h2", { className: css(accessibility_default.screenReader), id: this.id }, srText),
        React211.createElement("ul", { className: css(nav_default.navList) }, children)
      )
    ));
  }
};
NavExpandable.displayName = "NavExpandable";
NavExpandable.defaultProps = {
  srText: "",
  isExpanded: false,
  children: "",
  className: "",
  groupId: null,
  isActive: false,
  id: ""
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationBadge/NotificationBadge.js
var React212 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/NotificationBadge/notification-badge.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/NotificationBadge/notification-badge.css";
var notification_badge_default = {
  "iconAttentionBell": "pf-icon-attention-bell",
  "iconBell": "pf-icon-bell",
  "modifiers": {
    "read": "pf-m-read",
    "unread": "pf-m-unread",
    "attention": "pf-m-attention",
    "expanded": "pf-m-expanded"
  },
  "notificationBadge": "pf-c-notification-badge",
  "notificationBadgeCount": "pf-c-notification-badge__count",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationBadge/NotificationBadge.js
var NotificationBadgeVariant;
(function(NotificationBadgeVariant2) {
  NotificationBadgeVariant2["read"] = "read";
  NotificationBadgeVariant2["unread"] = "unread";
  NotificationBadgeVariant2["attention"] = "attention";
})(NotificationBadgeVariant || (NotificationBadgeVariant = {}));
var NotificationBadge = (_a) => {
  var { isRead, children, variant = isRead ? "read" : "unread", count = 0, attentionIcon = React212.createElement(attention_bell_icon_default, null), icon = React212.createElement(bell_icon_default, null), className, isExpanded = false } = _a, props = __rest(_a, ["isRead", "children", "variant", "count", "attentionIcon", "icon", "className", "isExpanded"]);
  let notificationChild = icon;
  if (children !== void 0) {
    notificationChild = children;
  } else if (variant === NotificationBadgeVariant.attention) {
    notificationChild = attentionIcon;
  }
  return React212.createElement(
    Button,
    Object.assign({ variant: ButtonVariant.plain, className, "aria-expanded": isExpanded }, props),
    React212.createElement(
      "span",
      { className: css(notification_badge_default.notificationBadge, notification_badge_default.modifiers[variant], isExpanded && notification_badge_default.modifiers.expanded) },
      notificationChild,
      count > 0 && React212.createElement("span", { className: css(notification_badge_default.notificationBadgeCount) }, count)
    )
  );
};
NotificationBadge.displayName = "NotificationBadge";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawer.js
var React213 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/NotificationDrawer/notification-drawer.css";
var notification_drawer_default = {
  "modifiers": {
    "read": "pf-m-read",
    "info": "pf-m-info",
    "warning": "pf-m-warning",
    "danger": "pf-m-danger",
    "success": "pf-m-success",
    "default": "pf-m-default",
    "hoverable": "pf-m-hoverable",
    "truncate": "pf-m-truncate",
    "expanded": "pf-m-expanded"
  },
  "notificationDrawer": "pf-c-notification-drawer",
  "notificationDrawerBody": "pf-c-notification-drawer__body",
  "notificationDrawerGroup": "pf-c-notification-drawer__group",
  "notificationDrawerGroupList": "pf-c-notification-drawer__group-list",
  "notificationDrawerGroupToggle": "pf-c-notification-drawer__group-toggle",
  "notificationDrawerGroupToggleCount": "pf-c-notification-drawer__group-toggle-count",
  "notificationDrawerGroupToggleIcon": "pf-c-notification-drawer__group-toggle-icon",
  "notificationDrawerGroupToggleTitle": "pf-c-notification-drawer__group-toggle-title",
  "notificationDrawerHeader": "pf-c-notification-drawer__header",
  "notificationDrawerHeaderAction": "pf-c-notification-drawer__header-action",
  "notificationDrawerHeaderStatus": "pf-c-notification-drawer__header-status",
  "notificationDrawerHeaderTitle": "pf-c-notification-drawer__header-title",
  "notificationDrawerListItem": "pf-c-notification-drawer__list-item",
  "notificationDrawerListItemAction": "pf-c-notification-drawer__list-item-action",
  "notificationDrawerListItemDescription": "pf-c-notification-drawer__list-item-description",
  "notificationDrawerListItemHeader": "pf-c-notification-drawer__list-item-header",
  "notificationDrawerListItemHeaderIcon": "pf-c-notification-drawer__list-item-header-icon",
  "notificationDrawerListItemHeaderTitle": "pf-c-notification-drawer__list-item-header-title",
  "notificationDrawerListItemTimestamp": "pf-c-notification-drawer__list-item-timestamp",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawer.js
var NotificationDrawerBase = (_a) => {
  var { children, className = "", innerRef } = _a, props = __rest(_a, ["children", "className", "innerRef"]);
  return React213.createElement("div", Object.assign({ ref: innerRef }, props, { className: css(notification_drawer_default.notificationDrawer, className) }), children);
};
var NotificationDrawer = React213.forwardRef((props, ref) => React213.createElement(NotificationDrawerBase, Object.assign({ innerRef: ref }, props)));
NotificationDrawer.displayName = "NotificationDrawer";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerBody.js
var React214 = __toESM(require_react());
var NotificationDrawerBody = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React214.createElement("div", Object.assign({}, props, { className: css(notification_drawer_default.notificationDrawerBody, className) }), children);
};
NotificationDrawerBody.displayName = "NotificationDrawerBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerGroup.js
var React215 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_notification_drawer__group_toggle_title_max_lines.js
var c_notification_drawer__group_toggle_title_max_lines = {
  "name": "--pf-c-notification-drawer__group-toggle-title--max-lines",
  "value": "1",
  "var": "var(--pf-c-notification-drawer__group-toggle-title--max-lines)"
};
var c_notification_drawer_group_toggle_title_max_lines_default = c_notification_drawer__group_toggle_title_max_lines;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerGroup.js
var NotificationDrawerGroup = (_a) => {
  var {
    children,
    className = "",
    count,
    isExpanded,
    isRead = false,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    onExpand = (event, expanded) => void 0,
    title,
    truncateTitle = 0,
    tooltipPosition,
    headingLevel: HeadingLevel = "h1"
  } = _a, props = __rest(_a, ["children", "className", "count", "isExpanded", "isRead", "onExpand", "title", "truncateTitle", "tooltipPosition", "headingLevel"]);
  const titleRef = React215.useRef(null);
  const [isTooltipVisible, setIsTooltipVisible] = React215.useState(false);
  React215.useEffect(() => {
    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;
    if (isTooltipVisible !== showTooltip) {
      setIsTooltipVisible(showTooltip);
    }
    if (!titleRef.current || !truncateTitle) {
      return;
    }
    titleRef.current.style.setProperty(c_notification_drawer_group_toggle_title_max_lines_default.name, truncateTitle.toString());
  }, [titleRef, truncateTitle, isTooltipVisible]);
  const Title2 = React215.createElement("div", Object.assign({}, isTooltipVisible && { tabIndex: 0 }, { ref: titleRef, className: css(notification_drawer_default.notificationDrawerGroupToggleTitle) }), title);
  return React215.createElement(
    "section",
    Object.assign({}, props, { className: css(notification_drawer_default.notificationDrawerGroup, isExpanded && notification_drawer_default.modifiers.expanded, className) }),
    React215.createElement(
      HeadingLevel,
      null,
      React215.createElement(
        "button",
        { className: css(notification_drawer_default.notificationDrawerGroupToggle), "aria-expanded": isExpanded, onClick: (e) => onExpand(e, !isExpanded), onKeyDown: (e) => {
          if (e.key === "Enter" || e.key === " ") {
            e.preventDefault();
            onExpand(e, !isExpanded);
          }
        } },
        isTooltipVisible ? React215.createElement(Tooltip, { content: title, position: tooltipPosition }, Title2) : Title2,
        React215.createElement(
          "div",
          { className: css(notification_drawer_default.notificationDrawerGroupToggleCount) },
          React215.createElement(Badge, { isRead }, count)
        ),
        React215.createElement(
          "span",
          { className: "pf-c-notification-drawer__group-toggle-icon" },
          React215.createElement(angle_right_icon_default, null)
        )
      )
    ),
    children
  );
};
NotificationDrawerGroup.displayName = "NotificationDrawerGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerGroupList.js
var React216 = __toESM(require_react());
var NotificationDrawerGroupList = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React216.createElement("div", Object.assign({}, props, { className: css(notification_drawer_default.notificationDrawerGroupList, className) }), children);
};
NotificationDrawerGroupList.displayName = "NotificationDrawerGroupList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerHeader.js
var React221 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js
var React217 = __toESM(require_react());
var TextContent = (_a) => {
  var { children, className = "", isVisited = false } = _a, props = __rest(_a, ["children", "className", "isVisited"]);
  return React217.createElement("div", Object.assign({}, props, { className: css(content_default.content, isVisited && content_default.modifiers.visited, className) }), children);
};
TextContent.displayName = "TextContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Text/Text.js
var React218 = __toESM(require_react());
var TextVariants;
(function(TextVariants2) {
  TextVariants2["h1"] = "h1";
  TextVariants2["h2"] = "h2";
  TextVariants2["h3"] = "h3";
  TextVariants2["h4"] = "h4";
  TextVariants2["h5"] = "h5";
  TextVariants2["h6"] = "h6";
  TextVariants2["p"] = "p";
  TextVariants2["a"] = "a";
  TextVariants2["small"] = "small";
  TextVariants2["blockquote"] = "blockquote";
  TextVariants2["pre"] = "pre";
})(TextVariants || (TextVariants = {}));
var Text = (_a) => {
  var { children = null, className = "", component = TextVariants.p, isVisitedLink = false, ouiaId, ouiaSafe = true } = _a, props = __rest(_a, ["children", "className", "component", "isVisitedLink", "ouiaId", "ouiaSafe"]);
  const Component47 = component;
  const ouiaProps = useOUIAProps(Text.displayName, ouiaId, ouiaSafe);
  return React218.createElement(Component47, Object.assign({}, ouiaProps, props, { "data-pf-content": true, className: css(isVisitedLink && component === TextVariants.a && content_default.modifiers.visited, className) }), children);
};
Text.displayName = "Text";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Text/TextList.js
var React219 = __toESM(require_react());
var TextListVariants;
(function(TextListVariants2) {
  TextListVariants2["ul"] = "ul";
  TextListVariants2["ol"] = "ol";
  TextListVariants2["dl"] = "dl";
})(TextListVariants || (TextListVariants = {}));
var TextList = (_a) => {
  var { children = null, className = "", component = TextListVariants.ul, isPlain = false } = _a, props = __rest(_a, ["children", "className", "component", "isPlain"]);
  const Component47 = component;
  return React219.createElement(Component47, Object.assign({}, props, { className: css(isPlain && content_default.modifiers.plain, className) }), children);
};
TextList.displayName = "TextList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Text/TextListItem.js
var React220 = __toESM(require_react());
var TextListItemVariants;
(function(TextListItemVariants2) {
  TextListItemVariants2["li"] = "li";
  TextListItemVariants2["dt"] = "dt";
  TextListItemVariants2["dd"] = "dd";
})(TextListItemVariants || (TextListItemVariants = {}));
var TextListItem = (_a) => {
  var { children = null, className = "", component = TextListItemVariants.li } = _a, props = __rest(_a, ["children", "className", "component"]);
  const Component47 = component;
  return React220.createElement(Component47, Object.assign({}, props, { className: css(className) }), children);
};
TextListItem.displayName = "TextListItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerHeader.js
var NotificationDrawerHeader = (_a) => {
  var { children, className = "", count, closeButtonAriaLabel = "Close", customText, onClose, title = "Notifications", unreadText = "unread" } = _a, props = __rest(_a, ["children", "className", "count", "closeButtonAriaLabel", "customText", "onClose", "title", "unreadText"]);
  return React221.createElement(
    "div",
    Object.assign({}, props, { className: css(notification_drawer_default.notificationDrawerHeader, className) }),
    React221.createElement(Text, { component: TextVariants.h1, className: css(notification_drawer_default.notificationDrawerHeaderTitle) }, title),
    (customText !== void 0 || count !== void 0) && React221.createElement("span", { className: css(notification_drawer_default.notificationDrawerHeaderStatus) }, customText || `${count} ${unreadText}`),
    (children || onClose) && React221.createElement(
      "div",
      { className: css(notification_drawer_default.notificationDrawerHeaderAction) },
      children,
      onClose && React221.createElement(
        "div",
        null,
        React221.createElement(
          Button,
          { variant: ButtonVariant.plain, "aria-label": closeButtonAriaLabel, onClick: onClose },
          React221.createElement(times_icon_default, { "aria-hidden": "true" })
        )
      )
    )
  );
};
NotificationDrawerHeader.displayName = "NotificationDrawerHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerList.js
var React222 = __toESM(require_react());
var NotificationDrawerList = (_a) => {
  var { children, className = "", isHidden = false } = _a, props = __rest(_a, ["children", "className", "isHidden"]);
  return React222.createElement("ul", Object.assign({}, props, { className: css("pf-c-notification-drawer__list", className), hidden: isHidden }), children);
};
NotificationDrawerList.displayName = "NotificationDrawerList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerListItem.js
var React223 = __toESM(require_react());
var NotificationDrawerListItem = (_a) => {
  var {
    children = null,
    className = "",
    isHoverable = true,
    isRead = false,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    onClick = (event) => void 0,
    tabIndex = 0,
    variant = "default"
  } = _a, props = __rest(_a, ["children", "className", "isHoverable", "isRead", "onClick", "tabIndex", "variant"]);
  const onKeyDown = (event) => {
    if (event.key === "Enter" || event.key === " ") {
      event.target.click();
    }
  };
  return React223.createElement("li", Object.assign({}, props, { className: css(notification_drawer_default.notificationDrawerListItem, isHoverable && notification_drawer_default.modifiers.hoverable, notification_drawer_default.modifiers[variant], isRead && notification_drawer_default.modifiers.read, className), tabIndex, onClick: (e) => onClick(e), onKeyDown }), children);
};
NotificationDrawerListItem.displayName = "NotificationDrawerListItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerListItemBody.js
var React224 = __toESM(require_react());
var NotificationDrawerListItemBody = (_a) => {
  var { children, className = "", timestamp } = _a, props = __rest(_a, ["children", "className", "timestamp"]);
  return React224.createElement(
    React224.Fragment,
    null,
    React224.createElement("div", Object.assign({}, props, { className: css(notification_drawer_default.notificationDrawerListItemDescription, className) }), children),
    timestamp && React224.createElement("div", { className: css(notification_drawer_default.notificationDrawerListItemTimestamp, className) }, timestamp)
  );
};
NotificationDrawerListItemBody.displayName = "NotificationDrawerListItemBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerListItemHeader.js
var React225 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_notification_drawer__list_item_header_title_max_lines.js
var c_notification_drawer__list_item_header_title_max_lines = {
  "name": "--pf-c-notification-drawer__list-item-header-title--max-lines",
  "value": "1",
  "var": "var(--pf-c-notification-drawer__list-item-header-title--max-lines)"
};
var c_notification_drawer_list_item_header_title_max_lines_default = c_notification_drawer__list_item_header_title_max_lines;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NotificationDrawer/NotificationDrawerListItemHeader.js
var variantIcons2 = {
  success: check_circle_icon_default,
  danger: exclamation_circle_icon_default,
  warning: exclamation_triangle_icon_default,
  info: info_circle_icon_default,
  default: bell_icon_default
};
var NotificationDrawerListItemHeader = (_a) => {
  var { children, className = "", icon = null, srTitle, title, variant = "default", truncateTitle = 0, tooltipPosition, headingLevel: HeadingLevel = "h2" } = _a, props = __rest(_a, ["children", "className", "icon", "srTitle", "title", "variant", "truncateTitle", "tooltipPosition", "headingLevel"]);
  const titleRef = React225.useRef(null);
  const [isTooltipVisible, setIsTooltipVisible] = React225.useState(false);
  React225.useEffect(() => {
    if (!titleRef.current || !truncateTitle) {
      return;
    }
    titleRef.current.style.setProperty(c_notification_drawer_list_item_header_title_max_lines_default.name, truncateTitle.toString());
    const showTooltip = titleRef.current && titleRef.current.offsetHeight < titleRef.current.scrollHeight;
    if (isTooltipVisible !== showTooltip) {
      setIsTooltipVisible(showTooltip);
    }
  }, [titleRef, truncateTitle, isTooltipVisible]);
  const Icon2 = variantIcons2[variant];
  const Title2 = React225.createElement(
    HeadingLevel,
    Object.assign({}, isTooltipVisible && { tabIndex: 0 }, { ref: titleRef, className: css(notification_drawer_default.notificationDrawerListItemHeaderTitle, truncateTitle && notification_drawer_default.modifiers.truncate) }),
    srTitle && React225.createElement("span", { className: css(accessibility_default.screenReader) }, srTitle),
    title
  );
  return React225.createElement(
    React225.Fragment,
    null,
    React225.createElement(
      "div",
      Object.assign({}, props, { className: css(notification_drawer_default.notificationDrawerListItemHeader, className) }),
      React225.createElement("span", { className: css(notification_drawer_default.notificationDrawerListItemHeaderIcon) }, icon ? icon : React225.createElement(Icon2, null)),
      isTooltipVisible ? React225.createElement(Tooltip, { content: title, position: tooltipPosition }, Title2) : Title2
    ),
    children && React225.createElement("div", { className: css(notification_drawer_default.notificationDrawerListItemAction) }, children)
  );
};
NotificationDrawerListItemHeader.displayName = "NotificationDrawerListItemHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OptionsMenu/OptionsMenu.js
var React226 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/OptionsMenu/options-menu.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/OptionsMenu/options-menu.css";
var options_menu_default = {
  "divider": "pf-c-divider",
  "modifiers": {
    "plain": "pf-m-plain",
    "text": "pf-m-text",
    "active": "pf-m-active",
    "expanded": "pf-m-expanded",
    "disabled": "pf-m-disabled",
    "top": "pf-m-top",
    "alignRight": "pf-m-align-right",
    "static": "pf-m-static"
  },
  "optionsMenu": "pf-c-options-menu",
  "optionsMenuGroup": "pf-c-options-menu__group",
  "optionsMenuGroupTitle": "pf-c-options-menu__group-title",
  "optionsMenuMenu": "pf-c-options-menu__menu",
  "optionsMenuMenuItem": "pf-c-options-menu__menu-item",
  "optionsMenuMenuItemIcon": "pf-c-options-menu__menu-item-icon",
  "optionsMenuToggle": "pf-c-options-menu__toggle",
  "optionsMenuToggleButton": "pf-c-options-menu__toggle-button",
  "optionsMenuToggleButtonIcon": "pf-c-options-menu__toggle-button-icon",
  "optionsMenuToggleIcon": "pf-c-options-menu__toggle-icon",
  "optionsMenuToggleText": "pf-c-options-menu__toggle-text",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OptionsMenu/OptionsMenu.js
var OptionsMenuPosition;
(function(OptionsMenuPosition2) {
  OptionsMenuPosition2["right"] = "right";
  OptionsMenuPosition2["left"] = "left";
})(OptionsMenuPosition || (OptionsMenuPosition = {}));
var OptionsMenuDirection;
(function(OptionsMenuDirection2) {
  OptionsMenuDirection2["up"] = "up";
  OptionsMenuDirection2["down"] = "down";
})(OptionsMenuDirection || (OptionsMenuDirection = {}));
var OptionsMenu = (_a) => {
  var {
    className = "",
    menuItems,
    toggle,
    isText = false,
    isGrouped = false,
    id,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref,
    menuAppendTo = "inline",
    ouiaId,
    ouiaSafe = true,
    removeFindDomNode = false,
    zIndex = 9999
  } = _a, props = __rest(_a, ["className", "menuItems", "toggle", "isText", "isGrouped", "id", "ref", "menuAppendTo", "ouiaId", "ouiaSafe", "removeFindDomNode", "zIndex"]);
  return React226.createElement(
    DropdownContext.Provider,
    { value: {
      id,
      onSelect: () => void 0,
      toggleIndicatorClass: options_menu_default.optionsMenuToggleIcon,
      toggleTextClass: options_menu_default.optionsMenuToggleText,
      menuClass: options_menu_default.optionsMenuMenu,
      itemClass: options_menu_default.optionsMenuMenuItem,
      toggleClass: isText ? options_menu_default.optionsMenuToggleButton : options_menu_default.optionsMenuToggle,
      baseClass: options_menu_default.optionsMenu,
      disabledClass: options_menu_default.modifiers.disabled,
      menuComponent: isGrouped ? "div" : "ul",
      baseComponent: "div",
      ouiaId: useOUIAId(OptionsMenu.displayName, ouiaId),
      ouiaSafe,
      ouiaComponentType: OptionsMenu.displayName
    } },
    React226.createElement(DropdownWithContext, Object.assign({ id, dropdownItems: menuItems, className, isGrouped, toggle, menuAppendTo, removeFindDomNode, zIndex }, props))
  );
};
OptionsMenu.displayName = "OptionsMenu";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OptionsMenu/OptionsMenuToggle.js
var React227 = __toESM(require_react());
var OptionsMenuToggle = (_a) => {
  var {
    isPlain = false,
    isDisabled = false,
    isOpen = false,
    parentId = "",
    toggleTemplate = React227.createElement(React227.Fragment, null),
    hideCaret = false,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isActive = false,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isSplitButton = false,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    type,
    "aria-label": ariaLabel = "Options menu"
  } = _a, props = __rest(_a, ["isPlain", "isDisabled", "isOpen", "parentId", "toggleTemplate", "hideCaret", "isActive", "isSplitButton", "type", "aria-label"]);
  return React227.createElement(DropdownContext.Consumer, null, ({ id: contextId }) => React227.createElement(DropdownToggle, Object.assign({}, (isPlain || hideCaret) && { toggleIndicator: null }, props, { isPlain, isOpen, isDisabled, isActive, id: parentId ? `${parentId}-toggle` : `${contextId}-toggle`, "aria-haspopup": "listbox", "aria-label": ariaLabel, "aria-expanded": isOpen }, toggleTemplate ? { children: toggleTemplate } : {})));
};
OptionsMenuToggle.displayName = "OptionsMenuToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OptionsMenu/OptionsMenuItemGroup.js
var React228 = __toESM(require_react());
var OptionsMenuItemGroup = (_a) => {
  var { className = "", "aria-label": ariaLabel = "", groupTitle = "", children = null, hasSeparator = false } = _a, props = __rest(_a, ["className", "aria-label", "groupTitle", "children", "hasSeparator"]);
  return React228.createElement(
    "section",
    Object.assign({}, props, { className: css(options_menu_default.optionsMenuGroup), role: "none" }),
    groupTitle && React228.createElement("h1", { className: css(options_menu_default.optionsMenuGroupTitle) }, groupTitle),
    React228.createElement(
      "ul",
      { className, "aria-label": ariaLabel, role: "group" },
      children,
      hasSeparator && React228.createElement(Divider, { component: "li", role: "separator" })
    )
  );
};
OptionsMenuItemGroup.displayName = "OptionsMenuItemGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OptionsMenu/OptionsMenuItem.js
var React229 = __toESM(require_react());
var OptionsMenuItem = (_a) => {
  var { children = null, isSelected = false, onSelect = () => null, id = "", isDisabled } = _a, props = __rest(_a, ["children", "isSelected", "onSelect", "id", "isDisabled"]);
  return React229.createElement(
    DropdownItem,
    Object.assign({ id, component: "button", isDisabled, onClick: (event) => onSelect(event) }, isDisabled && { "aria-disabled": true }, props),
    children,
    isSelected && React229.createElement(
      "span",
      { className: css(options_menu_default.optionsMenuMenuItemIcon) },
      React229.createElement(check_icon_default, { "aria-hidden": isSelected })
    )
  );
};
OptionsMenuItem.displayName = "OptionsMenuItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OptionsMenu/OptionsMenuSeparator.js
var React230 = __toESM(require_react());
var OptionsMenuSeparator = (_a) => {
  var { component = "li" } = _a, props = __rest(_a, ["component"]);
  return React230.createElement(Divider, Object.assign({ component }, props));
};
OptionsMenuSeparator.displayName = "OptionsMenuSeparator";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OptionsMenu/OptionsMenuToggleWithText.js
var React231 = __toESM(require_react());
var OptionsMenuToggleWithText = (_a) => {
  var {
    parentId = "",
    toggleText,
    toggleTextClassName = "",
    toggleButtonContents,
    toggleButtonContentsClassName = "",
    onToggle = () => null,
    isOpen = false,
    isPlain = false,
    /* eslint-disable @typescript-eslint/no-unused-vars */
    isText = true,
    isDisabled = false,
    /* eslint-disable @typescript-eslint/no-unused-vars */
    isActive = false,
    "aria-haspopup": ariaHasPopup,
    parentRef,
    /* eslint-disable @typescript-eslint/no-unused-vars */
    getMenuRef,
    onEnter,
    /* eslint-enable @typescript-eslint/no-unused-vars */
    "aria-label": ariaLabel = "Options menu"
  } = _a, props = __rest(_a, ["parentId", "toggleText", "toggleTextClassName", "toggleButtonContents", "toggleButtonContentsClassName", "onToggle", "isOpen", "isPlain", "isText", "isDisabled", "isActive", "aria-haspopup", "parentRef", "getMenuRef", "onEnter", "aria-label"]);
  const buttonRef = React231.useRef();
  React231.useEffect(() => {
    document.addEventListener("mousedown", onDocClick);
    document.addEventListener("touchstart", onDocClick);
    document.addEventListener("keydown", onEscPress);
    return () => {
      document.removeEventListener("mousedown", onDocClick);
      document.removeEventListener("touchstart", onDocClick);
      document.removeEventListener("keydown", onEscPress);
    };
  });
  const onDocClick = (event) => {
    if (isOpen && parentRef && parentRef.current && !parentRef.current.contains(event.target)) {
      onToggle(false);
      buttonRef.current.focus();
    }
  };
  const onKeyDown = (event) => {
    if (event.key === "Tab" && !isOpen) {
      return;
    }
    event.preventDefault();
    if ((event.key === "Enter" || event.key === " ") && isOpen) {
      onToggle(!isOpen);
    } else if ((event.key === "Enter" || event.key === " ") && !isOpen) {
      onToggle(!isOpen);
      onEnter(event);
    }
  };
  const onEscPress = (event) => {
    if (isOpen && (event.key === KeyTypes.Escape || event.key === "Tab") && parentRef && parentRef.current && parentRef.current.contains(event.target)) {
      onToggle(false);
      buttonRef.current.focus();
    }
  };
  return React231.createElement(DropdownContext.Consumer, null, ({ id: contextId }) => React231.createElement(
    "div",
    Object.assign({ className: css(options_menu_default.optionsMenuToggle, options_menu_default.modifiers.text, isPlain && options_menu_default.modifiers.plain, isDisabled && options_menu_default.modifiers.disabled, isActive && options_menu_default.modifiers.active) }, props),
    React231.createElement("span", { className: css(options_menu_default.optionsMenuToggleText, toggleTextClassName) }, toggleText),
    React231.createElement(
      "button",
      { className: css(options_menu_default.optionsMenuToggleButton, toggleButtonContentsClassName), id: parentId ? `${parentId}-toggle` : `${contextId}-toggle`, "aria-haspopup": "listbox", "aria-label": ariaLabel, "aria-expanded": isOpen, ref: buttonRef, disabled: isDisabled, onClick: () => onToggle(!isOpen), onKeyDown },
      React231.createElement("span", { className: css(options_menu_default.optionsMenuToggleButtonIcon) }, toggleButtonContents)
    )
  ));
};
OptionsMenuToggleWithText.displayName = "OptionsMenuToggleWithText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OverflowMenu/OverflowMenu.js
var React233 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/OverflowMenu/overflow-menu.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/OverflowMenu/overflow-menu.css";
var overflow_menu_default = {
  "divider": "pf-c-divider",
  "modifiers": {
    "buttonGroup": "pf-m-button-group",
    "iconButtonGroup": "pf-m-icon-button-group",
    "vertical": "pf-m-vertical"
  },
  "overflowMenu": "pf-c-overflow-menu",
  "overflowMenuContent": "pf-c-overflow-menu__content",
  "overflowMenuControl": "pf-c-overflow-menu__control",
  "overflowMenuGroup": "pf-c-overflow-menu__group",
  "overflowMenuItem": "pf-c-overflow-menu__item"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OverflowMenu/OverflowMenuContext.js
var React232 = __toESM(require_react());
var OverflowMenuContext = React232.createContext({
  isBelowBreakpoint: false
});

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OverflowMenu/OverflowMenu.js
var OverflowMenu = class extends React233.Component {
  constructor(props) {
    super(props);
    this.observer = () => {
    };
    this.handleResize = () => {
      const breakpointWidth = globalWidthBreakpoints[this.props.breakpoint];
      if (!breakpointWidth) {
        console.error("OverflowMenu will not be visible without a valid breakpoint.");
        return;
      }
      const relativeWidth = this.state.breakpointRef ? this.state.breakpointRef.clientWidth : window.innerWidth;
      const isBelowBreakpoint = relativeWidth < breakpointWidth;
      if (this.state.isBelowBreakpoint !== isBelowBreakpoint) {
        this.setState({ isBelowBreakpoint });
      }
    };
    this.handleResizeWithDelay = debounce(this.handleResize, 250);
    this.state = {
      isBelowBreakpoint: false,
      breakpointRef: void 0
    };
  }
  getBreakpointRef() {
    const { breakpointReference } = this.props;
    if (breakpointReference.current) {
      return breakpointReference.current;
    } else if (typeof breakpointReference === "function") {
      return breakpointReference();
    }
  }
  componentDidMount() {
    const reference = this.props.breakpointReference ? this.getBreakpointRef() : void 0;
    this.setState({ breakpointRef: reference });
    this.observer = getResizeObserver(reference, this.handleResizeWithDelay);
    this.handleResize();
  }
  componentDidUpdate(prevProps, prevState) {
    const reference = this.props.breakpointReference ? this.getBreakpointRef() : void 0;
    if (prevState.breakpointRef !== reference) {
      this.observer();
      this.setState({ breakpointRef: reference });
      this.observer = getResizeObserver(reference, this.handleResizeWithDelay);
      this.handleResize();
    }
  }
  componentWillUnmount() {
    this.observer();
  }
  render() {
    const _a = this.props, { className, breakpoint, children, breakpointReference } = _a, props = __rest(_a, ["className", "breakpoint", "children", "breakpointReference"]);
    return React233.createElement(
      "div",
      Object.assign({}, props, { className: css(overflow_menu_default.overflowMenu, className) }),
      React233.createElement(OverflowMenuContext.Provider, { value: { isBelowBreakpoint: this.state.isBelowBreakpoint } }, children)
    );
  }
};
OverflowMenu.displayName = "OverflowMenu";
OverflowMenu.contextType = OverflowMenuContext;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OverflowMenu/OverflowMenuControl.js
var React234 = __toESM(require_react());
var OverflowMenuControl = (_a) => {
  var { className, children, hasAdditionalOptions } = _a, props = __rest(_a, ["className", "children", "hasAdditionalOptions"]);
  return React234.createElement(OverflowMenuContext.Consumer, null, (value) => (value.isBelowBreakpoint || hasAdditionalOptions) && React234.createElement(
    "div",
    Object.assign({ className: css(overflow_menu_default.overflowMenuControl, className) }, props),
    " ",
    children,
    " "
  ));
};
OverflowMenuControl.displayName = "OverflowMenuControl";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OverflowMenu/OverflowMenuContent.js
var React235 = __toESM(require_react());
var OverflowMenuContent = ({ className, children, isPersistent }) => React235.createElement(OverflowMenuContext.Consumer, null, (value) => (!value.isBelowBreakpoint || isPersistent) && React235.createElement("div", { className: css(overflow_menu_default.overflowMenuContent, className) }, children));
OverflowMenuContent.displayName = "OverflowMenuContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OverflowMenu/OverflowMenuGroup.js
var React236 = __toESM(require_react());
var OverflowMenuGroup = (_a) => {
  var { className, children, isPersistent = false, groupType } = _a, props = __rest(_a, ["className", "children", "isPersistent", "groupType"]);
  return React236.createElement(OverflowMenuContext.Consumer, null, (value) => (isPersistent || !value.isBelowBreakpoint) && React236.createElement("div", Object.assign({ className: css(overflow_menu_default.overflowMenuGroup, groupType === "button" && overflow_menu_default.modifiers.buttonGroup, groupType === "icon" && overflow_menu_default.modifiers.iconButtonGroup, className) }, props), children));
};
OverflowMenuGroup.displayName = "OverflowMenuGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OverflowMenu/OverflowMenuItem.js
var React237 = __toESM(require_react());
var OverflowMenuItem = ({ className, children, isPersistent = false }) => React237.createElement(OverflowMenuContext.Consumer, null, (value) => (isPersistent || !value.isBelowBreakpoint) && React237.createElement(
  "div",
  { className: css(overflow_menu_default.overflowMenuItem, className) },
  " ",
  children,
  " "
));
OverflowMenuItem.displayName = "OverflowMenuItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/OverflowMenu/OverflowMenuDropdownItem.js
var React238 = __toESM(require_react());
var OverflowMenuDropdownItem = (_a) => {
  var { children, isShared = false, index } = _a, additionalProps = __rest(_a, ["children", "isShared", "index"]);
  return React238.createElement(OverflowMenuContext.Consumer, null, (value) => (!isShared || value.isBelowBreakpoint) && React238.createElement(DropdownItem, Object.assign({ component: "button", index }, additionalProps), children));
};
OverflowMenuDropdownItem.displayName = "OverflowMenuDropdownItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/Page.js
var React240 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageGroup.js
var React239 = __toESM(require_react());
var PageGroup = (_a) => {
  var { className = "", children, sticky, stickyOnBreakpoint, hasShadowTop = false, hasShadowBottom = false, hasOverflowScroll = false, "aria-label": ariaLabel } = _a, props = __rest(_a, ["className", "children", "sticky", "stickyOnBreakpoint", "hasShadowTop", "hasShadowBottom", "hasOverflowScroll", "aria-label"]);
  const { height, getVerticalBreakpoint: getVerticalBreakpoint2 } = React239.useContext(PageContext);
  React239.useEffect(() => {
    if (hasOverflowScroll && !ariaLabel) {
      console.warn("PageGroup: An accessible aria-label is required when hasOverflowScroll is set to true.");
    }
  }, [hasOverflowScroll, ariaLabel]);
  return React239.createElement("div", Object.assign({}, props, { className: css(page_default.pageMainGroup, formatBreakpointMods(stickyOnBreakpoint, page_default, "sticky-", getVerticalBreakpoint2(height), true), sticky === "top" && page_default.modifiers.stickyTop, sticky === "bottom" && page_default.modifiers.stickyBottom, hasShadowTop && page_default.modifiers.shadowTop, hasShadowBottom && page_default.modifiers.shadowBottom, hasOverflowScroll && page_default.modifiers.overflowScroll, className) }, hasOverflowScroll && { tabIndex: 0 }, { "aria-label": ariaLabel }), children);
};
PageGroup.displayName = "PageGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/Page.js
var PageLayouts;
(function(PageLayouts2) {
  PageLayouts2["vertical"] = "vertical";
  PageLayouts2["horizontal"] = "horizontal";
})(PageLayouts || (PageLayouts = {}));
var Page = class extends React240.Component {
  constructor(props) {
    super(props);
    this.mainRef = React240.createRef();
    this.pageRef = React240.createRef();
    this.observer = () => {
    };
    this.getWindowWidth = () => {
      if (canUseDOM) {
        return this.pageRef.current ? this.pageRef.current.clientWidth : window.innerWidth;
      } else {
        return 1200;
      }
    };
    this.isMobile = () => (
      // eslint-disable-next-line radix
      this.getWindowWidth() < Number.parseInt(global_breakpoint_xl_default.value, 10)
    );
    this.resize = () => {
      var _a;
      const { onPageResize } = this.props;
      const mobileView = this.isMobile();
      if (onPageResize) {
        onPageResize({ mobileView, windowSize: this.getWindowWidth() });
      }
      if (mobileView !== this.state.mobileView) {
        this.setState({ mobileView });
      }
      if ((_a = this.pageRef) === null || _a === void 0 ? void 0 : _a.current) {
        const currentWidth = this.pageRef.current.clientWidth;
        const currentHeight = this.pageRef.current.clientHeight;
        if (this.state.width !== currentWidth) {
          this.setState({ width: currentWidth });
        }
        if (this.state.height !== currentHeight) {
          this.setState({ height: currentHeight });
        }
      }
    };
    this.handleResize = debounce(this.resize, 250);
    this.handleMainClick = () => {
      if (this.isMobile() && this.state.mobileIsNavOpen && this.mainRef.current) {
        this.setState({ mobileIsNavOpen: false });
      }
    };
    this.onNavToggleMobile = () => {
      this.setState((prevState) => ({
        mobileIsNavOpen: !prevState.mobileIsNavOpen
      }));
    };
    this.onNavToggleDesktop = () => {
      this.setState((prevState) => ({
        desktopIsNavOpen: !prevState.desktopIsNavOpen
      }));
    };
    const { isManagedSidebar, defaultManagedSidebarIsOpen } = props;
    const managedSidebarOpen = !isManagedSidebar ? true : defaultManagedSidebarIsOpen;
    this.state = {
      desktopIsNavOpen: managedSidebarOpen,
      mobileIsNavOpen: false,
      mobileView: false,
      width: null,
      height: null
    };
  }
  componentDidMount() {
    const { isManagedSidebar, onPageResize } = this.props;
    if (isManagedSidebar || onPageResize) {
      this.observer = getResizeObserver(this.pageRef.current, this.handleResize);
      const currentRef = this.mainRef.current;
      if (currentRef) {
        currentRef.addEventListener("mousedown", this.handleMainClick);
        currentRef.addEventListener("touchstart", this.handleMainClick);
      }
      this.resize();
    }
  }
  componentWillUnmount() {
    const { isManagedSidebar, onPageResize } = this.props;
    if (isManagedSidebar || onPageResize) {
      this.observer();
      const currentRef = this.mainRef.current;
      if (currentRef) {
        currentRef.removeEventListener("mousedown", this.handleMainClick);
        currentRef.removeEventListener("touchstart", this.handleMainClick);
      }
    }
  }
  render() {
    const _a = this.props, {
      breadcrumb,
      isBreadcrumbWidthLimited,
      className,
      children,
      header,
      sidebar,
      notificationDrawer,
      isNotificationDrawerExpanded,
      onNotificationDrawerExpand,
      isTertiaryNavWidthLimited,
      skipToContent,
      role,
      mainContainerId,
      isManagedSidebar,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      defaultManagedSidebarIsOpen,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onPageResize,
      getBreakpoint: getBreakpoint2,
      getVerticalBreakpoint: getVerticalBreakpoint2,
      mainAriaLabel,
      mainTabIndex,
      tertiaryNav,
      isTertiaryNavGrouped,
      isBreadcrumbGrouped,
      additionalGroupedContent,
      groupProps,
      breadcrumbProps
    } = _a, rest = __rest(_a, ["breadcrumb", "isBreadcrumbWidthLimited", "className", "children", "header", "sidebar", "notificationDrawer", "isNotificationDrawerExpanded", "onNotificationDrawerExpand", "isTertiaryNavWidthLimited", "skipToContent", "role", "mainContainerId", "isManagedSidebar", "defaultManagedSidebarIsOpen", "onPageResize", "getBreakpoint", "getVerticalBreakpoint", "mainAriaLabel", "mainTabIndex", "tertiaryNav", "isTertiaryNavGrouped", "isBreadcrumbGrouped", "additionalGroupedContent", "groupProps", "breadcrumbProps"]);
    const { mobileView, mobileIsNavOpen, desktopIsNavOpen, width, height } = this.state;
    const context = {
      isManagedSidebar,
      onNavToggle: mobileView ? this.onNavToggleMobile : this.onNavToggleDesktop,
      isNavOpen: mobileView ? mobileIsNavOpen : desktopIsNavOpen,
      width,
      height,
      getBreakpoint: getBreakpoint2,
      getVerticalBreakpoint: getVerticalBreakpoint2
    };
    let nav = null;
    if (tertiaryNav && isTertiaryNavWidthLimited) {
      nav = React240.createElement(
        "div",
        { className: css(page_default.pageMainNav, page_default.modifiers.limitWidth) },
        React240.createElement("div", { className: css(page_default.pageMainBody) }, tertiaryNav)
      );
    } else if (tertiaryNav) {
      nav = React240.createElement("div", { className: css(page_default.pageMainNav) }, tertiaryNav);
    }
    const crumb = breadcrumb ? React240.createElement("section", { className: css(page_default.pageMainBreadcrumb, isBreadcrumbWidthLimited && page_default.modifiers.limitWidth, formatBreakpointMods(breadcrumbProps === null || breadcrumbProps === void 0 ? void 0 : breadcrumbProps.stickyOnBreakpoint, page_default, "sticky-", getVerticalBreakpoint2(height), true)) }, isBreadcrumbWidthLimited ? React240.createElement("div", { className: css(page_default.pageMainBody) }, breadcrumb) : breadcrumb) : null;
    const isGrouped = isTertiaryNavGrouped || isBreadcrumbGrouped || additionalGroupedContent;
    const group = isGrouped ? React240.createElement(
      PageGroup,
      Object.assign({}, groupProps),
      isTertiaryNavGrouped && nav,
      isBreadcrumbGrouped && crumb,
      additionalGroupedContent
    ) : null;
    const main = React240.createElement(
      "main",
      { ref: this.mainRef, role, id: mainContainerId, className: css(page_default.pageMain), tabIndex: mainTabIndex, "aria-label": mainAriaLabel },
      group,
      !isTertiaryNavGrouped && nav,
      !isBreadcrumbGrouped && crumb,
      children
    );
    const panelContent = React240.createElement(DrawerPanelContent, null, notificationDrawer);
    return React240.createElement(
      PageContextProvider,
      { value: context },
      React240.createElement(
        "div",
        Object.assign({ ref: this.pageRef }, rest, { className: css(page_default.page, width !== null && height !== null && "pf-m-resize-observer", width !== null && `pf-m-breakpoint-${getBreakpoint2(width)}`, height !== null && `pf-m-height-breakpoint-${getVerticalBreakpoint2(height)}`, className) }),
        skipToContent,
        header,
        sidebar,
        notificationDrawer && React240.createElement(
          "div",
          { className: css(page_default.pageDrawer) },
          React240.createElement(
            Drawer,
            { isExpanded: isNotificationDrawerExpanded, onExpand: onNotificationDrawerExpand },
            React240.createElement(
              DrawerContent,
              { panelContent },
              React240.createElement(DrawerContentBody, null, main)
            )
          )
        ),
        !notificationDrawer && main
      )
    );
  }
};
Page.displayName = "Page";
Page.defaultProps = {
  isManagedSidebar: false,
  isBreadcrumbWidthLimited: false,
  defaultManagedSidebarIsOpen: true,
  onPageResize: () => null,
  mainTabIndex: -1,
  isNotificationDrawerExpanded: false,
  onNotificationDrawerExpand: () => null,
  getBreakpoint,
  getVerticalBreakpoint
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageBreadcrumb.js
var React241 = __toESM(require_react());
var PageBreadcrumb = (_a) => {
  var { className = "", children, isWidthLimited, sticky, stickyOnBreakpoint, hasShadowTop = false, hasShadowBottom = false, hasOverflowScroll = false, "aria-label": ariaLabel } = _a, props = __rest(_a, ["className", "children", "isWidthLimited", "sticky", "stickyOnBreakpoint", "hasShadowTop", "hasShadowBottom", "hasOverflowScroll", "aria-label"]);
  const { height, getVerticalBreakpoint: getVerticalBreakpoint2 } = React241.useContext(PageContext);
  React241.useEffect(() => {
    if (hasOverflowScroll && !ariaLabel) {
      console.warn("PageBreadcrumb: An accessible aria-label is required when hasOverflowScroll is set to true.");
    }
  }, [hasOverflowScroll, ariaLabel]);
  return React241.createElement(
    "section",
    Object.assign({ className: css(page_default.pageMainBreadcrumb, formatBreakpointMods(stickyOnBreakpoint, page_default, "sticky-", getVerticalBreakpoint2(height), true), isWidthLimited && page_default.modifiers.limitWidth, sticky === "top" && page_default.modifiers.stickyTop, sticky === "bottom" && page_default.modifiers.stickyBottom, hasShadowTop && page_default.modifiers.shadowTop, hasShadowBottom && page_default.modifiers.shadowBottom, hasOverflowScroll && page_default.modifiers.overflowScroll, className) }, hasOverflowScroll && { tabIndex: 0 }, { "aria-label": ariaLabel }, props),
    isWidthLimited && React241.createElement("div", { className: css(page_default.pageMainBody) }, children),
    !isWidthLimited && children
  );
};
PageBreadcrumb.displayName = "PageBreadcrumb";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageHeader.js
var React242 = __toESM(require_react());
var PageHeader = (_a) => {
  var { className = "", logo = null, logoProps = null, logoComponent = "a", headerTools = null, topNav = null, isNavOpen = true, isManagedSidebar: deprecatedIsManagedSidebar = void 0, role = void 0, showNavToggle = false, navToggleId = "nav-toggle", onNavToggle = () => void 0, "aria-label": ariaLabel = "Global navigation", "aria-controls": ariaControls = null } = _a, props = __rest(_a, ["className", "logo", "logoProps", "logoComponent", "headerTools", "topNav", "isNavOpen", "isManagedSidebar", "role", "showNavToggle", "navToggleId", "onNavToggle", "aria-label", "aria-controls"]);
  const LogoComponent = logoComponent;
  if ([false, true].includes(deprecatedIsManagedSidebar)) {
    console.warn("isManagedSidebar is deprecated in the PageHeader component. To make the sidebar toggle uncontrolled, pass this prop in the Page component");
  }
  return React242.createElement(PageContextConsumer, null, ({ isManagedSidebar, onNavToggle: managedOnNavToggle, isNavOpen: managedIsNavOpen }) => {
    const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;
    const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;
    return React242.createElement(
      "header",
      Object.assign({ role, className: css(page_default.pageHeader, className) }, props),
      (showNavToggle || logo) && React242.createElement(
        "div",
        { className: css(page_default.pageHeaderBrand) },
        showNavToggle && React242.createElement(
          "div",
          { className: css(page_default.pageHeaderBrandToggle) },
          React242.createElement(
            Button,
            { id: navToggleId, onClick: navToggle, "aria-label": ariaLabel, "aria-controls": ariaControls, "aria-expanded": navOpen ? "true" : "false", variant: ButtonVariant.plain },
            React242.createElement(bars_icon_default, null)
          )
        ),
        logo && React242.createElement(LogoComponent, Object.assign({ className: css(page_default.pageHeaderBrandLink) }, logoProps), logo)
      ),
      topNav && React242.createElement("div", { className: css(page_default.pageHeaderNav) }, topNav),
      headerTools
    );
  });
};
PageHeader.displayName = "PageHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageSection.js
var React243 = __toESM(require_react());
var PageSectionVariants;
(function(PageSectionVariants2) {
  PageSectionVariants2["default"] = "default";
  PageSectionVariants2["light"] = "light";
  PageSectionVariants2["dark"] = "dark";
  PageSectionVariants2["darker"] = "darker";
})(PageSectionVariants || (PageSectionVariants = {}));
var PageSectionTypes;
(function(PageSectionTypes2) {
  PageSectionTypes2["default"] = "default";
  PageSectionTypes2["nav"] = "nav";
  PageSectionTypes2["subNav"] = "subnav";
  PageSectionTypes2["breadcrumb"] = "breadcrumb";
  PageSectionTypes2["tabs"] = "tabs";
  PageSectionTypes2["wizard"] = "wizard";
})(PageSectionTypes || (PageSectionTypes = {}));
var variantType = {
  [PageSectionTypes.default]: page_default.pageMainSection,
  [PageSectionTypes.nav]: page_default.pageMainNav,
  [PageSectionTypes.subNav]: page_default.pageMainSubnav,
  [PageSectionTypes.breadcrumb]: page_default.pageMainBreadcrumb,
  [PageSectionTypes.tabs]: page_default.pageMainTabs,
  [PageSectionTypes.wizard]: page_default.pageMainWizard
};
var variantStyle2 = {
  [PageSectionVariants.default]: "",
  [PageSectionVariants.light]: page_default.modifiers.light,
  [PageSectionVariants.dark]: page_default.modifiers.dark_200,
  [PageSectionVariants.darker]: page_default.modifiers.dark_100
};
var PageSection = (_a) => {
  var { className = "", children, variant = "default", type = "default", padding, isFilled, isWidthLimited = false, isCenterAligned = false, sticky, stickyOnBreakpoint, hasShadowTop = false, hasShadowBottom = false, hasOverflowScroll = false, "aria-label": ariaLabel, component = "section" } = _a, props = __rest(_a, ["className", "children", "variant", "type", "padding", "isFilled", "isWidthLimited", "isCenterAligned", "sticky", "stickyOnBreakpoint", "hasShadowTop", "hasShadowBottom", "hasOverflowScroll", "aria-label", "component"]);
  const { height, getVerticalBreakpoint: getVerticalBreakpoint2 } = React243.useContext(PageContext);
  React243.useEffect(() => {
    if (hasOverflowScroll && !ariaLabel) {
      console.warn("PageSection: An accessible aria-label is required when hasOverflowScroll is set to true.");
    }
  }, [hasOverflowScroll, ariaLabel]);
  const Component47 = component;
  return React243.createElement(
    Component47,
    Object.assign({}, props, { className: css(variantType[type], formatBreakpointMods(padding, page_default), formatBreakpointMods(stickyOnBreakpoint, page_default, "sticky-", getVerticalBreakpoint2(height), true), variantStyle2[variant], isFilled === false && page_default.modifiers.noFill, isFilled === true && page_default.modifiers.fill, isWidthLimited && page_default.modifiers.limitWidth, isWidthLimited && isCenterAligned && type !== PageSectionTypes.subNav && page_default.modifiers.alignCenter, sticky === "top" && page_default.modifiers.stickyTop, sticky === "bottom" && page_default.modifiers.stickyBottom, hasShadowTop && page_default.modifiers.shadowTop, hasShadowBottom && page_default.modifiers.shadowBottom, hasOverflowScroll && page_default.modifiers.overflowScroll, className) }, hasOverflowScroll && { tabIndex: 0 }, { "aria-label": ariaLabel }),
    isWidthLimited && React243.createElement("div", { className: css(page_default.pageMainBody) }, children),
    !isWidthLimited && children
  );
};
PageSection.displayName = "PageSection";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageHeaderTools.js
var React244 = __toESM(require_react());
var PageHeaderTools = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React244.createElement("div", Object.assign({ className: css(page_default.pageHeaderTools, className) }, props), children);
};
PageHeaderTools.displayName = "PageHeaderTools";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageHeaderToolsGroup.js
var React245 = __toESM(require_react());
var PageHeaderToolsGroup = (_a) => {
  var { children, className, visibility } = _a, props = __rest(_a, ["children", "className", "visibility"]);
  const { width, getBreakpoint: getBreakpoint2 } = React245.useContext(PageContext);
  return React245.createElement("div", Object.assign({ className: css(page_default.pageHeaderToolsGroup, formatBreakpointMods(visibility, page_default, "", getBreakpoint2(width)), className) }, props), children);
};
PageHeaderToolsGroup.displayName = "PageHeaderToolsGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageHeaderToolsItem.js
var React246 = __toESM(require_react());
var PageHeaderToolsItem = (_a) => {
  var { children, id, className, visibility, isSelected } = _a, props = __rest(_a, ["children", "id", "className", "visibility", "isSelected"]);
  const { width, getBreakpoint: getBreakpoint2 } = React246.useContext(PageContext);
  return React246.createElement("div", Object.assign({ className: css(page_default.pageHeaderToolsItem, isSelected && page_default.modifiers.selected, formatBreakpointMods(visibility, page_default, "", getBreakpoint2(width)), className), id }, props), children);
};
PageHeaderToolsItem.displayName = "PageHeaderToolsItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageNavigation.js
var React247 = __toESM(require_react());
var PageNavigation = (_a) => {
  var { className = "", children, isWidthLimited, sticky, stickyOnBreakpoint, hasShadowTop = false, hasShadowBottom = false, hasOverflowScroll = false, "aria-label": ariaLabel } = _a, props = __rest(_a, ["className", "children", "isWidthLimited", "sticky", "stickyOnBreakpoint", "hasShadowTop", "hasShadowBottom", "hasOverflowScroll", "aria-label"]);
  const { height, getVerticalBreakpoint: getVerticalBreakpoint2 } = React247.useContext(PageContext);
  React247.useEffect(() => {
    if (hasOverflowScroll && !ariaLabel) {
      console.warn("PageNavigation: An accessible aria-label is required when hasOverflowScroll is set to true.");
    }
  }, [hasOverflowScroll, ariaLabel]);
  return React247.createElement(
    "div",
    Object.assign({ className: css(page_default.pageMainNav, formatBreakpointMods(stickyOnBreakpoint, page_default, "sticky-", getVerticalBreakpoint2(height), true), isWidthLimited && page_default.modifiers.limitWidth, sticky === "top" && page_default.modifiers.stickyTop, sticky === "bottom" && page_default.modifiers.stickyBottom, hasShadowTop && page_default.modifiers.shadowTop, hasShadowBottom && page_default.modifiers.shadowBottom, hasOverflowScroll && page_default.modifiers.overflowScroll, className) }, hasOverflowScroll && { tabIndex: 0 }, { "aria-label": ariaLabel }, props),
    isWidthLimited && React247.createElement("div", { className: css(page_default.pageMainBody) }, children),
    !isWidthLimited && children
  );
};
PageNavigation.displayName = "PageNavigation";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Page/PageToggleButton.js
var React248 = __toESM(require_react());
var PageToggleButton = (_a) => {
  var { children, isNavOpen = true, onNavToggle = () => void 0, id = "nav-toggle" } = _a, props = __rest(_a, ["children", "isNavOpen", "onNavToggle", "id"]);
  return React248.createElement(PageContextConsumer, null, ({ isManagedSidebar, onNavToggle: managedOnNavToggle, isNavOpen: managedIsNavOpen }) => {
    const navToggle = isManagedSidebar ? managedOnNavToggle : onNavToggle;
    const navOpen = isManagedSidebar ? managedIsNavOpen : isNavOpen;
    return React248.createElement(Button, Object.assign({ id, onClick: navToggle, "aria-label": "Side navigation toggle", "aria-expanded": navOpen ? "true" : "false", variant: ButtonVariant.plain }, props), children);
  });
};
PageToggleButton.displayName = "PageToggleButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Pagination/Pagination.js
var React253 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Pagination/ToggleTemplate.js
var React249 = __toESM(require_react());
var ToggleTemplate = ({ firstIndex = 0, lastIndex = 0, itemCount = 0, itemsTitle = "items", ofWord = "of" }) => React249.createElement(
  React249.Fragment,
  null,
  React249.createElement(
    "b",
    null,
    firstIndex,
    " - ",
    lastIndex
  ),
  " ",
  ofWord,
  " ",
  React249.createElement("b", null, itemCount),
  " ",
  itemsTitle
);
ToggleTemplate.displayName = "ToggleTemplate";

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Pagination/pagination.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Pagination/pagination.css";
var pagination_default = {
  "button": "pf-c-button",
  "formControl": "pf-c-form-control",
  "modifiers": {
    "bottom": "pf-m-bottom",
    "static": "pf-m-static",
    "first": "pf-m-first",
    "last": "pf-m-last",
    "sticky": "pf-m-sticky",
    "compact": "pf-m-compact",
    "pageInsets": "pf-m-page-insets",
    "displaySummary": "pf-m-display-summary",
    "displayFull": "pf-m-display-full",
    "insetNone": "pf-m-inset-none",
    "insetSm": "pf-m-inset-sm",
    "insetMd": "pf-m-inset-md",
    "insetLg": "pf-m-inset-lg",
    "insetXl": "pf-m-inset-xl",
    "inset_2xl": "pf-m-inset-2xl",
    "displaySummaryOnSm": "pf-m-display-summary-on-sm",
    "displayFullOnSm": "pf-m-display-full-on-sm",
    "insetNoneOnSm": "pf-m-inset-none-on-sm",
    "insetSmOnSm": "pf-m-inset-sm-on-sm",
    "insetMdOnSm": "pf-m-inset-md-on-sm",
    "insetLgOnSm": "pf-m-inset-lg-on-sm",
    "insetXlOnSm": "pf-m-inset-xl-on-sm",
    "inset_2xlOnSm": "pf-m-inset-2xl-on-sm",
    "displaySummaryOnMd": "pf-m-display-summary-on-md",
    "displayFullOnMd": "pf-m-display-full-on-md",
    "insetNoneOnMd": "pf-m-inset-none-on-md",
    "insetSmOnMd": "pf-m-inset-sm-on-md",
    "insetMdOnMd": "pf-m-inset-md-on-md",
    "insetLgOnMd": "pf-m-inset-lg-on-md",
    "insetXlOnMd": "pf-m-inset-xl-on-md",
    "inset_2xlOnMd": "pf-m-inset-2xl-on-md",
    "displaySummaryOnLg": "pf-m-display-summary-on-lg",
    "displayFullOnLg": "pf-m-display-full-on-lg",
    "insetNoneOnLg": "pf-m-inset-none-on-lg",
    "insetSmOnLg": "pf-m-inset-sm-on-lg",
    "insetMdOnLg": "pf-m-inset-md-on-lg",
    "insetLgOnLg": "pf-m-inset-lg-on-lg",
    "insetXlOnLg": "pf-m-inset-xl-on-lg",
    "inset_2xlOnLg": "pf-m-inset-2xl-on-lg",
    "displaySummaryOnXl": "pf-m-display-summary-on-xl",
    "displayFullOnXl": "pf-m-display-full-on-xl",
    "insetNoneOnXl": "pf-m-inset-none-on-xl",
    "insetSmOnXl": "pf-m-inset-sm-on-xl",
    "insetMdOnXl": "pf-m-inset-md-on-xl",
    "insetLgOnXl": "pf-m-inset-lg-on-xl",
    "insetXlOnXl": "pf-m-inset-xl-on-xl",
    "inset_2xlOnXl": "pf-m-inset-2xl-on-xl",
    "displaySummaryOn_2xl": "pf-m-display-summary-on-2xl",
    "displayFullOn_2xl": "pf-m-display-full-on-2xl",
    "insetNoneOn_2xl": "pf-m-inset-none-on-2xl",
    "insetSmOn_2xl": "pf-m-inset-sm-on-2xl",
    "insetMdOn_2xl": "pf-m-inset-md-on-2xl",
    "insetLgOn_2xl": "pf-m-inset-lg-on-2xl",
    "insetXlOn_2xl": "pf-m-inset-xl-on-2xl",
    "inset_2xlOn_2xl": "pf-m-inset-2xl-on-2xl"
  },
  "optionsMenu": "pf-c-options-menu",
  "optionsMenuToggle": "pf-c-options-menu__toggle",
  "pagination": "pf-c-pagination",
  "paginationNav": "pf-c-pagination__nav",
  "paginationNavControl": "pf-c-pagination__nav-control",
  "paginationNavPageSelect": "pf-c-pagination__nav-page-select",
  "paginationTotalItems": "pf-c-pagination__total-items",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Pagination/Navigation.js
var React250 = __toESM(require_react());
var Navigation = class _Navigation extends React250.Component {
  constructor(props) {
    super(props);
    this.handleNewPage = (_evt, newPage) => {
      const { perPage, onSetPage } = this.props;
      const startIdx = (newPage - 1) * perPage;
      const endIdx = newPage * perPage;
      return onSetPage(_evt, newPage, perPage, startIdx, endIdx);
    };
    this.state = { userInputPage: this.props.page };
  }
  static parseInteger(input, lastPage) {
    let inputPage = Number.parseInt(input, 10);
    if (!Number.isNaN(inputPage)) {
      inputPage = inputPage > lastPage ? lastPage : inputPage;
      inputPage = inputPage < 1 ? 1 : inputPage;
    }
    return inputPage;
  }
  onChange(event, lastPage) {
    const inputPage = _Navigation.parseInteger(event.target.value, lastPage);
    this.setState({ userInputPage: Number.isNaN(inputPage) ? event.target.value : inputPage });
  }
  onKeyDown(event, page, lastPage, onPageInput) {
    if (event.key === KeyTypes.Enter) {
      const inputPage = _Navigation.parseInteger(this.state.userInputPage, lastPage);
      onPageInput(event, Number.isNaN(inputPage) ? page : inputPage);
      this.handleNewPage(event, Number.isNaN(inputPage) ? page : inputPage);
    }
  }
  componentDidUpdate(lastState) {
    if (this.props.page !== lastState.page && this.props.page <= this.props.lastPage && this.state.userInputPage !== this.props.page) {
      this.setState({ userInputPage: this.props.page });
    }
  }
  render() {
    const _a = this.props, {
      page,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      perPage,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onSetPage,
      isDisabled,
      itemCount,
      lastPage,
      firstPage,
      pagesTitle,
      pagesTitlePlural,
      toLastPage,
      toNextPage,
      toFirstPage,
      toPreviousPage,
      currPage,
      paginationTitle,
      ofWord,
      onNextClick,
      onPreviousClick,
      onFirstClick,
      onLastClick,
      onPageInput,
      className,
      isCompact
    } = _a, props = __rest(_a, ["page", "perPage", "onSetPage", "isDisabled", "itemCount", "lastPage", "firstPage", "pagesTitle", "pagesTitlePlural", "toLastPage", "toNextPage", "toFirstPage", "toPreviousPage", "currPage", "paginationTitle", "ofWord", "onNextClick", "onPreviousClick", "onFirstClick", "onLastClick", "onPageInput", "className", "isCompact"]);
    const { userInputPage } = this.state;
    return React250.createElement(
      "nav",
      Object.assign({ className: css(pagination_default.paginationNav, className), "aria-label": paginationTitle }, props),
      !isCompact && React250.createElement(
        "div",
        { className: css(pagination_default.paginationNavControl, pagination_default.modifiers.first) },
        React250.createElement(
          Button,
          { variant: ButtonVariant.plain, isDisabled: isDisabled || page === firstPage || page === 0, "aria-label": toFirstPage, "data-action": "first", onClick: (event) => {
            onFirstClick(event, 1);
            this.handleNewPage(event, 1);
            this.setState({ userInputPage: 1 });
          } },
          React250.createElement(angle_double_left_icon_default, null)
        )
      ),
      React250.createElement(
        "div",
        { className: pagination_default.paginationNavControl },
        React250.createElement(
          Button,
          { variant: ButtonVariant.plain, isDisabled: isDisabled || page === firstPage || page === 0, "data-action": "previous", onClick: (event) => {
            const newPage = page - 1 >= 1 ? page - 1 : 1;
            onPreviousClick(event, newPage);
            this.handleNewPage(event, newPage);
            this.setState({ userInputPage: newPage });
          }, "aria-label": toPreviousPage },
          React250.createElement(angle_left_icon_default, null)
        )
      ),
      !isCompact && React250.createElement(
        "div",
        { className: pagination_default.paginationNavPageSelect },
        React250.createElement("input", { className: css(pagination_default.formControl), "aria-label": currPage, type: "number", disabled: isDisabled || itemCount && page === firstPage && page === lastPage && itemCount >= 0 || page === 0, min: lastPage <= 0 && firstPage <= 0 ? 0 : 1, max: lastPage, value: userInputPage, onKeyDown: (event) => this.onKeyDown(event, page, lastPage, onPageInput), onChange: (event) => this.onChange(event, lastPage) }),
        (itemCount || itemCount === 0) && React250.createElement(
          "span",
          { "aria-hidden": "true" },
          ofWord,
          " ",
          pagesTitle ? pluralize(lastPage, pagesTitle, pagesTitlePlural) : lastPage
        )
      ),
      React250.createElement(
        "div",
        { className: pagination_default.paginationNavControl },
        React250.createElement(
          Button,
          { variant: ButtonVariant.plain, isDisabled: isDisabled || page === lastPage, "aria-label": toNextPage, "data-action": "next", onClick: (event) => {
            const newPage = page + 1 <= lastPage ? page + 1 : lastPage;
            onNextClick(event, newPage);
            this.handleNewPage(event, newPage);
            this.setState({ userInputPage: newPage });
          } },
          React250.createElement(angle_right_icon_default, null)
        )
      ),
      !isCompact && React250.createElement(
        "div",
        { className: css(pagination_default.paginationNavControl, pagination_default.modifiers.last) },
        React250.createElement(
          Button,
          { variant: ButtonVariant.plain, isDisabled: isDisabled || page === lastPage, "aria-label": toLastPage, "data-action": "last", onClick: (event) => {
            onLastClick(event, lastPage);
            this.handleNewPage(event, lastPage);
            this.setState({ userInputPage: lastPage });
          } },
          React250.createElement(angle_double_right_icon_default, null)
        )
      )
    );
  }
};
Navigation.displayName = "Navigation";
Navigation.defaultProps = {
  className: "",
  isDisabled: false,
  isCompact: false,
  lastPage: 0,
  firstPage: 0,
  pagesTitle: "",
  pagesTitlePlural: "",
  toLastPage: "Go to last page",
  toNextPage: "Go to next page",
  toFirstPage: "Go to first page",
  toPreviousPage: "Go to previous page",
  currPage: "Current page",
  paginationTitle: "Pagination",
  ofWord: "of",
  onNextClick: () => void 0,
  onPreviousClick: () => void 0,
  onFirstClick: () => void 0,
  onLastClick: () => void 0,
  onPageInput: () => void 0
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Pagination/PaginationOptionsMenu.js
var React252 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Pagination/OptionsToggle.js
var React251 = __toESM(require_react());
var OptionsToggle = ({
  itemsTitle = "items",
  optionsToggle,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  itemsPerPageTitle = "Items per page",
  ofWord = "of",
  firstIndex = 0,
  lastIndex = 0,
  itemCount,
  widgetId = "",
  showToggle = true,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onToggle = (_isOpen) => void 0,
  isOpen = false,
  isDisabled = false,
  parentRef = null,
  toggleTemplate: ToggleTemplate2,
  onEnter = null,
  perPageComponent = "div"
}) => {
  const isDiv = perPageComponent === "div";
  const toggleClasses = css(options_menu_default.optionsMenuToggle, isDisabled && options_menu_default.modifiers.disabled, options_menu_default.modifiers.plain, options_menu_default.modifiers.text);
  const template = typeof ToggleTemplate2 === "string" ? fillTemplate(ToggleTemplate2, { firstIndex, lastIndex, ofWord, itemCount, itemsTitle }) : React251.createElement(ToggleTemplate2, { firstIndex, lastIndex, ofWord, itemCount, itemsTitle });
  const dropdown = showToggle && React251.createElement(
    React251.Fragment,
    null,
    isDiv && React251.createElement("span", { className: css(options_menu_default.optionsMenuToggleText) }, template),
    React251.createElement(DropdownToggle, Object.assign({ onEnter, "aria-label": isDiv ? optionsToggle || "Items per page" : optionsToggle, onToggle, isDisabled: isDisabled || itemCount && itemCount <= 0, isOpen }, widgetId && { id: `${widgetId}-toggle` }, { className: isDiv ? options_menu_default.optionsMenuToggleButton : toggleClasses, parentRef, "aria-haspopup": "listbox" }), !isDiv && template)
  );
  return isDiv ? React251.createElement("div", { className: toggleClasses }, dropdown) : dropdown;
};
OptionsToggle.displayName = "OptionsToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Pagination/PaginationOptionsMenu.js
var PaginationOptionsMenu = class _PaginationOptionsMenu extends React252.Component {
  constructor(props) {
    super(props);
    this.parentRef = React252.createRef();
    this.onToggle = (isOpen) => {
      this.setState({ isOpen });
    };
    this.onSelect = () => {
      this.setState((prevState) => ({ isOpen: !prevState.isOpen }));
    };
    this.handleNewPerPage = (_evt, newPerPage) => {
      const { page, onPerPageSelect, itemCount, defaultToFullPage } = this.props;
      let newPage = page;
      while (Math.ceil(itemCount / newPerPage) < newPage) {
        newPage--;
      }
      if (defaultToFullPage) {
        if (itemCount / newPerPage !== newPage) {
          while (newPage > 1 && itemCount - newPerPage * newPage < 0) {
            newPage--;
          }
        }
      }
      const startIdx = (newPage - 1) * newPerPage;
      const endIdx = newPage * newPerPage;
      return onPerPageSelect(_evt, newPerPage, newPage, startIdx, endIdx);
    };
    this.renderItems = () => {
      const { perPageOptions, perPage, perPageSuffix } = this.props;
      return perPageOptions.map(({ value, title }) => React252.createElement(
        DropdownItem,
        { key: value, component: "button", "data-action": `per-page-${value}`, className: css(perPage === value && "pf-m-selected"), onClick: (event) => this.handleNewPerPage(event, value) },
        title,
        ` ${perPageSuffix}`,
        perPage === value && React252.createElement(
          "div",
          { className: css(options_menu_default.optionsMenuMenuItemIcon) },
          React252.createElement(check_icon_default, null)
        )
      ));
    };
    this.state = {
      isOpen: false
    };
  }
  render() {
    const { widgetId, isDisabled, itemsPerPageTitle, dropDirection, optionsToggle, perPageOptions, toggleTemplate, firstIndex, lastIndex, itemCount, itemsTitle, ofWord, perPageComponent } = this.props;
    const { isOpen } = this.state;
    return React252.createElement(
      DropdownContext.Provider,
      { value: Object.assign(Object.assign({}, widgetId && { id: widgetId }), { onSelect: this.onSelect, toggleIndicatorClass: perPageComponent === "div" ? options_menu_default.optionsMenuToggleButtonIcon : options_menu_default.optionsMenuToggleIcon, toggleTextClass: options_menu_default.optionsMenuToggleText, menuClass: options_menu_default.optionsMenuMenu, itemClass: options_menu_default.optionsMenuMenuItem, toggleClass: " ", baseClass: options_menu_default.optionsMenu, disabledClass: options_menu_default.modifiers.disabled, menuComponent: "ul", baseComponent: "div", ouiaComponentType: _PaginationOptionsMenu.displayName }) },
      React252.createElement(DropdownWithContext, { direction: dropDirection, isOpen, toggle: React252.createElement(OptionsToggle, { optionsToggle, itemsPerPageTitle, showToggle: perPageOptions && perPageOptions.length > 0, onToggle: this.onToggle, isOpen, widgetId, firstIndex, lastIndex, itemCount, itemsTitle, ofWord, toggleTemplate, parentRef: this.parentRef.current, isDisabled, perPageComponent }), dropdownItems: this.renderItems(), isPlain: true })
    );
  }
};
PaginationOptionsMenu.displayName = "PaginationOptionsMenu";
PaginationOptionsMenu.defaultProps = {
  className: "",
  widgetId: "",
  isDisabled: false,
  dropDirection: DropdownDirection.down,
  perPageOptions: [],
  itemsPerPageTitle: "Items per page",
  perPageSuffix: "per page",
  optionsToggle: "",
  ofWord: "of",
  perPage: 0,
  firstIndex: 0,
  lastIndex: 0,
  defaultToFullPage: false,
  itemsTitle: "items",
  toggleTemplate: ToggleTemplate,
  onPerPageSelect: () => null,
  perPageComponent: "div"
};

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/c_pagination__nav_page_select_c_form_control_width_chars.js
var c_pagination__nav_page_select_c_form_control_width_chars = {
  "name": "--pf-c-pagination__nav-page-select--c-form-control--width-chars",
  "value": "2",
  "var": "var(--pf-c-pagination__nav-page-select--c-form-control--width-chars)"
};
var c_pagination_nav_page_select_c_form_control_width_chars_default = c_pagination__nav_page_select_c_form_control_width_chars;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Pagination/Pagination.js
var PaginationVariant;
(function(PaginationVariant2) {
  PaginationVariant2["bottom"] = "bottom";
  PaginationVariant2["top"] = "top";
})(PaginationVariant || (PaginationVariant = {}));
var defaultPerPageOptions = [
  {
    title: "10",
    value: 10
  },
  {
    title: "20",
    value: 20
  },
  {
    title: "50",
    value: 50
  },
  {
    title: "100",
    value: 100
  }
];
var handleInputWidth = (lastPage, node) => {
  if (!node) {
    return;
  }
  const len = String(lastPage).length;
  if (len >= 3) {
    node.style.setProperty(c_pagination_nav_page_select_c_form_control_width_chars_default.name, `${len}`);
  } else {
    node.style.setProperty(c_pagination_nav_page_select_c_form_control_width_chars_default.name, "2");
  }
};
var Pagination = class _Pagination extends React253.Component {
  constructor() {
    super(...arguments);
    this.paginationRef = React253.createRef();
    this.state = {
      ouiaStateId: getDefaultOUIAId(_Pagination.displayName, this.props.variant)
    };
  }
  getLastPage() {
    const { itemCount, perPage, page } = this.props;
    return itemCount || itemCount === 0 ? Math.ceil(itemCount / perPage) || 0 : page + 1;
  }
  componentDidMount() {
    const node = this.paginationRef.current;
    handleInputWidth(this.getLastPage(), node);
  }
  componentDidUpdate(prevProps) {
    const node = this.paginationRef.current;
    if (prevProps.perPage !== this.props.perPage || prevProps.itemCount !== this.props.itemCount) {
      handleInputWidth(this.getLastPage(), node);
    }
  }
  render() {
    const _a = this.props, { children, className, variant, isDisabled, isCompact, isStatic, isSticky, perPage, titles, firstPage, page: propPage, offset, defaultToFullPage, itemCount, itemsStart, itemsEnd, perPageOptions, dropDirection: dropDirectionProp, widgetId, toggleTemplate, onSetPage, onPerPageSelect, onFirstClick, onPreviousClick, onNextClick, onPageInput, onLastClick, ouiaId, ouiaSafe, perPageComponent, usePageInsets, inset } = _a, props = __rest(_a, ["children", "className", "variant", "isDisabled", "isCompact", "isStatic", "isSticky", "perPage", "titles", "firstPage", "page", "offset", "defaultToFullPage", "itemCount", "itemsStart", "itemsEnd", "perPageOptions", "dropDirection", "widgetId", "toggleTemplate", "onSetPage", "onPerPageSelect", "onFirstClick", "onPreviousClick", "onNextClick", "onPageInput", "onLastClick", "ouiaId", "ouiaSafe", "perPageComponent", "usePageInsets", "inset"]);
    const dropDirection = dropDirectionProp || (variant === "bottom" && !isStatic ? "up" : "down");
    let page = propPage;
    if (!page && offset) {
      page = Math.ceil(offset / perPage);
    }
    if (page === 0 && !itemCount) {
      page = 1;
    }
    const lastPage = this.getLastPage();
    let firstIndex = (page - 1) * perPage + 1;
    let lastIndex = page * perPage;
    if (itemCount || itemCount === 0) {
      firstIndex = itemCount <= 0 ? 0 : (page - 1) * perPage + 1;
      if (page < firstPage && itemCount > 0) {
        page = firstPage;
      } else if (page > lastPage) {
        page = lastPage;
      }
      if (itemCount >= 0) {
        lastIndex = page === lastPage || itemCount === 0 ? itemCount : page * perPage;
      }
    }
    const toggleTemplateProps = { firstIndex, lastIndex, itemCount, itemsTitle: titles.items, ofWord: titles.ofWord };
    return React253.createElement(
      "div",
      Object.assign({ ref: this.paginationRef, className: css(pagination_default.pagination, variant === PaginationVariant.bottom && pagination_default.modifiers.bottom, usePageInsets && pagination_default.modifiers.pageInsets, formatBreakpointMods(inset, pagination_default), isCompact && pagination_default.modifiers.compact, isStatic && pagination_default.modifiers.static, isSticky && pagination_default.modifiers.sticky, className) }, widgetId && { id: `${widgetId}-${variant}-pagination` }, getOUIAProps(_Pagination.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe), props),
      variant === PaginationVariant.top && React253.createElement(
        "div",
        { className: css(pagination_default.paginationTotalItems) },
        toggleTemplate && typeof toggleTemplate === "string" && fillTemplate(toggleTemplate, toggleTemplateProps),
        toggleTemplate && typeof toggleTemplate !== "string" && toggleTemplate(toggleTemplateProps),
        !toggleTemplate && React253.createElement(ToggleTemplate, { firstIndex, lastIndex, itemCount, itemsTitle: titles.items, ofWord: titles.ofWord })
      ),
      React253.createElement(PaginationOptionsMenu, { itemsPerPageTitle: titles.itemsPerPage, perPageSuffix: titles.perPageSuffix, itemsTitle: isCompact ? "" : titles.items, optionsToggle: titles.optionsToggle, perPageOptions, firstIndex: itemsStart !== null ? itemsStart : firstIndex, lastIndex: itemsEnd !== null ? itemsEnd : lastIndex, ofWord: titles.ofWord, defaultToFullPage, itemCount, page, perPage, lastPage, onPerPageSelect, dropDirection, widgetId: `${widgetId}-${variant}`, toggleTemplate, isDisabled, perPageComponent }),
      React253.createElement(Navigation, { pagesTitle: titles.page, pagesTitlePlural: titles.pages, toLastPage: titles.toLastPage, toPreviousPage: titles.toPreviousPage, toNextPage: titles.toNextPage, toFirstPage: titles.toFirstPage, currPage: titles.currPage, paginationTitle: titles.paginationTitle, ofWord: titles.ofWord, page: itemCount && itemCount <= 0 ? 0 : page, perPage, itemCount, firstPage: itemsStart !== null ? itemsStart : 1, lastPage, onSetPage, onFirstClick, onPreviousClick, onNextClick, onLastClick, onPageInput, isDisabled, isCompact }),
      children
    );
  }
};
Pagination.displayName = "Pagination";
Pagination.defaultProps = {
  children: null,
  className: "",
  variant: PaginationVariant.top,
  isDisabled: false,
  isCompact: false,
  isSticky: false,
  perPage: defaultPerPageOptions[0].value,
  titles: {
    items: "",
    page: "",
    pages: "",
    itemsPerPage: "Items per page",
    perPageSuffix: "per page",
    toFirstPage: "Go to first page",
    toPreviousPage: "Go to previous page",
    toLastPage: "Go to last page",
    toNextPage: "Go to next page",
    optionsToggle: "",
    currPage: "Current page",
    paginationTitle: "Pagination",
    ofWord: "of"
  },
  firstPage: 1,
  page: 0,
  offset: 0,
  defaultToFullPage: false,
  itemsStart: null,
  itemsEnd: null,
  perPageOptions: defaultPerPageOptions,
  widgetId: "options-menu",
  onSetPage: () => void 0,
  onPerPageSelect: () => void 0,
  onFirstClick: () => void 0,
  onPreviousClick: () => void 0,
  onNextClick: () => void 0,
  onPageInput: () => void 0,
  onLastClick: () => void 0,
  ouiaSafe: true,
  perPageComponent: "div"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ProgressStepper/ProgressStepper.js
var React254 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ProgressStepper/progress-stepper.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ProgressStepper/progress-stepper.css";
var progress_stepper_default = {
  "faExclamationTriangle": "fa-exclamation-triangle",
  "modifiers": {
    "center": "pf-m-center",
    "compact": "pf-m-compact",
    "current": "pf-m-current",
    "pending": "pf-m-pending",
    "success": "pf-m-success",
    "danger": "pf-m-danger",
    "warning": "pf-m-warning",
    "info": "pf-m-info",
    "helpText": "pf-m-help-text",
    "horizontal": "pf-m-horizontal",
    "vertical": "pf-m-vertical",
    "horizontalOnSm": "pf-m-horizontal-on-sm",
    "verticalOnSm": "pf-m-vertical-on-sm",
    "horizontalOnMd": "pf-m-horizontal-on-md",
    "verticalOnMd": "pf-m-vertical-on-md",
    "horizontalOnLg": "pf-m-horizontal-on-lg",
    "verticalOnLg": "pf-m-vertical-on-lg",
    "horizontalOnXl": "pf-m-horizontal-on-xl",
    "verticalOnXl": "pf-m-vertical-on-xl",
    "horizontalOn_2xl": "pf-m-horizontal-on-2xl",
    "verticalOn_2xl": "pf-m-vertical-on-2xl"
  },
  "pficon": "pficon",
  "progressStepper": "pf-c-progress-stepper",
  "progressStepperStep": "pf-c-progress-stepper__step",
  "progressStepperStepConnector": "pf-c-progress-stepper__step-connector",
  "progressStepperStepDescription": "pf-c-progress-stepper__step-description",
  "progressStepperStepIcon": "pf-c-progress-stepper__step-icon",
  "progressStepperStepMain": "pf-c-progress-stepper__step-main",
  "progressStepperStepTitle": "pf-c-progress-stepper__step-title"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ProgressStepper/ProgressStepper.js
var ProgressStepper = (_a) => {
  var { children, className, isCenterAligned, isVertical, isCompact } = _a, props = __rest(_a, ["children", "className", "isCenterAligned", "isVertical", "isCompact"]);
  return React254.createElement("ol", Object.assign({ className: css(progress_stepper_default.progressStepper, isCenterAligned && progress_stepper_default.modifiers.center, isVertical && progress_stepper_default.modifiers.vertical, isCompact && progress_stepper_default.modifiers.compact, className) }, props), children);
};
ProgressStepper.displayName = "ProgressStepper";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ProgressStepper/ProgressStep.js
var React255 = __toESM(require_react());
var ProgressStepVariant;
(function(ProgressStepVariant2) {
  ProgressStepVariant2["default"] = "default";
  ProgressStepVariant2["pending"] = "pending";
  ProgressStepVariant2["success"] = "success";
  ProgressStepVariant2["info"] = "info";
  ProgressStepVariant2["danger"] = "danger";
  ProgressStepVariant2["warning"] = "warning";
})(ProgressStepVariant || (ProgressStepVariant = {}));
var variantIcons3 = {
  default: void 0,
  pending: void 0,
  success: React255.createElement(check_circle_icon_default, null),
  info: React255.createElement(resources_full_icon_default, null),
  warning: React255.createElement(exclamation_triangle_icon_default, null),
  danger: React255.createElement(exclamation_circle_icon_default, null)
};
var variantStyle3 = {
  default: "",
  info: progress_stepper_default.modifiers.info,
  success: progress_stepper_default.modifiers.success,
  pending: progress_stepper_default.modifiers.pending,
  warning: progress_stepper_default.modifiers.warning,
  danger: progress_stepper_default.modifiers.danger
};
var ProgressStep = (_a) => {
  var { children, className, variant, isCurrent, description, icon, titleId, "aria-label": ariaLabel, popoverRender } = _a, props = __rest(_a, ["children", "className", "variant", "isCurrent", "description", "icon", "titleId", "aria-label", "popoverRender"]);
  const _icon = icon !== void 0 ? icon : variantIcons3[variant];
  const Component47 = popoverRender !== void 0 ? "button" : "div";
  const stepRef = React255.useRef();
  if (props.id === void 0 || titleId === void 0) {
    console.warn("ProgressStep: The titleId and id properties are required to make this component accessible, and one or both of these properties are missing.");
  }
  return React255.createElement(
    "li",
    Object.assign({ className: css(progress_stepper_default.progressStepperStep, variantStyle3[variant], isCurrent && progress_stepper_default.modifiers.current, className), "aria-label": ariaLabel }, isCurrent && { "aria-current": "step" }, props),
    React255.createElement(
      "div",
      { className: css(progress_stepper_default.progressStepperStepConnector) },
      React255.createElement("span", { className: css(progress_stepper_default.progressStepperStepIcon) }, _icon && _icon)
    ),
    React255.createElement(
      "div",
      { className: css(progress_stepper_default.progressStepperStepMain) },
      React255.createElement(
        Component47,
        Object.assign({ className: css(progress_stepper_default.progressStepperStepTitle, popoverRender && progress_stepper_default.modifiers.helpText), id: titleId, ref: stepRef }, popoverRender && { type: "button" }, props.id !== void 0 && titleId !== void 0 && { "aria-labelledby": `${props.id} ${titleId}` }),
        children,
        popoverRender && popoverRender(stepRef)
      ),
      description && React255.createElement("div", { className: css(progress_stepper_default.progressStepperStepDescription) }, description)
    )
  );
};
ProgressStep.displayName = "ProgressStep";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Radio/Radio.js
var React256 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Radio/radio.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Radio/radio.css";
var radio_default = {
  "modifiers": {
    "standalone": "pf-m-standalone",
    "disabled": "pf-m-disabled"
  },
  "radio": "pf-c-radio",
  "radioBody": "pf-c-radio__body",
  "radioDescription": "pf-c-radio__description",
  "radioInput": "pf-c-radio__input",
  "radioLabel": "pf-c-radio__label"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Radio/Radio.js
var Radio = class _Radio extends React256.Component {
  constructor(props) {
    super(props);
    this.handleChange = (event) => {
      this.props.onChange(event.currentTarget.checked, event);
    };
    if (!props.label && !props["aria-label"]) {
      console.error("Radio:", "Radio requires an aria-label to be specified");
    }
    this.state = {
      ouiaStateId: getDefaultOUIAId(_Radio.displayName)
    };
  }
  render() {
    const _a = this.props, {
      "aria-label": ariaLabel,
      checked,
      className,
      defaultChecked,
      isLabelWrapped,
      isLabelBeforeButton,
      isChecked,
      isDisabled,
      isValid,
      label,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onChange,
      description,
      body,
      ouiaId,
      ouiaSafe = true
    } = _a, props = __rest(_a, ["aria-label", "checked", "className", "defaultChecked", "isLabelWrapped", "isLabelBeforeButton", "isChecked", "isDisabled", "isValid", "label", "onChange", "description", "body", "ouiaId", "ouiaSafe"]);
    if (!props.id) {
      console.error("Radio:", "id is required to make input accessible");
    }
    const inputRendered = React256.createElement("input", Object.assign({}, props, { className: css(radio_default.radioInput), type: "radio", onChange: this.handleChange, "aria-invalid": !isValid, disabled: isDisabled, checked: checked || isChecked }, checked === void 0 && { defaultChecked }, !label && { "aria-label": ariaLabel }, getOUIAProps(_Radio.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe)));
    let labelRendered = null;
    if (label && isLabelWrapped) {
      labelRendered = React256.createElement("span", { className: css(radio_default.radioLabel, isDisabled && radio_default.modifiers.disabled) }, label);
    } else if (label) {
      labelRendered = React256.createElement("label", { className: css(radio_default.radioLabel, isDisabled && radio_default.modifiers.disabled), htmlFor: props.id }, label);
    }
    const descRender = description ? React256.createElement("span", { className: css(radio_default.radioDescription) }, description) : null;
    const bodyRender = body ? React256.createElement("span", { className: css(radio_default.radioBody) }, body) : null;
    const childrenRendered = isLabelBeforeButton ? React256.createElement(
      React256.Fragment,
      null,
      labelRendered,
      inputRendered,
      descRender,
      bodyRender
    ) : React256.createElement(
      React256.Fragment,
      null,
      inputRendered,
      labelRendered,
      descRender,
      bodyRender
    );
    return isLabelWrapped ? React256.createElement("label", { className: css(radio_default.radio, className), htmlFor: props.id }, childrenRendered) : React256.createElement("div", { className: css(radio_default.radio, !label && radio_default.modifiers.standalone, className) }, childrenRendered);
  }
};
Radio.displayName = "Radio";
Radio.defaultProps = {
  className: "",
  isDisabled: false,
  isValid: true,
  onChange: () => {
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Sidebar/Sidebar.js
var React257 = __toESM(require_react());
var Sidebar = (_a) => {
  var { className, children, orientation, isPanelRight = false, hasGutter, hasNoBackground } = _a, props = __rest(_a, ["className", "children", "orientation", "isPanelRight", "hasGutter", "hasNoBackground"]);
  return React257.createElement(
    "div",
    Object.assign({ className: css(sidebar_default.sidebar, hasGutter && sidebar_default.modifiers.gutter, hasNoBackground && sidebar_default.modifiers.noBackground, isPanelRight && sidebar_default.modifiers.panelRight, sidebar_default.modifiers[orientation], className) }, props),
    React257.createElement("div", { className: sidebar_default.sidebarMain }, children)
  );
};
Sidebar.displayName = "Sidebar";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Sidebar/SidebarContent.js
var React258 = __toESM(require_react());
var SidebarContent = (_a) => {
  var { className, children, hasNoBackground } = _a, props = __rest(_a, ["className", "children", "hasNoBackground"]);
  return React258.createElement("div", Object.assign({ className: css(sidebar_default.sidebarContent, hasNoBackground && sidebar_default.modifiers.noBackground, className) }, props), children);
};
SidebarContent.displayName = "SidebarContent";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Sidebar/SidebarPanel.js
var React259 = __toESM(require_react());
var SidebarPanelWidthType;
(function(SidebarPanelWidthType2) {
  SidebarPanelWidthType2["default"] = "default";
  SidebarPanelWidthType2["width25"] = "width_25";
  SidebarPanelWidthType2["width33"] = "width_33";
  SidebarPanelWidthType2["width50"] = "width_50";
  SidebarPanelWidthType2["width66"] = "width_66";
  SidebarPanelWidthType2["width75"] = "width_75";
  SidebarPanelWidthType2["width100"] = "width_100";
})(SidebarPanelWidthType || (SidebarPanelWidthType = {}));
var SidebarPanel = (_a) => {
  var { className, children, variant = "default", hasNoBackground, width } = _a, props = __rest(_a, ["className", "children", "variant", "hasNoBackground", "width"]);
  return React259.createElement("div", Object.assign({ className: css(sidebar_default.sidebarPanel, variant !== "default" && sidebar_default.modifiers[variant], hasNoBackground && sidebar_default.modifiers.noBackground, formatBreakpointMods(width, sidebar_default), className) }, props), children);
};
SidebarPanel.displayName = "SidebarPanel";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SimpleList/SimpleList.js
var React261 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/SimpleList/simple-list.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/SimpleList/simple-list.css";
var simple_list_default = {
  "modifiers": {
    "current": "pf-m-current"
  },
  "simpleList": "pf-c-simple-list",
  "simpleListItemLink": "pf-c-simple-list__item-link",
  "simpleListSection": "pf-c-simple-list__section",
  "simpleListTitle": "pf-c-simple-list__title",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SimpleList/SimpleListGroup.js
var React260 = __toESM(require_react());
var SimpleListGroup = (_a) => {
  var { children = null, className = "", title = "", titleClassName = "", id = "" } = _a, props = __rest(_a, ["children", "className", "title", "titleClassName", "id"]);
  return React260.createElement(
    "section",
    Object.assign({ className: css(simple_list_default.simpleListSection) }, props),
    React260.createElement("h2", { id, className: css(simple_list_default.simpleListTitle, titleClassName), "aria-hidden": "true" }, title),
    React260.createElement("ul", { className: css(className), "aria-labelledby": id }, children)
  );
};
SimpleListGroup.displayName = "SimpleListGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SimpleList/SimpleList.js
var SimpleListContext = React261.createContext({});
var SimpleList = class extends React261.Component {
  constructor() {
    super(...arguments);
    this.state = {
      currentRef: null
    };
    this.handleCurrentUpdate = (newCurrentRef, itemProps) => {
      this.setState({ currentRef: newCurrentRef });
      const { onSelect } = this.props;
      onSelect && onSelect(newCurrentRef, itemProps);
    };
  }
  render() {
    const _a = this.props, { children, className, onSelect, isControlled, "aria-label": ariaLabel } = _a, props = __rest(_a, ["children", "className", "onSelect", "isControlled", "aria-label"]);
    let isGrouped = false;
    if (children) {
      isGrouped = React261.Children.toArray(children)[0].type === SimpleListGroup;
    }
    return React261.createElement(
      SimpleListContext.Provider,
      { value: {
        currentRef: this.state.currentRef,
        updateCurrentRef: this.handleCurrentUpdate,
        isControlled
      } },
      React261.createElement(
        "div",
        Object.assign({ className: css(simple_list_default.simpleList, className) }, props),
        isGrouped && children,
        !isGrouped && React261.createElement("ul", { "aria-label": ariaLabel }, children)
      )
    );
  }
};
SimpleList.displayName = "SimpleList";
SimpleList.defaultProps = {
  children: null,
  className: "",
  isControlled: true
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SimpleList/SimpleListItem.js
var React262 = __toESM(require_react());
var SimpleListItem = class extends React262.Component {
  constructor() {
    super(...arguments);
    this.ref = React262.createRef();
  }
  render() {
    const _a = this.props, {
      children,
      isCurrent,
      isActive,
      className,
      component: Component47,
      componentClassName,
      componentProps,
      onClick,
      type,
      href,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      itemId
    } = _a, props = __rest(_a, ["children", "isCurrent", "isActive", "className", "component", "componentClassName", "componentProps", "onClick", "type", "href", "itemId"]);
    return React262.createElement(SimpleListContext.Consumer, null, ({ currentRef, updateCurrentRef, isControlled }) => {
      const isButton = Component47 === "button";
      const isCurrentItem = this.ref && currentRef && isControlled ? currentRef.current === this.ref.current : isActive || isCurrent;
      const additionalComponentProps = isButton ? {
        type
      } : {
        tabIndex: 0,
        href
      };
      return React262.createElement(
        "li",
        Object.assign({ className: css(className) }, props),
        React262.createElement(Component47, Object.assign({ className: css(simple_list_default.simpleListItemLink, isCurrentItem && simple_list_default.modifiers.current, componentClassName), onClick: (evt) => {
          onClick(evt);
          updateCurrentRef(this.ref, this.props);
        }, ref: this.ref }, componentProps, additionalComponentProps), children)
      );
    });
  }
};
SimpleListItem.displayName = "SimpleListItem";
SimpleListItem.defaultProps = {
  children: null,
  className: "",
  isActive: false,
  isCurrent: false,
  component: "button",
  componentClassName: "",
  type: "button",
  href: "",
  onClick: () => {
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Skeleton/Skeleton.js
var React263 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Skeleton/skeleton.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Skeleton/skeleton.css";
var skeleton_default = {
  "modifiers": {
    "circle": "pf-m-circle",
    "square": "pf-m-square",
    "widthSm": "pf-m-width-sm",
    "widthMd": "pf-m-width-md",
    "widthLg": "pf-m-width-lg",
    "width_25": "pf-m-width-25",
    "width_33": "pf-m-width-33",
    "width_50": "pf-m-width-50",
    "width_66": "pf-m-width-66",
    "width_75": "pf-m-width-75",
    "heightSm": "pf-m-height-sm",
    "heightMd": "pf-m-height-md",
    "heightLg": "pf-m-height-lg",
    "height_25": "pf-m-height-25",
    "height_33": "pf-m-height-33",
    "height_50": "pf-m-height-50",
    "height_66": "pf-m-height-66",
    "height_75": "pf-m-height-75",
    "height_100": "pf-m-height-100",
    "text_4xl": "pf-m-text-4xl",
    "text_3xl": "pf-m-text-3xl",
    "text_2xl": "pf-m-text-2xl",
    "textXl": "pf-m-text-xl",
    "textLg": "pf-m-text-lg",
    "textMd": "pf-m-text-md",
    "textSm": "pf-m-text-sm"
  },
  "skeleton": "pf-c-skeleton",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Skeleton/Skeleton.js
var Skeleton = (_a) => {
  var { className, width, height, fontSize, shape, screenreaderText } = _a, props = __rest(_a, ["className", "width", "height", "fontSize", "shape", "screenreaderText"]);
  const fontHeightClassName = fontSize ? Object.values(skeleton_default.modifiers).find((key) => key === `pf-m-text-${fontSize}`) : void 0;
  return React263.createElement(
    "div",
    Object.assign({}, props, { className: css(skeleton_default.skeleton, fontSize && fontHeightClassName, shape === "circle" && skeleton_default.modifiers.circle, shape === "square" && skeleton_default.modifiers.square, className) }, (width || height) && {
      style: Object.assign({ "--pf-c-skeleton--Width": width ? width : void 0, "--pf-c-skeleton--Height": height ? height : void 0 }, props.style)
    }),
    React263.createElement("span", { className: "pf-u-screen-reader" }, screenreaderText)
  );
};
Skeleton.displayName = "Skeleton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SkipToContent/SkipToContent.js
var React264 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/SkipToContent/skip-to-content.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/SkipToContent/skip-to-content.css";
var skip_to_content_default = {
  "skipToContent": "pf-c-skip-to-content"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/SkipToContent/SkipToContent.js
var SkipToContent = class extends React264.Component {
  constructor() {
    super(...arguments);
    this.componentRef = React264.createRef();
  }
  componentDidMount() {
    if (this.props.show && this.componentRef.current) {
      this.componentRef.current.focus();
    }
  }
  render() {
    const _a = this.props, { children, className, href, show, type } = _a, rest = __rest(_a, ["children", "className", "href", "show", "type"]);
    return React264.createElement("a", Object.assign({}, rest, { className: css(button_default.button, button_default.modifiers.primary, skip_to_content_default.skipToContent, className), ref: this.componentRef, href }), children);
  }
};
SkipToContent.displayName = "SkipToContent";
SkipToContent.defaultProps = {
  show: false
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Slider/Slider.js
var React266 = __toESM(require_react());
var import_react9 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Slider/slider.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Slider/slider.css";
var slider_default = {
  "formControl": "pf-c-form-control",
  "modifiers": {
    "disabled": "pf-m-disabled",
    "active": "pf-m-active",
    "floating": "pf-m-floating"
  },
  "slider": "pf-c-slider",
  "sliderActions": "pf-c-slider__actions",
  "sliderMain": "pf-c-slider__main",
  "sliderRail": "pf-c-slider__rail",
  "sliderRailTrack": "pf-c-slider__rail-track",
  "sliderStep": "pf-c-slider__step",
  "sliderStepLabel": "pf-c-slider__step-label",
  "sliderStepTick": "pf-c-slider__step-tick",
  "sliderSteps": "pf-c-slider__steps",
  "sliderThumb": "pf-c-slider__thumb",
  "sliderValue": "pf-c-slider__value"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Slider/SliderStep.js
var React265 = __toESM(require_react());
var SliderStep = (_a) => {
  var { className, label, value, isTickHidden = false, isLabelHidden = false, isActive = false } = _a, props = __rest(_a, ["className", "label", "value", "isTickHidden", "isLabelHidden", "isActive"]);
  const style = { "--pf-c-slider__step--Left": `${value}%` };
  return React265.createElement(
    "div",
    Object.assign({ className: css(slider_default.sliderStep, isActive && slider_default.modifiers.active, className), style }, props),
    !isTickHidden && React265.createElement("div", { className: css(slider_default.sliderStepTick) }),
    !isLabelHidden && label && React265.createElement("div", { className: css(slider_default.sliderStepLabel) }, label)
  );
};
SliderStep.displayName = "SliderStep";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Slider/Slider.js
var getPercentage = (current, max) => 100 * current / max;
var Slider = (_a) => {
  var { className, value = 0, customSteps, areCustomStepsContinuous = false, isDisabled = false, isInputVisible = false, inputValue = 0, inputLabel, inputAriaLabel = "Slider value input", thumbAriaLabel = "Value", hasTooltipOverThumb = false, inputPosition = "right", onChange, leftActions, rightActions, step = 1, min = 0, max = 100, showTicks = false, showBoundaries = true, "aria-describedby": ariaDescribedby, "aria-labelledby": ariaLabelledby } = _a, props = __rest(_a, ["className", "value", "customSteps", "areCustomStepsContinuous", "isDisabled", "isInputVisible", "inputValue", "inputLabel", "inputAriaLabel", "thumbAriaLabel", "hasTooltipOverThumb", "inputPosition", "onChange", "leftActions", "rightActions", "step", "min", "max", "showTicks", "showBoundaries", "aria-describedby", "aria-labelledby"]);
  const sliderRailRef = React266.useRef();
  const thumbRef = React266.useRef();
  const [localValue, setValue] = (0, import_react9.useState)(value);
  const [localInputValue, setLocalInputValue] = (0, import_react9.useState)(inputValue);
  React266.useEffect(() => {
    setValue(value);
  }, [value]);
  React266.useEffect(() => {
    setLocalInputValue(inputValue);
  }, [inputValue]);
  let diff = 0;
  let snapValue;
  const stylePercent = (localValue - min) * 100 / (max - min);
  const style = { "--pf-c-slider--value": `${stylePercent}%` };
  const widthChars = React266.useMemo(() => localInputValue.toString().length, [localInputValue]);
  const inputStyle = { "--pf-c-slider__value--c-form-control--width-chars": widthChars };
  const onChangeHandler = (value2) => {
    setLocalInputValue(Number(value2));
  };
  const handleKeyPressOnInput = (event) => {
    if (event.key === "Enter") {
      event.preventDefault();
      if (onChange) {
        onChange(localValue, localInputValue, setLocalInputValue);
      }
    }
  };
  const onInputFocus = (e) => {
    e.stopPropagation();
  };
  const onThumbClick = () => {
    thumbRef.current.focus();
  };
  const onBlur = () => {
    if (onChange) {
      onChange(localValue, localInputValue, setLocalInputValue);
    }
  };
  const findAriaTextValue = () => {
    if (!areCustomStepsContinuous && customSteps) {
      const matchingStep = customSteps.find((stepObj) => stepObj.value === localValue);
      if (matchingStep) {
        return matchingStep.label;
      }
    }
    return Number(Number(localValue).toFixed(2)).toString();
  };
  const handleThumbDragEnd = () => {
    document.removeEventListener("mousemove", callbackThumbMove);
    document.removeEventListener("mouseup", callbackThumbUp);
    document.removeEventListener("touchmove", callbackThumbMove);
    document.removeEventListener("touchend", callbackThumbUp);
    document.removeEventListener("touchcancel", callbackThumbUp);
  };
  const handleMouseDown = (e) => {
    e.stopPropagation();
    e.preventDefault();
    diff = e.clientX - thumbRef.current.getBoundingClientRect().left;
    document.addEventListener("mousemove", callbackThumbMove);
    document.addEventListener("mouseup", callbackThumbUp);
  };
  const handleTouchStart = (e) => {
    e.stopPropagation();
    diff = e.touches[0].clientX - thumbRef.current.getBoundingClientRect().left;
    document.addEventListener("touchmove", callbackThumbMove, { passive: false });
    document.addEventListener("touchend", callbackThumbUp);
    document.addEventListener("touchcancel", callbackThumbUp);
  };
  const onSliderRailClick = (e) => {
    handleThumbMove(e);
    if (snapValue && !areCustomStepsContinuous) {
      thumbRef.current.style.setProperty("--pf-c-slider--value", `${snapValue}%`);
      setValue(snapValue);
      if (onChange) {
        onChange(snapValue);
      }
    }
  };
  const handleThumbMove = (e) => {
    if (e.type === "touchmove") {
      e.preventDefault();
      e.stopImmediatePropagation();
    }
    const clientPosition = e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;
    let newPosition = clientPosition - diff - sliderRailRef.current.getBoundingClientRect().left;
    const end = sliderRailRef.current.offsetWidth - thumbRef.current.offsetWidth;
    const start = 0;
    if (newPosition < start) {
      newPosition = 0;
    }
    if (newPosition > end) {
      newPosition = end;
    }
    const newPercentage = getPercentage(newPosition, end);
    thumbRef.current.style.setProperty("--pf-c-slider--value", `${newPercentage}%`);
    const newValue = Math.round((newPercentage * (max - min) / 100 + min) * 100) / 100;
    setValue(newValue);
    if (!customSteps) {
      snapValue = Math.round((Math.round((newValue - min) / step) * step + min) * 100) / 100;
      thumbRef.current.style.setProperty("--pf-c-slider--value", `${snapValue}%`);
      setValue(snapValue);
    }
    if (!areCustomStepsContinuous && customSteps) {
      let percentage = newPercentage;
      if (customSteps[customSteps.length - 1].value !== 100) {
        percentage = newPercentage * (max - min) / 100 + min;
      }
      const stepIndex = customSteps.findIndex((stepObj) => stepObj.value >= percentage);
      if (customSteps[stepIndex].value === percentage) {
        snapValue = customSteps[stepIndex].value;
      } else {
        const midpoint = (customSteps[stepIndex].value + customSteps[stepIndex - 1].value) / 2;
        if (midpoint > percentage) {
          snapValue = customSteps[stepIndex - 1].value;
        } else {
          snapValue = customSteps[stepIndex].value;
        }
      }
      setValue(snapValue);
    }
    if (onChange) {
      if (snapValue !== void 0) {
        onChange(snapValue);
      } else {
        onChange(newValue);
      }
    }
  };
  const callbackThumbMove = React266.useCallback(handleThumbMove, [min, max, customSteps, onChange]);
  const callbackThumbUp = React266.useCallback(handleThumbDragEnd, [min, max, customSteps, onChange]);
  const handleThumbKeys = (e) => {
    const key = e.key;
    if (key !== "ArrowLeft" && key !== "ArrowRight") {
      return;
    }
    e.preventDefault();
    let newValue = localValue;
    if (!areCustomStepsContinuous && customSteps) {
      const stepIndex = customSteps.findIndex((stepObj) => stepObj.value === localValue);
      if (key === "ArrowRight") {
        if (stepIndex + 1 < customSteps.length) {
          {
            newValue = customSteps[stepIndex + 1].value;
          }
        }
      } else if (key === "ArrowLeft") {
        if (stepIndex - 1 >= 0) {
          newValue = customSteps[stepIndex - 1].value;
        }
      }
    } else {
      if (key === "ArrowRight") {
        newValue = localValue + step <= max ? localValue + step : max;
      } else if (key === "ArrowLeft") {
        newValue = localValue - step >= min ? localValue - step : min;
      }
    }
    if (newValue !== localValue) {
      thumbRef.current.style.setProperty("--pf-c-slider--value", `${newValue}%`);
      setValue(newValue);
      if (onChange) {
        onChange(newValue);
      }
    }
  };
  const displayInput = () => {
    const textInput = React266.createElement(TextInput, { className: css(slider_default.formControl), isDisabled, type: "number", value: localInputValue, "aria-label": inputAriaLabel, onKeyDown: handleKeyPressOnInput, onChange: onChangeHandler, onClick: onInputFocus, onFocus: onInputFocus, onBlur });
    if (inputLabel) {
      return React266.createElement(
        InputGroup,
        null,
        textInput,
        React266.createElement(
          InputGroupText,
          Object.assign({}, isDisabled && { className: css(slider_default.modifiers.disabled) }),
          " ",
          inputLabel
        )
      );
    } else {
      return textInput;
    }
  };
  const getStepValue = (val, min2, max2) => (val - min2) * 100 / (max2 - min2);
  const buildSteps = () => {
    const builtSteps = [];
    for (let i = min; i <= max; i = i + step) {
      const stepValue = getStepValue(i, min, max);
      if (!showTicks && showBoundaries && i !== min && i !== max) {
        continue;
      }
      builtSteps.push(React266.createElement(SliderStep, { key: i, value: stepValue, label: i.toString(), isTickHidden: !showTicks, isLabelHidden: (i === min || i === max) && showBoundaries ? false : true, isActive: i <= localValue }));
    }
    return builtSteps;
  };
  const thumbComponent = React266.createElement("div", { className: css(slider_default.sliderThumb), ref: thumbRef, tabIndex: isDisabled ? -1 : 0, role: "slider", "aria-valuemin": customSteps ? customSteps[0].value : min, "aria-valuemax": customSteps ? customSteps[customSteps.length - 1].value : max, "aria-valuenow": localValue, "aria-valuetext": findAriaTextValue(), "aria-label": thumbAriaLabel, "aria-disabled": isDisabled, "aria-describedby": ariaDescribedby, "aria-labelledby": ariaLabelledby, onMouseDown: !isDisabled ? handleMouseDown : null, onTouchStart: !isDisabled ? handleTouchStart : null, onKeyDown: !isDisabled ? handleThumbKeys : null, onClick: !isDisabled ? onThumbClick : null });
  return React266.createElement(
    "div",
    Object.assign({ className: css(slider_default.slider, className, isDisabled && slider_default.modifiers.disabled), style: Object.assign(Object.assign({}, style), inputStyle) }, props),
    leftActions && React266.createElement("div", { className: css(slider_default.sliderActions) }, leftActions),
    React266.createElement(
      "div",
      { className: css(slider_default.sliderMain) },
      React266.createElement(
        "div",
        { className: css(slider_default.sliderRail), ref: sliderRailRef, onClick: !isDisabled ? onSliderRailClick : null },
        React266.createElement("div", { className: css(slider_default.sliderRailTrack) })
      ),
      customSteps && React266.createElement("div", { className: css(slider_default.sliderSteps), "aria-hidden": "true" }, customSteps.map((stepObj) => {
        const minValue = customSteps[0].value;
        const maxValue = customSteps[customSteps.length - 1].value;
        const stepValue = getStepValue(stepObj.value, minValue, maxValue);
        return React266.createElement(SliderStep, { key: stepObj.value, value: stepValue, label: stepObj.label, isLabelHidden: stepObj.isLabelHidden, isActive: stepObj.value <= localValue });
      })),
      !customSteps && (showTicks || showBoundaries) && React266.createElement("div", { className: css(slider_default.sliderSteps), "aria-hidden": "true" }, buildSteps()),
      hasTooltipOverThumb ? React266.createElement(Tooltip, { entryDelay: 0, content: findAriaTextValue() }, thumbComponent) : thumbComponent,
      isInputVisible && inputPosition === "aboveThumb" && React266.createElement("div", { className: css(slider_default.sliderValue, slider_default.modifiers.floating) }, displayInput())
    ),
    isInputVisible && inputPosition === "right" && React266.createElement("div", { className: css(slider_default.sliderValue) }, displayInput()),
    rightActions && React266.createElement("div", { className: css(slider_default.sliderActions) }, rightActions)
  );
};
Slider.displayName = "Slider";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Switch/Switch.js
var React267 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Switch/switch.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Switch/switch.css";
var switch_default = {
  "modifiers": {
    "reverse": "pf-m-reverse",
    "off": "pf-m-off",
    "on": "pf-m-on"
  },
  "switch": "pf-c-switch",
  "switchInput": "pf-c-switch__input",
  "switchLabel": "pf-c-switch__label",
  "switchToggle": "pf-c-switch__toggle",
  "switchToggleIcon": "pf-c-switch__toggle-icon",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Switch/Switch.js
var Switch = class _Switch extends React267.Component {
  constructor(props) {
    super(props);
    if (!props.label && !props["aria-label"]) {
      console.error("Switch: Switch requires either a label or an aria-label to be specified");
    }
    this.id = props.id || getUniqueId();
    this.state = {
      ouiaStateId: getDefaultOUIAId(_Switch.displayName)
    };
  }
  render() {
    const _a = this.props, {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      id,
      className,
      label,
      labelOff,
      isChecked,
      defaultChecked,
      hasCheckIcon,
      isDisabled,
      onChange,
      isReversed,
      ouiaId,
      ouiaSafe
    } = _a, props = __rest(_a, ["id", "className", "label", "labelOff", "isChecked", "defaultChecked", "hasCheckIcon", "isDisabled", "onChange", "isReversed", "ouiaId", "ouiaSafe"]);
    const isAriaLabelledBy = props["aria-label"] === "";
    return React267.createElement(
      "label",
      Object.assign({ className: css(switch_default.switch, isReversed && switch_default.modifiers.reverse, className), htmlFor: this.id }, getOUIAProps(_Switch.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe)),
      React267.createElement("input", Object.assign({ id: this.id, className: css(switch_default.switchInput), type: "checkbox", onChange: (event) => onChange(event.target.checked, event) }, defaultChecked !== void 0 ? { defaultChecked } : { checked: isChecked }, { disabled: isDisabled, "aria-labelledby": !isAriaLabelledBy ? null : `${this.id}-${isChecked !== true ? "off" : "on"}` }, props)),
      label !== void 0 ? React267.createElement(
        React267.Fragment,
        null,
        React267.createElement("span", { className: css(switch_default.switchToggle) }, hasCheckIcon && React267.createElement(
          "span",
          { className: css(switch_default.switchToggleIcon), "aria-hidden": "true" },
          React267.createElement(check_icon_default, { noVerticalAlign: true })
        )),
        React267.createElement("span", { className: css(switch_default.switchLabel, switch_default.modifiers.on), id: isAriaLabelledBy ? `${this.id}-on` : null, "aria-hidden": "true" }, label),
        React267.createElement("span", { className: css(switch_default.switchLabel, switch_default.modifiers.off), id: isAriaLabelledBy ? `${this.id}-off` : null, "aria-hidden": "true" }, labelOff !== void 0 ? labelOff : label)
      ) : React267.createElement(
        "span",
        { className: css(switch_default.switchToggle) },
        React267.createElement(
          "div",
          { className: css(switch_default.switchToggleIcon), "aria-hidden": "true" },
          React267.createElement(check_icon_default, { noVerticalAlign: true })
        )
      )
    );
  }
};
Switch.displayName = "Switch";
Switch.defaultProps = {
  isChecked: true,
  isDisabled: false,
  isReversed: false,
  "aria-label": "",
  onChange: () => void 0
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tab.js
var React271 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Tabs/tabs.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Tabs/tabs.css";
var tabs_default = {
  "button": "pf-c-button",
  "modifiers": {
    "fill": "pf-m-fill",
    "scrollable": "pf-m-scrollable",
    "secondary": "pf-m-secondary",
    "noBorderBottom": "pf-m-no-border-bottom",
    "borderBottom": "pf-m-border-bottom",
    "box": "pf-m-box",
    "vertical": "pf-m-vertical",
    "current": "pf-m-current",
    "colorSchemeLight_300": "pf-m-color-scheme--light-300",
    "expandable": "pf-m-expandable",
    "nonExpandable": "pf-m-non-expandable",
    "expandableOnSm": "pf-m-expandable-on-sm",
    "nonExpandableOnSm": "pf-m-non-expandable-on-sm",
    "expandableOnMd": "pf-m-expandable-on-md",
    "nonExpandableOnMd": "pf-m-non-expandable-on-md",
    "expandableOnLg": "pf-m-expandable-on-lg",
    "nonExpandableOnLg": "pf-m-non-expandable-on-lg",
    "expandableOnXl": "pf-m-expandable-on-xl",
    "nonExpandableOnXl": "pf-m-non-expandable-on-xl",
    "expandableOn_2xl": "pf-m-expandable-on-2xl",
    "nonExpandableOn_2xl": "pf-m-non-expandable-on-2xl",
    "expanded": "pf-m-expanded",
    "pageInsets": "pf-m-page-insets",
    "overflow": "pf-m-overflow",
    "action": "pf-m-action",
    "active": "pf-m-active",
    "disabled": "pf-m-disabled",
    "ariaDisabled": "pf-m-aria-disabled",
    "insetNone": "pf-m-inset-none",
    "insetSm": "pf-m-inset-sm",
    "insetMd": "pf-m-inset-md",
    "insetLg": "pf-m-inset-lg",
    "insetXl": "pf-m-inset-xl",
    "inset_2xl": "pf-m-inset-2xl",
    "insetNoneOnSm": "pf-m-inset-none-on-sm",
    "insetSmOnSm": "pf-m-inset-sm-on-sm",
    "insetMdOnSm": "pf-m-inset-md-on-sm",
    "insetLgOnSm": "pf-m-inset-lg-on-sm",
    "insetXlOnSm": "pf-m-inset-xl-on-sm",
    "inset_2xlOnSm": "pf-m-inset-2xl-on-sm",
    "insetNoneOnMd": "pf-m-inset-none-on-md",
    "insetSmOnMd": "pf-m-inset-sm-on-md",
    "insetMdOnMd": "pf-m-inset-md-on-md",
    "insetLgOnMd": "pf-m-inset-lg-on-md",
    "insetXlOnMd": "pf-m-inset-xl-on-md",
    "inset_2xlOnMd": "pf-m-inset-2xl-on-md",
    "insetNoneOnLg": "pf-m-inset-none-on-lg",
    "insetSmOnLg": "pf-m-inset-sm-on-lg",
    "insetMdOnLg": "pf-m-inset-md-on-lg",
    "insetLgOnLg": "pf-m-inset-lg-on-lg",
    "insetXlOnLg": "pf-m-inset-xl-on-lg",
    "inset_2xlOnLg": "pf-m-inset-2xl-on-lg",
    "insetNoneOnXl": "pf-m-inset-none-on-xl",
    "insetSmOnXl": "pf-m-inset-sm-on-xl",
    "insetMdOnXl": "pf-m-inset-md-on-xl",
    "insetLgOnXl": "pf-m-inset-lg-on-xl",
    "insetXlOnXl": "pf-m-inset-xl-on-xl",
    "inset_2xlOnXl": "pf-m-inset-2xl-on-xl",
    "insetNoneOn_2xl": "pf-m-inset-none-on-2xl",
    "insetSmOn_2xl": "pf-m-inset-sm-on-2xl",
    "insetMdOn_2xl": "pf-m-inset-md-on-2xl",
    "insetLgOn_2xl": "pf-m-inset-lg-on-2xl",
    "insetXlOn_2xl": "pf-m-inset-xl-on-2xl",
    "inset_2xlOn_2xl": "pf-m-inset-2xl-on-2xl"
  },
  "tabs": "pf-c-tabs",
  "tabsAdd": "pf-c-tabs__add",
  "tabsItem": "pf-c-tabs__item",
  "tabsItemAction": "pf-c-tabs__item-action",
  "tabsItemActionIcon": "pf-c-tabs__item-action-icon",
  "tabsItemIcon": "pf-c-tabs__item-icon",
  "tabsItemText": "pf-c-tabs__item-text",
  "tabsLink": "pf-c-tabs__link",
  "tabsLinkToggleIcon": "pf-c-tabs__link-toggle-icon",
  "tabsList": "pf-c-tabs__list",
  "tabsScrollButton": "pf-c-tabs__scroll-button",
  "tabsToggle": "pf-c-tabs__toggle",
  "tabsToggleButton": "pf-c-tabs__toggle-button",
  "tabsToggleIcon": "pf-c-tabs__toggle-icon",
  "tabsToggleText": "pf-c-tabs__toggle-text",
  "themeDark": "pf-theme-dark"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabButton.js
var React268 = __toESM(require_react());
var TabButton = (_a) => {
  var {
    children,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    tabContentRef,
    ouiaId,
    parentInnerRef,
    ouiaSafe
  } = _a, props = __rest(_a, ["children", "tabContentRef", "ouiaId", "parentInnerRef", "ouiaSafe"]);
  const Component47 = props.href ? "a" : "button";
  return React268.createElement(Component47, Object.assign({}, !props.href && { type: "button" }, { ref: parentInnerRef }, getOUIAProps(TabButton.displayName, ouiaId, ouiaSafe), props), children);
};
TabButton.displayName = "TabButton";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabsContext.js
var React269 = __toESM(require_react());
var TabsContext = React269.createContext({
  variant: "default",
  mountOnEnter: false,
  unmountOnExit: false,
  localActiveKey: "",
  uniqueId: "",
  handleTabClick: () => null,
  handleTabClose: void 0
});
var TabsContextProvider = TabsContext.Provider;
var TabsContextConsumer = TabsContext.Consumer;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabAction.js
var React270 = __toESM(require_react());
var TabActionBase = (_a) => {
  var {
    children,
    className,
    onClick,
    isDisabled,
    "aria-label": ariaLabel = "Tab action",
    innerRef,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ouiaId,
    ouiaSafe
  } = _a, props = __rest(_a, ["children", "className", "onClick", "isDisabled", "aria-label", "innerRef", "ouiaId", "ouiaSafe"]);
  return React270.createElement(
    "span",
    { className: css(tabs_default.tabsItemAction, className) },
    React270.createElement(
      Button,
      Object.assign({ ref: innerRef, type: "button", variant: "plain", "aria-label": ariaLabel, onClick, isDisabled }, getOUIAProps(TabAction.displayName, ouiaId, ouiaSafe), props),
      React270.createElement("span", { className: css(tabs_default.tabsItemActionIcon) }, children)
    )
  );
};
var TabAction = React270.forwardRef((props, ref) => React270.createElement(TabActionBase, Object.assign({}, props, { innerRef: ref })));
TabAction.displayName = "TabAction";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tab.js
var TabBase = (_a) => {
  var { title, eventKey, tabContentRef, id: childId, tabContentId, className: childClassName = "", ouiaId: childOuiaId, isDisabled, isAriaDisabled, inoperableEvents = ["onClick", "onKeyPress"], href, innerRef, tooltip, closeButtonAriaLabel, isCloseDisabled = false, actions } = _a, props = __rest(_a, ["title", "eventKey", "tabContentRef", "id", "tabContentId", "className", "ouiaId", "isDisabled", "isAriaDisabled", "inoperableEvents", "href", "innerRef", "tooltip", "closeButtonAriaLabel", "isCloseDisabled", "actions"]);
  const preventedEvents2 = inoperableEvents.reduce((handlers, eventToPrevent) => Object.assign(Object.assign({}, handlers), { [eventToPrevent]: (event) => {
    event.preventDefault();
  } }), {});
  const { mountOnEnter, localActiveKey, unmountOnExit, uniqueId, handleTabClick, handleTabClose } = React271.useContext(TabsContext);
  let ariaControls = tabContentId ? `${tabContentId}` : `pf-tab-section-${eventKey}-${childId || uniqueId}`;
  if ((mountOnEnter || unmountOnExit) && eventKey !== localActiveKey) {
    ariaControls = void 0;
  }
  const isButtonElement = Boolean(!href);
  const getDefaultTabIdx = () => {
    if (isDisabled) {
      return isButtonElement ? null : -1;
    } else if (isAriaDisabled) {
      return null;
    }
  };
  const tabButton = React271.createElement(TabButton, Object.assign({ parentInnerRef: innerRef, className: css(tabs_default.tabsLink, isDisabled && href && tabs_default.modifiers.disabled, isAriaDisabled && tabs_default.modifiers.ariaDisabled), disabled: isButtonElement ? isDisabled : null, "aria-disabled": isDisabled || isAriaDisabled, tabIndex: getDefaultTabIdx(), onClick: (event) => handleTabClick(event, eventKey, tabContentRef) }, isAriaDisabled ? preventedEvents2 : null, { id: `pf-tab-${eventKey}-${childId || uniqueId}`, "aria-controls": ariaControls, tabContentRef, ouiaId: childOuiaId, href, role: "tab", "aria-selected": eventKey === localActiveKey }, props), title);
  return React271.createElement(
    "li",
    { className: css(tabs_default.tabsItem, eventKey === localActiveKey && tabs_default.modifiers.current, (handleTabClose || actions) && tabs_default.modifiers.action, (isDisabled || isAriaDisabled) && tabs_default.modifiers.disabled, childClassName), role: "presentation" },
    tooltip ? React271.createElement(Tooltip, Object.assign({}, tooltip.props), tabButton) : tabButton,
    actions && actions,
    handleTabClose !== void 0 && React271.createElement(
      TabAction,
      { "aria-label": closeButtonAriaLabel || "Close tab", onClick: (event) => handleTabClose(event, eventKey, tabContentRef), isDisabled: isCloseDisabled },
      React271.createElement(times_icon_default, null)
    )
  );
};
var Tab = React271.forwardRef((props, ref) => React271.createElement(TabBase, Object.assign({ innerRef: ref }, props)));
Tab.displayName = "Tab";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tabs.js
var React275 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabContent.js
var React272 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/TabContent/tab-content.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/TabContent/tab-content.css";
var tab_content_default = {
  "modifiers": {
    "light_300": "pf-m-light-300",
    "padding": "pf-m-padding"
  },
  "tabContent": "pf-c-tab-content",
  "tabContentBody": "pf-c-tab-content__body"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabContent.js
var variantStyle4 = {
  default: "",
  light300: tab_content_default.modifiers.light_300
};
var TabContentBase = (_a) => {
  var {
    id,
    activeKey,
    "aria-label": ariaLabel,
    child,
    children,
    className,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    eventKey,
    innerRef,
    ouiaId,
    ouiaSafe
  } = _a, props = __rest(_a, ["id", "activeKey", "aria-label", "child", "children", "className", "eventKey", "innerRef", "ouiaId", "ouiaSafe"]);
  if (children || child) {
    let labelledBy;
    if (ariaLabel) {
      labelledBy = null;
    } else {
      labelledBy = children ? `${id}` : `pf-tab-${child.props.eventKey}-${id}`;
    }
    return React272.createElement(TabsContextConsumer, null, ({ variant }) => React272.createElement("section", Object.assign({ ref: innerRef, hidden: children ? null : child.props.eventKey !== activeKey, className: children ? css("pf-c-tab-content", className, variantStyle4[variant]) : css("pf-c-tab-content", child.props.className, variantStyle4[variant]), id: children ? id : `pf-tab-section-${child.props.eventKey}-${id}`, "aria-label": ariaLabel, "aria-labelledby": labelledBy, role: "tabpanel", tabIndex: 0 }, getOUIAProps("TabContent", ouiaId, ouiaSafe), props), children || child.props.children));
  }
  return null;
};
var TabContent = React272.forwardRef((props, ref) => React272.createElement(TabContentBase, Object.assign({}, props, { innerRef: ref })));

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/OverflowTab.js
var import_react10 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabTitleText.js
var React273 = __toESM(require_react());
var TabTitleText = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React273.createElement("span", Object.assign({ className: css(tabs_default.tabsItemText, className) }, props), children);
};
TabTitleText.displayName = "TabTitleText";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/OverflowTab.js
var OverflowTab = (_a) => {
  var { className, overflowingTabs = [], showTabCount, defaultTitleText = "More", toggleAriaLabel, removeFindDomNode = false, zIndex = 9999 } = _a, props = __rest(_a, ["className", "overflowingTabs", "showTabCount", "defaultTitleText", "toggleAriaLabel", "removeFindDomNode", "zIndex"]);
  const menuRef = import_react10.default.useRef();
  const overflowTabRef = import_react10.default.useRef();
  const overflowLIRef = import_react10.default.useRef();
  const [isExpanded, setIsExpanded] = import_react10.default.useState(false);
  const { localActiveKey, handleTabClick } = import_react10.default.useContext(TabsContext);
  const closeMenu = () => {
    setIsExpanded(false);
    overflowTabRef.current.focus();
  };
  const handleMenuKeys = (ev) => {
    var _a2;
    const menuContainsEventTarget = (_a2 = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(ev.target);
    if (isExpanded && menuContainsEventTarget && ev.key === "Escape") {
      closeMenu();
    }
  };
  const handleClick = (ev) => {
    var _a2, _b;
    const clickIsOutsideMenu = !((_a2 = menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) === null || _a2 === void 0 ? void 0 : _a2.contains(ev.target));
    const clickIsOutsideOverflowTab = !((_b = overflowTabRef === null || overflowTabRef === void 0 ? void 0 : overflowTabRef.current) === null || _b === void 0 ? void 0 : _b.contains(ev.target));
    if (isExpanded && clickIsOutsideMenu && clickIsOutsideOverflowTab) {
      closeMenu();
    }
  };
  import_react10.default.useEffect(() => {
    window.addEventListener("click", handleClick);
    window.addEventListener("keydown", handleMenuKeys);
    return () => {
      window.removeEventListener("click", handleClick);
      window.removeEventListener("keydown", handleMenuKeys);
    };
  }, [isExpanded, menuRef, overflowTabRef]);
  const selectedTab = overflowingTabs.find((tab) => tab.eventKey === localActiveKey);
  const tabTitle = (selectedTab === null || selectedTab === void 0 ? void 0 : selectedTab.title) ? selectedTab.title : defaultTitleText;
  const toggleMenu = () => {
    setIsExpanded((prevIsExpanded) => !prevIsExpanded);
    setTimeout(() => {
      if (menuRef === null || menuRef === void 0 ? void 0 : menuRef.current) {
        const firstElement = menuRef.current.querySelector("li > button,input:not(:disabled)");
        firstElement && firstElement.focus();
      }
    }, 0);
  };
  const overflowTab = import_react10.default.createElement(
    "li",
    Object.assign({ className: css(tabs_default.tabsItem, "pf-m-overflow", selectedTab && tabs_default.modifiers.current, className), role: "presentation", ref: overflowLIRef }, props),
    import_react10.default.createElement(
      "button",
      { type: "button", className: css(tabs_default.tabsLink, isExpanded && tabs_default.modifiers.expanded), onClick: () => toggleMenu(), "aria-label": toggleAriaLabel, "aria-haspopup": "menu", "aria-expanded": isExpanded, role: "tab", ref: overflowTabRef },
      import_react10.default.createElement(
        TabTitleText,
        null,
        tabTitle,
        showTabCount && tabTitle === defaultTitleText && ` (${overflowingTabs.length})`
      ),
      import_react10.default.createElement(
        "span",
        { className: tabs_default.tabsLinkToggleIcon },
        import_react10.default.createElement(angle_right_icon_default, null)
      )
    )
  );
  const tabs = overflowingTabs.map((tab) => import_react10.default.createElement(MenuItem, { key: tab.eventKey, itemId: tab.eventKey, isSelected: localActiveKey === tab.eventKey }, tab.title));
  const onTabSelect = (event, key) => {
    closeMenu();
    const selectedTabRef = overflowingTabs.find((tab) => tab.eventKey === key).tabContentRef;
    handleTabClick(event, key, selectedTabRef);
  };
  const overflowMenu = import_react10.default.createElement(
    Menu,
    { ref: menuRef, onSelect: (ev, itemId) => onTabSelect(ev, itemId) },
    import_react10.default.createElement(
      MenuContent,
      null,
      import_react10.default.createElement(MenuList, null, tabs)
    )
  );
  return import_react10.default.createElement(Popper, { trigger: overflowTab, popper: overflowMenu, isVisible: isExpanded, popperMatchesTriggerWidth: false, appendTo: overflowLIRef.current, removeFindDomNode, zIndex });
};
OverflowTab.displayName = "OverflowTab";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tabs.js
var TabsComponent;
(function(TabsComponent2) {
  TabsComponent2["div"] = "div";
  TabsComponent2["nav"] = "nav";
})(TabsComponent || (TabsComponent = {}));
var variantStyle5 = {
  default: "",
  light300: tabs_default.modifiers.colorSchemeLight_300
};
var Tabs = class _Tabs extends React275.Component {
  constructor(props) {
    super(props);
    this.tabList = React275.createRef();
    this.leftScrollButtonRef = React275.createRef();
    this.scrollTimeout = null;
    this.countOverflowingElements = (container) => {
      const elements = Array.from(container.children);
      return elements.filter((element) => !isElementInView(container, element, false)).length;
    };
    this.handleScrollButtons = () => {
      const { isOverflowHorizontal } = this.props;
      clearTimeout(this.scrollTimeout);
      this.scrollTimeout = setTimeout(() => {
        const container = this.tabList.current;
        let disableLeftScrollButton = true;
        let disableRightScrollButton = true;
        let enableScrollButtons = false;
        let overflowingTabCount = 0;
        if (container && !this.props.isVertical && !isOverflowHorizontal) {
          const overflowOnLeft = !isElementInView(container, container.firstChild, false);
          const overflowOnRight = !isElementInView(container, container.lastChild, false);
          enableScrollButtons = overflowOnLeft || overflowOnRight;
          disableLeftScrollButton = !overflowOnLeft;
          disableRightScrollButton = !overflowOnRight;
        }
        if (isOverflowHorizontal) {
          overflowingTabCount = this.countOverflowingElements(container);
        }
        this.setState({
          enableScrollButtons,
          disableLeftScrollButton,
          disableRightScrollButton,
          overflowingTabCount
        });
      }, 100);
    };
    this.scrollLeft = () => {
      if (this.tabList.current) {
        const container = this.tabList.current;
        const childrenArr = Array.from(container.children);
        let firstElementInView;
        let lastElementOutOfView;
        let i;
        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {
          if (isElementInView(container, childrenArr[i], false)) {
            firstElementInView = childrenArr[i];
            lastElementOutOfView = childrenArr[i - 1];
          }
        }
        if (lastElementOutOfView) {
          container.scrollLeft -= lastElementOutOfView.scrollWidth;
        }
      }
    };
    this.scrollRight = () => {
      if (this.tabList.current) {
        const container = this.tabList.current;
        const childrenArr = Array.from(container.children);
        let lastElementInView;
        let firstElementOutOfView;
        for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {
          if (isElementInView(container, childrenArr[i], false)) {
            lastElementInView = childrenArr[i];
            firstElementOutOfView = childrenArr[i + 1];
          }
        }
        if (firstElementOutOfView) {
          container.scrollLeft += firstElementOutOfView.scrollWidth;
        }
      }
    };
    this.hideScrollButtons = () => {
      const { enableScrollButtons, renderScrollButtons, showScrollButtons } = this.state;
      if (!enableScrollButtons && !showScrollButtons && renderScrollButtons) {
        this.setState({ renderScrollButtons: false });
      }
    };
    this.state = {
      enableScrollButtons: false,
      showScrollButtons: false,
      renderScrollButtons: false,
      disableLeftScrollButton: true,
      disableRightScrollButton: true,
      shownKeys: this.props.defaultActiveKey !== void 0 ? [this.props.defaultActiveKey] : [this.props.activeKey],
      uncontrolledActiveKey: this.props.defaultActiveKey,
      uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,
      ouiaStateId: getDefaultOUIAId(_Tabs.displayName),
      overflowingTabCount: 0
    };
    if (this.props.isVertical && this.props.expandable !== void 0) {
      if (!this.props.toggleAriaLabel && !this.props.toggleText) {
        console.error("Tabs:", "toggleAriaLabel or the toggleText prop is required to make the toggle button accessible");
      }
    }
  }
  handleTabClick(event, eventKey, tabContentRef) {
    const { shownKeys } = this.state;
    const { onSelect, defaultActiveKey } = this.props;
    if (defaultActiveKey !== void 0) {
      this.setState({
        uncontrolledActiveKey: eventKey
      });
    } else {
      onSelect(event, eventKey);
    }
    if (tabContentRef) {
      React275.Children.toArray(this.props.children).map((child) => child).filter((child) => child.props && child.props.tabContentRef && child.props.tabContentRef.current).forEach((child) => child.props.tabContentRef.current.hidden = true);
      if (tabContentRef.current) {
        tabContentRef.current.hidden = false;
      }
    }
    if (this.props.mountOnEnter) {
      this.setState({
        shownKeys: shownKeys.concat(eventKey)
      });
    }
  }
  componentDidMount() {
    if (!this.props.isVertical) {
      if (canUseDOM) {
        window.addEventListener("resize", this.handleScrollButtons, false);
      }
      this.handleScrollButtons();
    }
  }
  componentWillUnmount() {
    var _a;
    if (!this.props.isVertical) {
      if (canUseDOM) {
        window.removeEventListener("resize", this.handleScrollButtons, false);
      }
    }
    clearTimeout(this.scrollTimeout);
    (_a = this.leftScrollButtonRef.current) === null || _a === void 0 ? void 0 : _a.removeEventListener("transitionend", this.hideScrollButtons);
  }
  componentDidUpdate(prevProps, prevState) {
    const { activeKey, mountOnEnter, isOverflowHorizontal, children } = this.props;
    const { shownKeys, overflowingTabCount, enableScrollButtons } = this.state;
    if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {
      this.setState({
        shownKeys: shownKeys.concat(activeKey)
      });
    }
    if (prevProps.children && children && React275.Children.toArray(prevProps.children).length !== React275.Children.toArray(children).length) {
      this.handleScrollButtons();
    }
    const currentOverflowingTabCount = this.countOverflowingElements(this.tabList.current);
    if (isOverflowHorizontal && currentOverflowingTabCount) {
      this.setState({ overflowingTabCount: currentOverflowingTabCount + overflowingTabCount });
    }
    if (!prevState.enableScrollButtons && enableScrollButtons) {
      this.setState({ renderScrollButtons: true });
      setTimeout(() => {
        var _a;
        (_a = this.leftScrollButtonRef.current) === null || _a === void 0 ? void 0 : _a.addEventListener("transitionend", this.hideScrollButtons);
        this.setState({ showScrollButtons: true });
      }, 100);
    } else if (prevState.enableScrollButtons && !enableScrollButtons) {
      this.setState({ showScrollButtons: false });
    }
  }
  render() {
    const _a = this.props, { className, children, activeKey, defaultActiveKey, id, isFilled, isSecondary, isVertical, isBox, hasBorderBottom, hasSecondaryBorderBottom, leftScrollAriaLabel, rightScrollAriaLabel, "aria-label": ariaLabel, component, ouiaId, ouiaSafe, mountOnEnter, unmountOnExit, usePageInsets, inset, variant, expandable, isExpanded, defaultIsExpanded, toggleText, toggleAriaLabel, addButtonAriaLabel, onToggle, onClose, onAdd, isOverflowHorizontal } = _a, props = __rest(_a, ["className", "children", "activeKey", "defaultActiveKey", "id", "isFilled", "isSecondary", "isVertical", "isBox", "hasBorderBottom", "hasSecondaryBorderBottom", "leftScrollAriaLabel", "rightScrollAriaLabel", "aria-label", "component", "ouiaId", "ouiaSafe", "mountOnEnter", "unmountOnExit", "usePageInsets", "inset", "variant", "expandable", "isExpanded", "defaultIsExpanded", "toggleText", "toggleAriaLabel", "addButtonAriaLabel", "onToggle", "onClose", "onAdd", "isOverflowHorizontal"]);
    const { showScrollButtons, renderScrollButtons, disableLeftScrollButton, disableRightScrollButton, shownKeys, uncontrolledActiveKey, uncontrolledIsExpandedLocal, overflowingTabCount } = this.state;
    const filteredChildren = React275.Children.toArray(children).filter(Boolean).filter((child) => !child.props.isHidden);
    const filteredChildrenWithoutOverflow = filteredChildren.slice(0, filteredChildren.length - overflowingTabCount);
    const filteredChildrenOverflowing = filteredChildren.slice(filteredChildren.length - overflowingTabCount);
    const overflowingTabProps = filteredChildrenOverflowing.map((child) => child.props);
    const uniqueId = id || getUniqueId();
    const Component47 = component === TabsComponent.nav ? "nav" : "div";
    const localActiveKey = defaultActiveKey !== void 0 ? uncontrolledActiveKey : activeKey;
    const isExpandedLocal = defaultIsExpanded !== void 0 ? uncontrolledIsExpandedLocal : isExpanded;
    const toggleTabs = (newValue) => {
      if (isExpanded === void 0) {
        this.setState({ uncontrolledIsExpandedLocal: newValue });
      } else {
        onToggle(newValue);
      }
    };
    const hasOverflowTab = isOverflowHorizontal && overflowingTabCount > 0;
    const overflowObjectProps = typeof isOverflowHorizontal === "object" ? Object.assign({}, isOverflowHorizontal) : {};
    return React275.createElement(
      TabsContextProvider,
      { value: {
        variant,
        mountOnEnter,
        unmountOnExit,
        localActiveKey,
        uniqueId,
        handleTabClick: (...args) => this.handleTabClick(...args),
        handleTabClose: onClose
      } },
      React275.createElement(
        Component47,
        Object.assign({ "aria-label": ariaLabel, className: css(tabs_default.tabs, isFilled && tabs_default.modifiers.fill, isSecondary && tabs_default.modifiers.secondary, isVertical && tabs_default.modifiers.vertical, isVertical && expandable && formatBreakpointMods(expandable, tabs_default), isVertical && expandable && isExpandedLocal && tabs_default.modifiers.expanded, isBox && tabs_default.modifiers.box, showScrollButtons && tabs_default.modifiers.scrollable, usePageInsets && tabs_default.modifiers.pageInsets, !hasBorderBottom && tabs_default.modifiers.noBorderBottom, hasSecondaryBorderBottom && tabs_default.modifiers.borderBottom, formatBreakpointMods(inset, tabs_default), variantStyle5[variant], hasOverflowTab && tabs_default.modifiers.overflow, className) }, getOUIAProps(_Tabs.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId, ouiaSafe), { id: id && id }, props),
        expandable && isVertical && React275.createElement(GenerateId, null, (randomId) => React275.createElement(
          "div",
          { className: css(tabs_default.tabsToggle) },
          React275.createElement(
            "div",
            { className: css(tabs_default.tabsToggleButton) },
            React275.createElement(
              Button,
              { onClick: () => toggleTabs(!isExpandedLocal), variant: "plain", "aria-label": toggleAriaLabel, "aria-expanded": isExpandedLocal, id: `${randomId}-button`, "aria-labelledby": `${randomId}-text ${randomId}-button` },
              React275.createElement(
                "span",
                { className: css(tabs_default.tabsToggleIcon) },
                React275.createElement(angle_right_icon_default, { "arian-hidden": "true" })
              ),
              toggleText && React275.createElement("span", { className: css("pf-c-tabs__toggle-text"), id: `${randomId}-text` }, toggleText)
            )
          )
        )),
        renderScrollButtons && React275.createElement(
          "button",
          { type: "button", className: css(tabs_default.tabsScrollButton, isSecondary && button_default.modifiers.secondary), "aria-label": leftScrollAriaLabel, onClick: this.scrollLeft, disabled: disableLeftScrollButton, "aria-hidden": disableLeftScrollButton, ref: this.leftScrollButtonRef },
          React275.createElement(angle_left_icon_default, null)
        ),
        React275.createElement(
          "ul",
          { className: css(tabs_default.tabsList), ref: this.tabList, onScroll: this.handleScrollButtons, role: "tablist" },
          isOverflowHorizontal ? filteredChildrenWithoutOverflow : filteredChildren,
          hasOverflowTab && React275.createElement(OverflowTab, Object.assign({ overflowingTabs: overflowingTabProps }, overflowObjectProps))
        ),
        renderScrollButtons && React275.createElement(
          "button",
          { type: "button", className: css(tabs_default.tabsScrollButton, isSecondary && button_default.modifiers.secondary), "aria-label": rightScrollAriaLabel, onClick: this.scrollRight, disabled: disableRightScrollButton, "aria-hidden": disableRightScrollButton },
          React275.createElement(angle_right_icon_default, null)
        ),
        onAdd !== void 0 && React275.createElement(
          "span",
          { className: css(tabs_default.tabsAdd) },
          React275.createElement(
            Button,
            { variant: "plain", "aria-label": addButtonAriaLabel || "Add tab", onClick: onAdd },
            React275.createElement(plus_icon_default, null)
          )
        )
      ),
      filteredChildren.filter((child) => child.props.children && !(unmountOnExit && child.props.eventKey !== localActiveKey) && !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1)).map((child) => React275.createElement(TabContent, { key: child.props.eventKey, activeKey: localActiveKey, child, id: child.props.id || uniqueId, ouiaId: child.props.ouiaId }))
    );
  }
};
Tabs.displayName = "Tabs";
Tabs.defaultProps = {
  activeKey: 0,
  onSelect: () => void 0,
  isFilled: false,
  isSecondary: false,
  isVertical: false,
  isBox: false,
  hasBorderBottom: true,
  leftScrollAriaLabel: "Scroll left",
  rightScrollAriaLabel: "Scroll right",
  component: TabsComponent.div,
  mountOnEnter: false,
  unmountOnExit: false,
  ouiaSafe: true,
  variant: "default",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onToggle: (isExpanded) => void 0
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabContentBody.js
var React276 = __toESM(require_react());
var TabContentBody = (_a) => {
  var { children, className, hasPadding } = _a, props = __rest(_a, ["children", "className", "hasPadding"]);
  return React276.createElement("div", Object.assign({ className: css(tab_content_default.tabContentBody, hasPadding && tab_content_default.modifiers.padding, className) }, props), children);
};
TabContentBody.displayName = "TabContentBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabTitleIcon.js
var React277 = __toESM(require_react());
var TabTitleIcon = (_a) => {
  var { children, className = "" } = _a, props = __rest(_a, ["children", "className"]);
  return React277.createElement("span", Object.assign({ className: css(tabs_default.tabsItemIcon, className) }, props), children);
};
TabTitleIcon.displayName = "TabTitleIcon";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tile/Tile.js
var React278 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Tile/tile.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Tile/tile.css";
var tile_default = {
  "modifiers": {
    "selected": "pf-m-selected",
    "disabled": "pf-m-disabled",
    "displayLg": "pf-m-display-lg",
    "stacked": "pf-m-stacked"
  },
  "themeDark": "pf-theme-dark",
  "tile": "pf-c-tile",
  "tileBody": "pf-c-tile__body",
  "tileHeader": "pf-c-tile__header",
  "tileIcon": "pf-c-tile__icon",
  "tileTitle": "pf-c-tile__title"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Tile/Tile.js
var Tile = (_a) => {
  var { children, title, icon, isStacked, isSelected, isDisabled, isDisplayLarge, className } = _a, props = __rest(_a, ["children", "title", "icon", "isStacked", "isSelected", "isDisabled", "isDisplayLarge", "className"]);
  return React278.createElement(
    "div",
    Object.assign({ role: "option", "aria-selected": isSelected }, isDisabled && { "aria-disabled": isDisabled }, { className: css(tile_default.tile, isSelected && tile_default.modifiers.selected, isDisabled && tile_default.modifiers.disabled, isDisplayLarge && tile_default.modifiers.displayLg, className), tabIndex: 0 }, props),
    React278.createElement(
      "div",
      { className: css(tile_default.tileHeader, isStacked && tile_default.modifiers.stacked) },
      icon && React278.createElement("div", { className: css(tile_default.tileIcon) }, icon),
      React278.createElement("div", { className: css(tile_default.tileTitle) }, title)
    ),
    children && React278.createElement("div", { className: css(tile_default.tileBody) }, children)
  );
};
Tile.displayName = "Tile";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TimePicker/TimePicker.js
var React279 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TimePicker/TimePickerUtils.js
var amSuffix = " AM";
var pmSuffix = " PM";
var makeTimeOptions = (stepMinutes, hour12, delimiter, minTime, maxTime, includeSeconds) => {
  const res = [];
  const iter = new Date((/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0));
  const iterDay = iter.getDay();
  while (iter.getDay() === iterDay) {
    let hour = iter.getHours();
    let suffix = amSuffix;
    if (hour12) {
      if (hour === 0) {
        hour = 12;
      } else if (hour >= 12) {
        suffix = pmSuffix;
      }
      if (hour > 12) {
        hour %= 12;
      }
    }
    hour = hour12 ? hour.toString() : hour.toString().padStart(2, "0");
    const minutes = iter.getMinutes().toString().padStart(2, "0");
    const timeOption = `${hour}${delimiter}${minutes}${hour12 ? suffix : ""}`;
    if (isWithinMinMax(minTime, maxTime, timeOption, delimiter, includeSeconds)) {
      res.push(timeOption);
    }
    iter.setMinutes(iter.getMinutes() + stepMinutes);
  }
  return res;
};
var parseTime = (time, timeRegex, delimiter, is12Hour, includeSeconds) => {
  const date = new Date(time);
  if (!isNaN(date.getDate()) && (time instanceof Date || time.includes("T"))) {
    const hours = is12Hour ? `${date.getHours() > 12 ? date.getHours() - 12 : date.getHours()}` : `${date.getHours()}`.padStart(2, "0");
    const minutes = `${date.getMinutes()}`.padStart(2, "0");
    const seconds = includeSeconds ? `${date.getSeconds()}`.padStart(2, "0") : "";
    const secondsWithDelimiter = seconds ? `${delimiter}${seconds}` : "";
    let ampm = "";
    if (is12Hour && date.getHours() > 11) {
      ampm = pmSuffix;
    } else if (is12Hour) {
      ampm = amSuffix;
    }
    return `${hours}${delimiter}${minutes}${secondsWithDelimiter}${ampm}`;
  } else if (typeof time === "string") {
    time = time.trim();
    if (time !== "" && validateTime(time, timeRegex, delimiter, is12Hour)) {
      const [, hours, minutes, seconds, suffix = ""] = timeRegex.exec(time);
      const secondsWithDelimiter = includeSeconds ? `${delimiter}${seconds !== null && seconds !== void 0 ? seconds : "00"}` : "";
      let ampm = "";
      if (is12Hour) {
        const uppercaseSuffix = suffix.toUpperCase();
        if (uppercaseSuffix === amSuffix.toUpperCase().trim()) {
          ampm = amSuffix;
        } else if (uppercaseSuffix === pmSuffix.toUpperCase().trim()) {
          ampm = pmSuffix;
        } else {
          ampm = (/* @__PURE__ */ new Date()).getHours() > 11 ? pmSuffix : amSuffix;
        }
      }
      return `${hours}${delimiter}${minutes}${secondsWithDelimiter}${ampm}`;
    }
  }
  return time.toString();
};
var validateTime = (time, timeRegex, delimiter, is12Hour) => {
  const date = new Date(time);
  if (!isNaN(date.getDate()) && time.includes("T")) {
    return true;
  }
  const hours = parseInt(time.split(delimiter)[0]);
  const validHours = hours >= (is12Hour ? 1 : 0) && hours <= (is12Hour ? 12 : 23);
  return time === "" || timeRegex.test(time) && validHours;
};
var getHours = (time, timeRegex) => {
  const parts = time.match(timeRegex);
  if (parts && parts.length) {
    if (/pm/i.test(parts[4])) {
      return parseInt(parts[1]) === 12 ? parseInt(parts[1]) : parseInt(parts[1]) + 12;
    }
    if (/am/i.test(parts[4])) {
      return parseInt(parts[1]) === 12 ? 0 : parseInt(parts[1]);
    }
    return parseInt(parts[1]);
  }
  return null;
};
var getMinutes = (time, timeRegex) => {
  const parts = time.match(timeRegex);
  return parts && parts.length ? parseInt(parts[2]) : null;
};
var getSeconds = (time, timeRegex) => {
  var _a;
  const seconds = (_a = time.match(timeRegex)) === null || _a === void 0 ? void 0 : _a[3];
  return seconds ? parseInt(seconds) : null;
};
var isWithinMinMax = (minTime, maxTime, time, delimiter, includeSeconds) => {
  if (time.trim() === "") {
    return true;
  }
  const min24HourTime = convertTo24Hour(minTime, delimiter, includeSeconds);
  const selected24HourTime = convertTo24Hour(time, delimiter, includeSeconds);
  const max24HourTime = convertTo24Hour(maxTime, delimiter, includeSeconds);
  return min24HourTime <= selected24HourTime && selected24HourTime <= max24HourTime;
};
var convertTo24Hour = (time, delimiter, includeSeconds) => {
  const timeReg = new RegExp(`^\\s*(\\d\\d?)${delimiter}([0-5]\\d)${delimiter}?([0-5]\\d)?\\s*([AaPp][Mm])?\\s*$`);
  const regMatches = timeReg.exec(time);
  if (!regMatches || !regMatches.length) {
    return;
  }
  let hours = regMatches[1].padStart(2, "0");
  const minutes = regMatches[2];
  let seconds = regMatches[3] ? `${delimiter}${regMatches[3]}` : "";
  if (!seconds && includeSeconds) {
    seconds = `${delimiter}00`;
  }
  const suffix = regMatches[4] || "";
  if (suffix.toUpperCase() === "PM" && hours !== "12") {
    hours = `${parseInt(hours) + 12}`;
  } else if (suffix.toUpperCase() === "AM" && hours === "12") {
    hours = "00";
  }
  return `${hours}${delimiter}${minutes}${seconds}`;
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TimePicker/TimePicker.js
var TimePicker = class extends React279.Component {
  constructor(props) {
    super(props);
    this.baseComponentRef = React279.createRef();
    this.toggleRef = React279.createRef();
    this.inputRef = React279.createRef();
    this.menuRef = React279.createRef();
    this.onDocClick = (event) => {
      var _a, _b, _c, _d;
      const clickedOnToggle = (_b = (_a = this.toggleRef) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.contains(event.target);
      const clickedWithinMenu = (_d = (_c = this.menuRef) === null || _c === void 0 ? void 0 : _c.current) === null || _d === void 0 ? void 0 : _d.contains(event.target);
      if (this.state.isTimeOptionsOpen && !(clickedOnToggle || clickedWithinMenu)) {
        this.onToggle(false);
      }
    };
    this.handleGlobalKeys = (event) => {
      var _a, _b, _c, _d;
      const { isTimeOptionsOpen, focusedIndex, scrollIndex } = this.state;
      if ((_b = (_a = this.inputRef) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.contains(event.target)) {
        if (!isTimeOptionsOpen && event.key !== KeyTypes.Tab && event.key !== KeyTypes.Escape) {
          this.onToggle(true);
        } else if (isTimeOptionsOpen) {
          if (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) {
            this.onToggle(false);
          } else if (event.key === KeyTypes.Enter) {
            if (focusedIndex !== null) {
              this.focusSelection(focusedIndex);
              event.stopPropagation();
            } else {
              this.onToggle(false);
            }
          } else if (event.key === KeyTypes.ArrowDown || event.key === KeyTypes.ArrowUp) {
            this.focusSelection(scrollIndex);
            this.updateFocusedIndex(0);
            event.preventDefault();
          }
        }
      } else if ((_d = (_c = this.menuRef) === null || _c === void 0 ? void 0 : _c.current) === null || _d === void 0 ? void 0 : _d.contains(event.target)) {
        if (event.key === KeyTypes.ArrowDown) {
          this.updateFocusedIndex(1);
          event.preventDefault();
        } else if (event.key === KeyTypes.ArrowUp) {
          this.updateFocusedIndex(-1);
          event.preventDefault();
        } else if (event.key === KeyTypes.Escape || event.key === KeyTypes.Tab) {
          this.inputRef.current.focus();
          this.onToggle(false);
        }
      }
    };
    this.updateFocusedIndex = (increment) => {
      this.setState((prevState) => {
        const maxIndex = this.getOptions().length - 1;
        let nextIndex = prevState.focusedIndex !== null ? prevState.focusedIndex + increment : prevState.scrollIndex + increment;
        if (nextIndex < 0) {
          nextIndex = maxIndex;
        } else if (nextIndex > maxIndex) {
          nextIndex = 0;
        }
        this.scrollToIndex(nextIndex);
        return {
          focusedIndex: nextIndex
        };
      });
    };
    this.getIndexToScroll = (index) => {
      if (this.props.menuAppendTo === "inline") {
        return index > 0 ? index - 1 : 0;
      }
      return index;
    };
    this.scrollToIndex = (index) => {
      this.getOptions()[index].closest(`.${menu_default.menuContent}`).scrollTop = this.getOptions()[this.getIndexToScroll(index)].offsetTop;
    };
    this.focusSelection = (index) => {
      var _a;
      const indexToFocus = index !== -1 ? index : 0;
      if ((_a = this.menuRef) === null || _a === void 0 ? void 0 : _a.current) {
        this.getOptions()[indexToFocus].querySelector(`.${menu_default.menuItem}`).focus();
      }
    };
    this.scrollToSelection = (time2) => {
      const { delimiter: delimiter2, is24Hour: is24Hour2 } = this.props;
      let splitTime = time2.split(this.props.delimiter);
      let focusedIndex = null;
      if (splitTime.length < 2) {
        time2 = `${time2}${delimiter2}00`;
        splitTime = time2.split(delimiter2);
      } else if (splitTime.length > 2) {
        time2 = parseTime(time2, this.state.timeRegex, delimiter2, !is24Hour2, false);
        splitTime = time2.split(delimiter2);
      }
      if (!is24Hour2 && splitTime.length > 1 && splitTime[1].length < 2) {
        const minutes = splitTime[1].length === 0 ? "00" : splitTime[1] + "0";
        time2 = `${splitTime[0]}${delimiter2}${minutes}${(/* @__PURE__ */ new Date()).getHours() > 11 ? pmSuffix : amSuffix}`;
      } else if (!is24Hour2 && splitTime.length > 1 && splitTime[1].length === 2 && !time2.toUpperCase().includes(amSuffix.toUpperCase().trim()) && !time2.toUpperCase().includes(pmSuffix.toUpperCase().trim())) {
        time2 = `${time2}${(/* @__PURE__ */ new Date()).getHours() > 11 ? pmSuffix : amSuffix}`;
      }
      let scrollIndex = this.getOptions().findIndex((option) => option.textContent === time2);
      if (scrollIndex !== -1) {
        this.scrollToIndex(scrollIndex);
        focusedIndex = scrollIndex;
      } else if (splitTime.length === 2) {
        let amPm = "";
        if (!is24Hour2) {
          if (splitTime[1].toUpperCase().includes("P")) {
            amPm = pmSuffix;
          } else if (splitTime[1].toUpperCase().includes("A")) {
            amPm = amSuffix;
          }
        }
        time2 = `${splitTime[0]}${delimiter2}00${amPm}`;
        scrollIndex = this.getOptions().findIndex((option) => option.textContent === time2);
        if (scrollIndex !== -1) {
          this.scrollToIndex(scrollIndex);
        }
      }
      this.setState({
        focusedIndex,
        scrollIndex
      });
    };
    this.getRegExp = (includeSeconds2 = true) => {
      const { is24Hour: is24Hour2, delimiter: delimiter2 } = this.props;
      let baseRegex = `\\s*(\\d\\d?)${delimiter2}([0-5]\\d)`;
      if (includeSeconds2) {
        baseRegex += `${delimiter2}?([0-5]\\d)?`;
      }
      return new RegExp(`^${baseRegex}${is24Hour2 ? "" : "\\s*([AaPp][Mm])?"}\\s*$`);
    };
    this.getOptions = () => {
      var _a;
      return ((_a = this.menuRef) === null || _a === void 0 ? void 0 : _a.current) ? Array.from(this.menuRef.current.querySelectorAll(`.${menu_default.menuListItem}`)) : [];
    };
    this.isValidFormat = (time2) => {
      if (this.props.validateTime) {
        return this.props.validateTime(time2);
      }
      const { delimiter: delimiter2, is24Hour: is24Hour2, includeSeconds: includeSeconds2 } = this.props;
      return validateTime(time2, this.getRegExp(includeSeconds2), delimiter2, !is24Hour2);
    };
    this.isValidTime = (time2) => {
      const { delimiter: delimiter2, includeSeconds: includeSeconds2 } = this.props;
      const { minTimeState, maxTimeState } = this.state;
      return isWithinMinMax(minTimeState, maxTimeState, time2, delimiter2, includeSeconds2);
    };
    this.isValid = (time2) => this.isValidFormat(time2) && this.isValidTime(time2);
    this.onToggle = (isOpen2) => {
      this.setState((prevState) => {
        const { timeRegex: timeRegex2, isInvalid, timeState } = prevState;
        const { delimiter: delimiter2, is24Hour: is24Hour2, includeSeconds: includeSeconds2, onChange } = this.props;
        const time2 = parseTime(timeState, timeRegex2, delimiter2, !is24Hour2, includeSeconds2);
        if (onChange && !isOpen2 && time2 !== timeState) {
          onChange(null, time2, getHours(time2, timeRegex2), getMinutes(time2, timeRegex2), getSeconds(time2, timeRegex2), this.isValid(time2));
        }
        return {
          isTimeOptionsOpen: isOpen2,
          timeState: time2,
          isInvalid: isOpen2 ? isInvalid : !this.isValid(time2)
        };
      });
      this.props.setIsOpen(isOpen2);
      if (!isOpen2) {
        this.inputRef.current.focus();
      }
    };
    this.onSelect = (e) => {
      const { timeRegex: timeRegex2, timeState } = this.state;
      const { delimiter: delimiter2, is24Hour: is24Hour2, includeSeconds: includeSeconds2, setIsOpen } = this.props;
      const time2 = parseTime(e.target.textContent, timeRegex2, delimiter2, !is24Hour2, includeSeconds2);
      if (time2 !== timeState) {
        this.onInputChange(time2, e);
      }
      this.inputRef.current.focus();
      this.setState({
        isTimeOptionsOpen: false,
        isInvalid: false
      });
      setIsOpen(false);
    };
    this.onInputClick = (e) => {
      if (!this.state.isTimeOptionsOpen) {
        this.onToggle(true);
      }
      e.stopPropagation();
    };
    this.onInputChange = (newTime, event) => {
      const { onChange } = this.props;
      const { timeRegex: timeRegex2 } = this.state;
      if (onChange) {
        onChange(event, newTime, getHours(newTime, timeRegex2), getMinutes(newTime, timeRegex2), getSeconds(newTime, timeRegex2), this.isValid(newTime));
      }
      this.scrollToSelection(newTime);
      this.setState({
        timeState: newTime
      });
    };
    const { is24Hour, delimiter, time, includeSeconds, isOpen } = this.props;
    let { minTime, maxTime } = this.props;
    if (minTime === "") {
      const minSeconds = includeSeconds ? `${delimiter}00` : "";
      minTime = is24Hour ? `00${delimiter}00${minSeconds}` : `12${delimiter}00${minSeconds} AM`;
    }
    if (maxTime === "") {
      const maxSeconds = includeSeconds ? `${delimiter}59` : "";
      maxTime = is24Hour ? `23${delimiter}59${maxSeconds}` : `11${delimiter}59${maxSeconds} PM`;
    }
    const timeRegex = this.getRegExp();
    this.state = {
      isInvalid: false,
      isTimeOptionsOpen: isOpen,
      timeState: parseTime(time, timeRegex, delimiter, !is24Hour, includeSeconds),
      focusedIndex: null,
      scrollIndex: 0,
      timeRegex,
      minTimeState: parseTime(minTime, timeRegex, delimiter, !is24Hour, includeSeconds),
      maxTimeState: parseTime(maxTime, timeRegex, delimiter, !is24Hour, includeSeconds)
    };
  }
  componentDidMount() {
    document.addEventListener("mousedown", this.onDocClick);
    document.addEventListener("touchstart", this.onDocClick);
    document.addEventListener("keydown", this.handleGlobalKeys);
    this.setState({ isInvalid: !this.isValid(this.state.timeState) });
  }
  componentWillUnmount() {
    document.removeEventListener("mousedown", this.onDocClick);
    document.removeEventListener("touchstart", this.onDocClick);
    document.removeEventListener("keydown", this.handleGlobalKeys);
  }
  componentDidUpdate(prevProps, prevState) {
    const { timeState, isTimeOptionsOpen, isInvalid, timeRegex } = this.state;
    const { time, is24Hour, delimiter, includeSeconds, isOpen, minTime, maxTime } = this.props;
    if (prevProps.isOpen !== isOpen) {
      this.onToggle(isOpen);
    }
    if (isTimeOptionsOpen && !prevState.isTimeOptionsOpen && timeState && !isInvalid) {
      this.scrollToSelection(timeState);
    }
    if (delimiter !== prevProps.delimiter) {
      this.setState({
        timeRegex: this.getRegExp()
      });
    }
    if (time !== "" && time !== prevProps.time) {
      const parsedTime = parseTime(time, timeRegex, delimiter, !is24Hour, includeSeconds);
      this.setState({
        timeState: parsedTime,
        isInvalid: !this.isValid(parsedTime)
      });
    }
    if (minTime !== "" && minTime !== prevProps.minTime) {
      this.setState({
        minTimeState: parseTime(minTime, timeRegex, delimiter, !is24Hour, includeSeconds)
      });
    }
    if (maxTime !== "" && maxTime !== prevProps.maxTime) {
      this.setState({
        maxTimeState: parseTime(maxTime, timeRegex, delimiter, !is24Hour, includeSeconds)
      });
    }
  }
  render() {
    const _a = this.props, {
      "aria-label": ariaLabel,
      isDisabled,
      className,
      placeholder,
      id,
      menuAppendTo,
      is24Hour,
      invalidFormatErrorMessage,
      invalidMinMaxErrorMessage,
      stepMinutes,
      width,
      delimiter,
      inputProps,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      onChange,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      setIsOpen,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      isOpen,
      time,
      validateTime: validateTime2,
      minTime,
      maxTime,
      includeSeconds,
      /* eslint-enable @typescript-eslint/no-unused-vars */
      removeFindDomNode,
      zIndex
    } = _a, props = __rest(_a, ["aria-label", "isDisabled", "className", "placeholder", "id", "menuAppendTo", "is24Hour", "invalidFormatErrorMessage", "invalidMinMaxErrorMessage", "stepMinutes", "width", "delimiter", "inputProps", "onChange", "setIsOpen", "isOpen", "time", "validateTime", "minTime", "maxTime", "includeSeconds", "removeFindDomNode", "zIndex"]);
    const { timeState, isTimeOptionsOpen, isInvalid, minTimeState, maxTimeState } = this.state;
    const style = { "--pf-c-date-picker__input--c-form-control--Width": width };
    const options = makeTimeOptions(stepMinutes, !is24Hour, delimiter, minTimeState, maxTimeState, includeSeconds);
    const isValidFormat = this.isValidFormat(timeState);
    const randomId = id || getUniqueId("time-picker");
    const getParentElement = () => {
      if (this.baseComponentRef && this.baseComponentRef.current) {
        return this.baseComponentRef.current.parentElement;
      }
      return null;
    };
    const menuContainer = React279.createElement(
      Menu,
      { ref: this.menuRef, isScrollable: true },
      React279.createElement(
        MenuContent,
        { maxMenuHeight: "200px" },
        React279.createElement(MenuList, { "aria-label": ariaLabel }, options.map((option, index) => React279.createElement(MenuItem, { onClick: this.onSelect, key: option, id: `${randomId}-option-${index}` }, option)))
      )
    );
    const textInput = React279.createElement(TextInput, Object.assign({ "aria-haspopup": "menu", className: css(form_control_default.formControl), id: `${randomId}-input`, "aria-label": ariaLabel, validated: isInvalid ? "error" : "default", placeholder, value: timeState || "", type: "text", iconVariant: "clock", onClick: this.onInputClick, onChange: this.onInputChange, autoComplete: "off", isDisabled, ref: this.inputRef }, inputProps));
    let calculatedAppendTo;
    switch (menuAppendTo) {
      case "inline":
        calculatedAppendTo = () => this.toggleRef.current;
        break;
      case "parent":
        calculatedAppendTo = getParentElement;
        break;
      default:
        calculatedAppendTo = menuAppendTo;
    }
    return React279.createElement(
      "div",
      { ref: this.baseComponentRef, className: css(date_picker_default.datePicker, className) },
      React279.createElement(
        "div",
        Object.assign({ className: css(date_picker_default.datePickerInput), style }, props),
        React279.createElement(
          InputGroup,
          null,
          React279.createElement(
            "div",
            { id: randomId },
            React279.createElement(
              "div",
              { ref: this.toggleRef, style: { paddingLeft: "0" } },
              React279.createElement(Popper, { appendTo: calculatedAppendTo, trigger: textInput, popper: menuContainer, isVisible: isTimeOptionsOpen, removeFindDomNode, zIndex })
            )
          )
        ),
        isInvalid && React279.createElement("div", { className: css(date_picker_default.datePickerHelperText, date_picker_default.modifiers.error) }, !isValidFormat ? invalidFormatErrorMessage : invalidMinMaxErrorMessage)
      )
    );
  }
};
TimePicker.displayName = "TimePicker";
TimePicker.defaultProps = {
  className: "",
  isDisabled: false,
  time: "",
  is24Hour: false,
  invalidFormatErrorMessage: "Invalid time format",
  invalidMinMaxErrorMessage: "Invalid time entered",
  placeholder: "hh:mm",
  delimiter: ":",
  "aria-label": "Time picker",
  width: "150px",
  menuAppendTo: "inline",
  stepMinutes: 30,
  inputProps: {},
  minTime: "",
  maxTime: "",
  isOpen: false,
  setIsOpen: () => {
  },
  removeFindDomNode: false,
  zIndex: 9999
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Timestamp/Timestamp.js
var React280 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Timestamp/timestamp.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Timestamp/timestamp.css";
var timestamp_default = {
  "modifiers": {
    "helpText": "pf-m-help-text"
  },
  "timestamp": "pf-c-timestamp"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Timestamp/Timestamp.js
var TimestampFormat;
(function(TimestampFormat2) {
  TimestampFormat2["full"] = "full";
  TimestampFormat2["long"] = "long";
  TimestampFormat2["medium"] = "medium";
  TimestampFormat2["short"] = "short";
})(TimestampFormat || (TimestampFormat = {}));
var TimestampTooltipVariant;
(function(TimestampTooltipVariant2) {
  TimestampTooltipVariant2["default"] = "default";
  TimestampTooltipVariant2["custom"] = "custom";
})(TimestampTooltipVariant || (TimestampTooltipVariant = {}));
var Timestamp = (_a) => {
  var { children, className, customFormat, date: dateProp, dateFormat, displaySuffix = "", is12Hour, locale, timeFormat, tooltip } = _a, props = __rest(_a, ["children", "className", "customFormat", "date", "dateFormat", "displaySuffix", "is12Hour", "locale", "timeFormat", "tooltip"]);
  const [date, setDate] = React280.useState(() => {
    const initDate = new Date(dateProp);
    if (isValidDate(initDate)) {
      return initDate;
    }
    return /* @__PURE__ */ new Date();
  });
  React280.useEffect(() => {
    const dateFromProp = new Date(dateProp);
    if (isValidDate(dateFromProp) && dateFromProp.toString() !== new Date(date).toString()) {
      setDate(dateFromProp);
    } else if (!dateProp) {
      setDate(/* @__PURE__ */ new Date());
    }
  }, [dateProp]);
  const hasTimeFormat = timeFormat && !customFormat;
  const formatOptions = Object.assign(Object.assign(Object.assign({}, dateFormat && !customFormat && { dateStyle: dateFormat }), customFormat && Object.assign({}, customFormat)), is12Hour !== void 0 && { hour12: is12Hour });
  const dateAsLocaleString = new Date(date).toLocaleString(locale, Object.assign(Object.assign({}, formatOptions), hasTimeFormat && { timeStyle: timeFormat }));
  const defaultDisplay = `${dateAsLocaleString}${displaySuffix ? " " + displaySuffix : ""}`;
  const utcTimeFormat = timeFormat !== "short" ? "medium" : "short";
  const convertToUTCString = (date2) => new Date(date2).toUTCString().slice(0, -3);
  const utcDateString = new Date(convertToUTCString(date)).toLocaleString(locale, Object.assign(Object.assign({}, formatOptions), hasTimeFormat && { timeStyle: utcTimeFormat }));
  const defaultTooltipContent = `${utcDateString}${(tooltip === null || tooltip === void 0 ? void 0 : tooltip.suffix) ? " " + tooltip.suffix : " UTC"}`;
  const { dateTime } = props, propsWithoutDateTime = __rest(props, ["dateTime"]);
  const timestamp = React280.createElement(
    "span",
    Object.assign({ className: css(timestamp_default.timestamp, tooltip && timestamp_default.modifiers.helpText, className) }, tooltip && { tabIndex: 0 }, propsWithoutDateTime),
    React280.createElement("time", { className: "pf-c-timestamp__text", dateTime: dateTime || new Date(date).toISOString() }, !children ? defaultDisplay : children)
  );
  return tooltip ? React280.createElement(Tooltip, Object.assign({ content: tooltip.variant === TimestampTooltipVariant.default ? defaultTooltipContent : tooltip.content }, tooltip.tooltipProps), timestamp) : timestamp;
};
Timestamp.displayName = "Timestamp";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ToggleGroup/ToggleGroup.js
var React283 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ToggleGroup/toggle-group.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/ToggleGroup/toggle-group.css";
var toggle_group_default = {
  "modifiers": {
    "compact": "pf-m-compact",
    "selected": "pf-m-selected",
    "disabled": "pf-m-disabled"
  },
  "themeDark": "pf-theme-dark",
  "toggleGroup": "pf-c-toggle-group",
  "toggleGroupButton": "pf-c-toggle-group__button",
  "toggleGroupIcon": "pf-c-toggle-group__icon",
  "toggleGroupItem": "pf-c-toggle-group__item",
  "toggleGroupText": "pf-c-toggle-group__text"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ToggleGroup/ToggleGroupItem.js
var React282 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ToggleGroup/ToggleGroupItemElement.js
var React281 = __toESM(require_react());
var ToggleGroupItemVariant;
(function(ToggleGroupItemVariant2) {
  ToggleGroupItemVariant2["icon"] = "icon";
  ToggleGroupItemVariant2["text"] = "text";
})(ToggleGroupItemVariant || (ToggleGroupItemVariant = {}));
var ToggleGroupItemElement = ({ variant, children }) => React281.createElement("span", { className: css(variant === "icon" && toggle_group_default.toggleGroupIcon, variant === "text" && toggle_group_default.toggleGroupText) }, children);
ToggleGroupItemElement.displayName = "ToggleGroupItemElement";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ToggleGroup/ToggleGroupItem.js
var ToggleGroupItem = (_a) => {
  var { text, icon, className, isDisabled = false, isSelected = false, "aria-label": ariaLabel = "", onChange = () => {
  }, buttonId = "" } = _a, props = __rest(_a, ["text", "icon", "className", "isDisabled", "isSelected", "aria-label", "onChange", "buttonId"]);
  const handleChange = (event) => {
    onChange(!isSelected, event);
  };
  if (!ariaLabel && icon && !text) {
    console.warn("An accessible aria-label is required when using the toggle group item icon variant.");
  }
  return React282.createElement(
    "div",
    Object.assign({ className: css(toggle_group_default.toggleGroupItem, className) }, props),
    React282.createElement(
      "button",
      Object.assign({ type: "button", className: css(toggle_group_default.toggleGroupButton, isSelected && toggle_group_default.modifiers.selected), "aria-pressed": isSelected, onClick: handleChange }, ariaLabel && { "aria-label": ariaLabel }, isDisabled && { disabled: true }, buttonId && { id: buttonId }),
      icon ? React282.createElement(ToggleGroupItemElement, { variant: ToggleGroupItemVariant.icon }, icon) : null,
      text ? React282.createElement(ToggleGroupItemElement, { variant: ToggleGroupItemVariant.text }, text) : null
    )
  );
};
ToggleGroupItem.displayName = "ToggleGroupItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/ToggleGroup/ToggleGroup.js
var ToggleGroup = (_a) => {
  var { className, children, isCompact = false, areAllGroupsDisabled = false, "aria-label": ariaLabel } = _a, props = __rest(_a, ["className", "children", "isCompact", "areAllGroupsDisabled", "aria-label"]);
  const toggleGroupItemList = React283.Children.map(children, (child) => {
    const childCompName = child.type.name;
    return childCompName !== ToggleGroupItem.name ? child : React283.cloneElement(child, areAllGroupsDisabled ? { isDisabled: true } : {});
  });
  return React283.createElement("div", Object.assign({ className: css(toggle_group_default.toggleGroup, isCompact && toggle_group_default.modifiers.compact, className), role: "group", "aria-label": ariaLabel }, props), toggleGroupItemList);
};
ToggleGroup.displayName = "ToggleGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js
var React288 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Toolbar/toolbar.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Toolbar/toolbar.css";
var toolbar_default = {
  "button": "pf-c-button",
  "chipGroup": "pf-c-chip-group",
  "divider": "pf-c-divider",
  "modifiers": {
    "hidden": "pf-m-hidden",
    "hiddenOnSm": "pf-m-hidden-on-sm",
    "visibleOnSm": "pf-m-visible-on-sm",
    "hiddenOnMd": "pf-m-hidden-on-md",
    "visibleOnMd": "pf-m-visible-on-md",
    "hiddenOnLg": "pf-m-hidden-on-lg",
    "visibleOnLg": "pf-m-visible-on-lg",
    "hiddenOnXl": "pf-m-hidden-on-xl",
    "visibleOnXl": "pf-m-visible-on-xl",
    "hiddenOn_2xl": "pf-m-hidden-on-2xl",
    "visibleOn_2xl": "pf-m-visible-on-2xl",
    "pageInsets": "pf-m-page-insets",
    "sticky": "pf-m-sticky",
    "fullHeight": "pf-m-full-height",
    "static": "pf-m-static",
    "vertical": "pf-m-vertical",
    "buttonGroup": "pf-m-button-group",
    "iconButtonGroup": "pf-m-icon-button-group",
    "filterGroup": "pf-m-filter-group",
    "toggleGroup": "pf-m-toggle-group",
    "overflowMenu": "pf-m-overflow-menu",
    "bulkSelect": "pf-m-bulk-select",
    "expandAll": "pf-m-expand-all",
    "expanded": "pf-m-expanded",
    "searchFilter": "pf-m-search-filter",
    "chipGroup": "pf-m-chip-group",
    "label": "pf-m-label",
    "pagination": "pf-m-pagination",
    "overflowContainer": "pf-m-overflow-container",
    "chipContainer": "pf-m-chip-container",
    "plain": "pf-m-plain",
    "show": "pf-m-show",
    "showOnSm": "pf-m-show-on-sm",
    "showOnMd": "pf-m-show-on-md",
    "showOnLg": "pf-m-show-on-lg",
    "showOnXl": "pf-m-show-on-xl",
    "showOn_2xl": "pf-m-show-on-2xl",
    "alignRight": "pf-m-align-right",
    "alignLeft": "pf-m-align-left",
    "nowrap": "pf-m-nowrap",
    "wrap": "pf-m-wrap",
    "alignRightOnSm": "pf-m-align-right-on-sm",
    "alignLeftOnSm": "pf-m-align-left-on-sm",
    "nowrapOnSm": "pf-m-nowrap-on-sm",
    "wrapOnSm": "pf-m-wrap-on-sm",
    "alignRightOnMd": "pf-m-align-right-on-md",
    "alignLeftOnMd": "pf-m-align-left-on-md",
    "nowrapOnMd": "pf-m-nowrap-on-md",
    "wrapOnMd": "pf-m-wrap-on-md",
    "alignRightOnLg": "pf-m-align-right-on-lg",
    "alignLeftOnLg": "pf-m-align-left-on-lg",
    "nowrapOnLg": "pf-m-nowrap-on-lg",
    "wrapOnLg": "pf-m-wrap-on-lg",
    "alignRightOnXl": "pf-m-align-right-on-xl",
    "alignLeftOnXl": "pf-m-align-left-on-xl",
    "nowrapOnXl": "pf-m-nowrap-on-xl",
    "wrapOnXl": "pf-m-wrap-on-xl",
    "alignRightOn_2xl": "pf-m-align-right-on-2xl",
    "alignLeftOn_2xl": "pf-m-align-left-on-2xl",
    "nowrapOn_2xl": "pf-m-nowrap-on-2xl",
    "wrapOn_2xl": "pf-m-wrap-on-2xl",
    "spaceItemsNone": "pf-m-space-items-none",
    "spaceItemsSm": "pf-m-space-items-sm",
    "spaceItemsMd": "pf-m-space-items-md",
    "spaceItemsLg": "pf-m-space-items-lg",
    "spaceItemsNoneOnSm": "pf-m-space-items-none-on-sm",
    "spaceItemsSmOnSm": "pf-m-space-items-sm-on-sm",
    "spaceItemsMdOnSm": "pf-m-space-items-md-on-sm",
    "spaceItemsLgOnSm": "pf-m-space-items-lg-on-sm",
    "spaceItemsNoneOnMd": "pf-m-space-items-none-on-md",
    "spaceItemsSmOnMd": "pf-m-space-items-sm-on-md",
    "spaceItemsMdOnMd": "pf-m-space-items-md-on-md",
    "spaceItemsLgOnMd": "pf-m-space-items-lg-on-md",
    "spaceItemsNoneOnLg": "pf-m-space-items-none-on-lg",
    "spaceItemsSmOnLg": "pf-m-space-items-sm-on-lg",
    "spaceItemsMdOnLg": "pf-m-space-items-md-on-lg",
    "spaceItemsLgOnLg": "pf-m-space-items-lg-on-lg",
    "spaceItemsNoneOnXl": "pf-m-space-items-none-on-xl",
    "spaceItemsSmOnXl": "pf-m-space-items-sm-on-xl",
    "spaceItemsMdOnXl": "pf-m-space-items-md-on-xl",
    "spaceItemsLgOnXl": "pf-m-space-items-lg-on-xl",
    "spaceItemsNoneOn_2xl": "pf-m-space-items-none-on-2xl",
    "spaceItemsSmOn_2xl": "pf-m-space-items-sm-on-2xl",
    "spaceItemsMdOn_2xl": "pf-m-space-items-md-on-2xl",
    "spaceItemsLgOn_2xl": "pf-m-space-items-lg-on-2xl",
    "spacerNone": "pf-m-spacer-none",
    "spacerSm": "pf-m-spacer-sm",
    "spacerMd": "pf-m-spacer-md",
    "spacerLg": "pf-m-spacer-lg",
    "spacerNoneOnSm": "pf-m-spacer-none-on-sm",
    "spacerSmOnSm": "pf-m-spacer-sm-on-sm",
    "spacerMdOnSm": "pf-m-spacer-md-on-sm",
    "spacerLgOnSm": "pf-m-spacer-lg-on-sm",
    "spacerNoneOnMd": "pf-m-spacer-none-on-md",
    "spacerSmOnMd": "pf-m-spacer-sm-on-md",
    "spacerMdOnMd": "pf-m-spacer-md-on-md",
    "spacerLgOnMd": "pf-m-spacer-lg-on-md",
    "spacerNoneOnLg": "pf-m-spacer-none-on-lg",
    "spacerSmOnLg": "pf-m-spacer-sm-on-lg",
    "spacerMdOnLg": "pf-m-spacer-md-on-lg",
    "spacerLgOnLg": "pf-m-spacer-lg-on-lg",
    "spacerNoneOnXl": "pf-m-spacer-none-on-xl",
    "spacerSmOnXl": "pf-m-spacer-sm-on-xl",
    "spacerMdOnXl": "pf-m-spacer-md-on-xl",
    "spacerLgOnXl": "pf-m-spacer-lg-on-xl",
    "spacerNoneOn_2xl": "pf-m-spacer-none-on-2xl",
    "spacerSmOn_2xl": "pf-m-spacer-sm-on-2xl",
    "spacerMdOn_2xl": "pf-m-spacer-md-on-2xl",
    "spacerLgOn_2xl": "pf-m-spacer-lg-on-2xl",
    "insetNone": "pf-m-inset-none",
    "insetSm": "pf-m-inset-sm",
    "insetMd": "pf-m-inset-md",
    "insetLg": "pf-m-inset-lg",
    "insetXl": "pf-m-inset-xl",
    "inset_2xl": "pf-m-inset-2xl",
    "insetNoneOnSm": "pf-m-inset-none-on-sm",
    "insetSmOnSm": "pf-m-inset-sm-on-sm",
    "insetMdOnSm": "pf-m-inset-md-on-sm",
    "insetLgOnSm": "pf-m-inset-lg-on-sm",
    "insetXlOnSm": "pf-m-inset-xl-on-sm",
    "inset_2xlOnSm": "pf-m-inset-2xl-on-sm",
    "insetNoneOnMd": "pf-m-inset-none-on-md",
    "insetSmOnMd": "pf-m-inset-sm-on-md",
    "insetMdOnMd": "pf-m-inset-md-on-md",
    "insetLgOnMd": "pf-m-inset-lg-on-md",
    "insetXlOnMd": "pf-m-inset-xl-on-md",
    "inset_2xlOnMd": "pf-m-inset-2xl-on-md",
    "insetNoneOnLg": "pf-m-inset-none-on-lg",
    "insetSmOnLg": "pf-m-inset-sm-on-lg",
    "insetMdOnLg": "pf-m-inset-md-on-lg",
    "insetLgOnLg": "pf-m-inset-lg-on-lg",
    "insetXlOnLg": "pf-m-inset-xl-on-lg",
    "inset_2xlOnLg": "pf-m-inset-2xl-on-lg",
    "insetNoneOnXl": "pf-m-inset-none-on-xl",
    "insetSmOnXl": "pf-m-inset-sm-on-xl",
    "insetMdOnXl": "pf-m-inset-md-on-xl",
    "insetLgOnXl": "pf-m-inset-lg-on-xl",
    "insetXlOnXl": "pf-m-inset-xl-on-xl",
    "inset_2xlOnXl": "pf-m-inset-2xl-on-xl",
    "insetNoneOn_2xl": "pf-m-inset-none-on-2xl",
    "insetSmOn_2xl": "pf-m-inset-sm-on-2xl",
    "insetMdOn_2xl": "pf-m-inset-md-on-2xl",
    "insetLgOn_2xl": "pf-m-inset-lg-on-2xl",
    "insetXlOn_2xl": "pf-m-inset-xl-on-2xl",
    "inset_2xlOn_2xl": "pf-m-inset-2xl-on-2xl"
  },
  "pagination": "pf-c-pagination",
  "toolbar": "pf-c-toolbar",
  "toolbarContent": "pf-c-toolbar__content",
  "toolbarContentSection": "pf-c-toolbar__content-section",
  "toolbarExpandAllIcon": "pf-c-toolbar__expand-all-icon",
  "toolbarExpandableContent": "pf-c-toolbar__expandable-content",
  "toolbarGroup": "pf-c-toolbar__group",
  "toolbarItem": "pf-c-toolbar__item",
  "toolbarToggle": "pf-c-toolbar__toggle"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarUtils.js
var React284 = __toESM(require_react());
var ToolbarContext = React284.createContext({
  isExpanded: false,
  toggleIsExpanded: () => {
  },
  chipGroupContentRef: null,
  updateNumberFilters: () => {
  },
  numberOfFilters: 0,
  clearAllFilters: () => {
  }
});
var ToolbarContentContext = React284.createContext({
  expandableContentRef: null,
  expandableContentId: "",
  chipContainerRef: null
});
var globalBreakpoints = {
  md: parseInt(global_breakpoint_md_default.value),
  lg: parseInt(global_breakpoint_lg_default.value),
  xl: parseInt(global_breakpoint_xl_default.value),
  "2xl": parseInt(global_breakpoint_2xl_default.value)
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarChipGroupContent.js
var React287 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarItem.js
var React285 = __toESM(require_react());
var ToolbarItemVariant;
(function(ToolbarItemVariant2) {
  ToolbarItemVariant2["separator"] = "separator";
  ToolbarItemVariant2["bulk-select"] = "bulk-select";
  ToolbarItemVariant2["overflow-menu"] = "overflow-menu";
  ToolbarItemVariant2["pagination"] = "pagination";
  ToolbarItemVariant2["search-filter"] = "search-filter";
  ToolbarItemVariant2["label"] = "label";
  ToolbarItemVariant2["chip-group"] = "chip-group";
  ToolbarItemVariant2["expand-all"] = "expand-all";
})(ToolbarItemVariant || (ToolbarItemVariant = {}));
var ToolbarItem = (_a) => {
  var { className, variant, visibility, visiblity, alignment, spacer, widths, id, children, isAllExpanded } = _a, props = __rest(_a, ["className", "variant", "visibility", "visiblity", "alignment", "spacer", "widths", "id", "children", "isAllExpanded"]);
  if (variant === ToolbarItemVariant.separator) {
    return React285.createElement(Divider, Object.assign({ className: css(toolbar_default.modifiers.vertical, className) }, props));
  }
  if (visiblity !== void 0) {
    console.warn("The ToolbarItem visiblity prop has been deprecated. Please use the correctly spelled visibility prop instead.");
  }
  const widthStyles = {};
  if (widths) {
    Object.entries(widths || {}).map(([breakpoint, value]) => widthStyles[`--pf-c-toolbar__item--Width${breakpoint !== "default" ? `-on-${breakpoint}` : ""}`] = value);
  }
  return React285.createElement(PageContext.Consumer, null, ({ width, getBreakpoint: getBreakpoint2 }) => React285.createElement("div", Object.assign({ className: css(toolbar_default.toolbarItem, variant && toolbar_default.modifiers[toCamel(variant)], isAllExpanded && toolbar_default.modifiers.expanded, formatBreakpointMods(visibility || visiblity, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(alignment, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(spacer, toolbar_default, "", getBreakpoint2(width)), className) }, variant === "label" && { "aria-hidden": true }, { id }, props, widths && { style: Object.assign(Object.assign({}, widthStyles), props.style) }), children));
};
ToolbarItem.displayName = "ToolbarItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarGroup.js
var React286 = __toESM(require_react());
var ToolbarGroupVariant;
(function(ToolbarGroupVariant2) {
  ToolbarGroupVariant2["filter-group"] = "filter-group";
  ToolbarGroupVariant2["icon-button-group"] = "icon-button-group";
  ToolbarGroupVariant2["button-group"] = "button-group";
})(ToolbarGroupVariant || (ToolbarGroupVariant = {}));
var ToolbarGroupWithRef = class extends React286.Component {
  render() {
    const _a = this.props, { visibility, visiblity, alignment, spacer, spaceItems, className, variant, children, innerRef } = _a, props = __rest(_a, ["visibility", "visiblity", "alignment", "spacer", "spaceItems", "className", "variant", "children", "innerRef"]);
    if (visiblity !== void 0) {
      console.warn("The ToolbarGroup visiblity prop has been deprecated. Please use the correctly spelled visibility prop instead.");
    }
    return React286.createElement(PageContext.Consumer, null, ({ width, getBreakpoint: getBreakpoint2 }) => React286.createElement("div", Object.assign({ className: css(toolbar_default.toolbarGroup, variant && toolbar_default.modifiers[toCamel(variant)], formatBreakpointMods(visibility || visiblity, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(alignment, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(spacer, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(spaceItems, toolbar_default, "", getBreakpoint2(width)), className) }, props, { ref: innerRef }), children));
  }
};
var ToolbarGroup = React286.forwardRef((props, ref) => React286.createElement(ToolbarGroupWithRef, Object.assign({}, props, { innerRef: ref })));

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarChipGroupContent.js
var ToolbarChipGroupContent = class extends React287.Component {
  render() {
    const _a = this.props, { className, isExpanded, chipGroupContentRef, clearAllFilters, showClearFiltersButton, clearFiltersButtonText, collapseListedFiltersBreakpoint, numberOfFilters, numberOfFiltersText, customChipGroupContent } = _a, props = __rest(_a, ["className", "isExpanded", "chipGroupContentRef", "clearAllFilters", "showClearFiltersButton", "clearFiltersButtonText", "collapseListedFiltersBreakpoint", "numberOfFilters", "numberOfFiltersText", "customChipGroupContent"]);
    const clearChipGroups = () => {
      clearAllFilters();
    };
    let collapseListedFilters = false;
    if (collapseListedFiltersBreakpoint === "all") {
      collapseListedFilters = true;
    } else if (canUseDOM) {
      collapseListedFilters = (canUseDOM ? window.innerWidth : 1200) < globalBreakpoints[collapseListedFiltersBreakpoint];
    }
    return React287.createElement(
      "div",
      Object.assign({ className: css(toolbar_default.toolbarContent, (numberOfFilters === 0 || isExpanded) && toolbar_default.modifiers.hidden, className) }, (numberOfFilters === 0 || isExpanded) && { hidden: true }, { ref: chipGroupContentRef }, props),
      React287.createElement(ToolbarGroup, Object.assign({ className: css(collapseListedFilters && toolbar_default.modifiers.hidden) }, collapseListedFilters && { hidden: true }, collapseListedFilters && { "aria-hidden": true })),
      collapseListedFilters && numberOfFilters > 0 && !isExpanded && React287.createElement(
        ToolbarGroup,
        null,
        React287.createElement(ToolbarItem, null, numberOfFiltersText(numberOfFilters))
      ),
      showClearFiltersButton && !isExpanded && !customChipGroupContent && React287.createElement(
        ToolbarItem,
        null,
        React287.createElement(Button, { variant: "link", onClick: clearChipGroups, isInline: true }, clearFiltersButtonText)
      ),
      customChipGroupContent && customChipGroupContent
    );
  }
};
ToolbarChipGroupContent.displayName = "ToolbarChipGroupContent";
ToolbarChipGroupContent.defaultProps = {
  clearFiltersButtonText: "Clear all filters",
  collapseListedFiltersBreakpoint: "lg",
  numberOfFiltersText: (numberOfFilters) => `${numberOfFilters} filters applied`
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js
var Toolbar = class _Toolbar extends React288.Component {
  constructor() {
    super(...arguments);
    this.chipGroupContentRef = React288.createRef();
    this.staticFilterInfo = {};
    this.state = {
      isManagedToggleExpanded: false,
      filterInfo: {},
      windowWidth: canUseDOM ? window.innerWidth : 1200,
      ouiaStateId: getDefaultOUIAId(_Toolbar.displayName)
    };
    this.isToggleManaged = () => !(this.props.isExpanded || !!this.props.toggleIsExpanded);
    this.toggleIsExpanded = () => {
      this.setState((prevState) => ({
        isManagedToggleExpanded: !prevState.isManagedToggleExpanded
      }));
    };
    this.closeExpandableContent = (e) => {
      if (e.target.innerWidth !== this.state.windowWidth) {
        this.setState(() => ({
          isManagedToggleExpanded: false,
          windowWidth: e.target.innerWidth
        }));
      }
    };
    this.updateNumberFilters = (categoryName, numberOfFilters) => {
      const filterInfoToUpdate = Object.assign({}, this.staticFilterInfo);
      if (!filterInfoToUpdate.hasOwnProperty(categoryName) || filterInfoToUpdate[categoryName] !== numberOfFilters) {
        filterInfoToUpdate[categoryName] = numberOfFilters;
        this.staticFilterInfo = filterInfoToUpdate;
        this.setState({ filterInfo: filterInfoToUpdate });
      }
    };
    this.getNumberOfFilters = () => Object.values(this.state.filterInfo).reduce((acc, cur) => acc + cur, 0);
    this.renderToolbar = (randomId) => {
      const _a = this.props, { clearAllFilters, clearFiltersButtonText, collapseListedFiltersBreakpoint, isExpanded: isExpandedProp, toggleIsExpanded, className, children, isFullHeight, isStatic, inset, usePageInsets, isSticky, ouiaId, numberOfFiltersText, customChipGroupContent } = _a, props = __rest(_a, ["clearAllFilters", "clearFiltersButtonText", "collapseListedFiltersBreakpoint", "isExpanded", "toggleIsExpanded", "className", "children", "isFullHeight", "isStatic", "inset", "usePageInsets", "isSticky", "ouiaId", "numberOfFiltersText", "customChipGroupContent"]);
      const { isManagedToggleExpanded } = this.state;
      const isToggleManaged = this.isToggleManaged();
      const isExpanded = isToggleManaged ? isManagedToggleExpanded : isExpandedProp;
      const numberOfFilters = this.getNumberOfFilters();
      const showClearFiltersButton = numberOfFilters > 0;
      return React288.createElement(PageContext.Consumer, null, ({ width, getBreakpoint: getBreakpoint2 }) => React288.createElement(
        "div",
        Object.assign({ className: css(toolbar_default.toolbar, isFullHeight && toolbar_default.modifiers.fullHeight, isStatic && toolbar_default.modifiers.static, usePageInsets && toolbar_default.modifiers.pageInsets, isSticky && toolbar_default.modifiers.sticky, formatBreakpointMods(inset, toolbar_default, "", getBreakpoint2(width)), className), id: randomId }, getOUIAProps(_Toolbar.displayName, ouiaId !== void 0 ? ouiaId : this.state.ouiaStateId), props),
        React288.createElement(
          ToolbarContext.Provider,
          { value: {
            isExpanded,
            toggleIsExpanded: isToggleManaged ? this.toggleIsExpanded : toggleIsExpanded,
            chipGroupContentRef: this.chipGroupContentRef,
            updateNumberFilters: this.updateNumberFilters,
            numberOfFilters,
            clearAllFilters,
            clearFiltersButtonText,
            showClearFiltersButton,
            toolbarId: randomId,
            customChipGroupContent
          } },
          children,
          React288.createElement(ToolbarChipGroupContent, { isExpanded, chipGroupContentRef: this.chipGroupContentRef, clearAllFilters, showClearFiltersButton, clearFiltersButtonText, numberOfFilters, numberOfFiltersText, collapseListedFiltersBreakpoint, customChipGroupContent })
        )
      ));
    };
  }
  componentDidMount() {
    if (this.isToggleManaged() && canUseDOM) {
      window.addEventListener("resize", this.closeExpandableContent);
    }
  }
  componentWillUnmount() {
    if (this.isToggleManaged() && canUseDOM) {
      window.removeEventListener("resize", this.closeExpandableContent);
    }
  }
  render() {
    return this.props.id ? this.renderToolbar(this.props.id) : React288.createElement(GenerateId, null, (randomId) => this.renderToolbar(randomId));
  }
};
Toolbar.displayName = "Toolbar";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarContent.js
var React290 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarExpandableContent.js
var React289 = __toESM(require_react());
var ToolbarExpandableContent = class extends React289.Component {
  render() {
    const _a = this.props, {
      className,
      expandableContentRef,
      chipContainerRef,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      isExpanded,
      clearAllFilters,
      clearFiltersButtonText,
      showClearFiltersButton
    } = _a, props = __rest(_a, ["className", "expandableContentRef", "chipContainerRef", "isExpanded", "clearAllFilters", "clearFiltersButtonText", "showClearFiltersButton"]);
    const { numberOfFilters, customChipGroupContent } = this.context;
    const clearChipGroups = () => {
      clearAllFilters();
    };
    return React289.createElement(
      "div",
      Object.assign({ className: css(toolbar_default.toolbarExpandableContent, className), ref: expandableContentRef }, props),
      React289.createElement(ToolbarGroup, null),
      numberOfFilters > 0 && React289.createElement(
        ToolbarGroup,
        { className: toolbar_default.modifiers.chipContainer },
        React289.createElement(ToolbarGroup, { ref: chipContainerRef }),
        showClearFiltersButton && !customChipGroupContent && React289.createElement(
          ToolbarItem,
          null,
          React289.createElement(Button, { variant: "link", onClick: clearChipGroups, isInline: true }, clearFiltersButtonText)
        ),
        customChipGroupContent && customChipGroupContent
      )
    );
  }
};
ToolbarExpandableContent.displayName = "ToolbarExpandableContent";
ToolbarExpandableContent.contextType = ToolbarContext;
ToolbarExpandableContent.defaultProps = {
  isExpanded: false,
  clearFiltersButtonText: "Clear all filters"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarContent.js
var ToolbarContent = class _ToolbarContent extends React290.Component {
  constructor() {
    super(...arguments);
    this.expandableContentRef = React290.createRef();
    this.chipContainerRef = React290.createRef();
  }
  render() {
    const _a = this.props, { className, children, isExpanded, toolbarId, visibility, visiblity, alignment, clearAllFilters, showClearFiltersButton, clearFiltersButtonText } = _a, props = __rest(_a, ["className", "children", "isExpanded", "toolbarId", "visibility", "visiblity", "alignment", "clearAllFilters", "showClearFiltersButton", "clearFiltersButtonText"]);
    if (visiblity !== void 0) {
      console.warn("The ToolbarContent visiblity prop has been deprecated. Please use the correctly spelled visibility prop instead.");
    }
    return React290.createElement(PageContext.Consumer, null, ({ width, getBreakpoint: getBreakpoint2 }) => React290.createElement(
      "div",
      Object.assign({ className: css(toolbar_default.toolbarContent, formatBreakpointMods(visibility || visiblity, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(alignment, toolbar_default, "", getBreakpoint2(width)), className) }, props),
      React290.createElement(ToolbarContext.Consumer, null, ({ clearAllFilters: clearAllFiltersContext, clearFiltersButtonText: clearFiltersButtonContext, showClearFiltersButton: showClearFiltersButtonContext, toolbarId: toolbarIdContext }) => {
        const expandableContentId = `${toolbarId || toolbarIdContext}-expandable-content-${_ToolbarContent.currentId++}`;
        return React290.createElement(
          ToolbarContentContext.Provider,
          { value: {
            expandableContentRef: this.expandableContentRef,
            expandableContentId,
            chipContainerRef: this.chipContainerRef
          } },
          React290.createElement("div", { className: css(toolbar_default.toolbarContentSection) }, children),
          React290.createElement(ToolbarExpandableContent, { id: expandableContentId, isExpanded, expandableContentRef: this.expandableContentRef, chipContainerRef: this.chipContainerRef, clearAllFilters: clearAllFilters || clearAllFiltersContext, showClearFiltersButton: showClearFiltersButton || showClearFiltersButtonContext, clearFiltersButtonText: clearFiltersButtonText || clearFiltersButtonContext })
        );
      })
    ));
  }
};
ToolbarContent.displayName = "ToolbarContent";
ToolbarContent.currentId = 0;
ToolbarContent.defaultProps = {
  isExpanded: false,
  showClearFiltersButton: false
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarExpandIconWrapper.js
var React291 = __toESM(require_react());
var ToolbarExpandIconWrapper = (_a) => {
  var { children, className } = _a, props = __rest(_a, ["children", "className"]);
  return React291.createElement("span", Object.assign({}, props, { className: css(toolbar_default.toolbarExpandAllIcon, className) }), children);
};
ToolbarExpandIconWrapper.displayName = "ToolbarExpandIconWrapper";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarFilter.js
var React292 = __toESM(require_react());
var ReactDOM4 = __toESM(require_react_dom());
var ToolbarFilter = class extends React292.Component {
  constructor(props) {
    super(props);
    this.state = {
      isMounted: false
    };
  }
  componentDidMount() {
    const { categoryName, chips } = this.props;
    this.context.updateNumberFilters(typeof categoryName !== "string" && categoryName.hasOwnProperty("key") ? categoryName.key : categoryName.toString(), chips.length);
    this.setState({ isMounted: true });
  }
  componentDidUpdate() {
    const { categoryName, chips } = this.props;
    this.context.updateNumberFilters(typeof categoryName !== "string" && categoryName.hasOwnProperty("key") ? categoryName.key : categoryName.toString(), chips.length);
  }
  render() {
    const _a = this.props, { children, chips, deleteChipGroup, deleteChip, chipGroupExpandedText, chipGroupCollapsedText, categoryName, showToolbarItem } = _a, props = __rest(_a, ["children", "chips", "deleteChipGroup", "deleteChip", "chipGroupExpandedText", "chipGroupCollapsedText", "categoryName", "showToolbarItem"]);
    const { isExpanded, chipGroupContentRef } = this.context;
    const categoryKey = typeof categoryName !== "string" && categoryName.hasOwnProperty("key") ? categoryName.key : categoryName.toString();
    const chipGroup = chips.length ? React292.createElement(
      ToolbarItem,
      { variant: "chip-group" },
      React292.createElement(ChipGroup, { key: categoryKey, categoryName: typeof categoryName === "string" ? categoryName : categoryName.name, isClosable: deleteChipGroup !== void 0, onClick: () => deleteChipGroup(categoryName), collapsedText: chipGroupCollapsedText, expandedText: chipGroupExpandedText }, chips.map((chip) => typeof chip === "string" ? React292.createElement(Chip, { key: chip, onClick: () => deleteChip(categoryKey, chip) }, chip) : React292.createElement(Chip, { key: chip.key, onClick: () => deleteChip(categoryKey, chip) }, chip.node)))
    ) : null;
    if (!isExpanded && this.state.isMounted) {
      return React292.createElement(
        React292.Fragment,
        null,
        showToolbarItem && React292.createElement(ToolbarItem, Object.assign({}, props), children),
        ReactDOM4.createPortal(chipGroup, chipGroupContentRef.current.firstElementChild)
      );
    }
    return React292.createElement(ToolbarContentContext.Consumer, null, ({ chipContainerRef }) => React292.createElement(
      React292.Fragment,
      null,
      showToolbarItem && React292.createElement(ToolbarItem, Object.assign({}, props), children),
      chipContainerRef.current && ReactDOM4.createPortal(chipGroup, chipContainerRef.current)
    ));
  }
};
ToolbarFilter.displayName = "ToolbarFilter";
ToolbarFilter.contextType = ToolbarContext;
ToolbarFilter.defaultProps = {
  chips: [],
  showToolbarItem: true
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Toolbar/ToolbarToggleGroup.js
var React293 = __toESM(require_react());
var ReactDOM5 = __toESM(require_react_dom());
var ToolbarToggleGroup = class extends React293.Component {
  constructor() {
    super(...arguments);
    this.isContentPopup = () => {
      const viewportSize = canUseDOM ? window.innerWidth : 1200;
      const lgBreakpointValue = parseInt(global_breakpoint_lg_default.value);
      return viewportSize < lgBreakpointValue;
    };
  }
  render() {
    const _a = this.props, { toggleIcon, variant, visibility, visiblity, breakpoint, alignment, spacer, spaceItems, className, children } = _a, props = __rest(_a, ["toggleIcon", "variant", "visibility", "visiblity", "breakpoint", "alignment", "spacer", "spaceItems", "className", "children"]);
    if (!breakpoint && !toggleIcon) {
      console.error("ToolbarToggleGroup will not be visible without a breakpoint or toggleIcon.");
    }
    if (visiblity !== void 0) {
      console.warn("The ToolbarToggleGroup visiblity prop has been deprecated. Please use the correctly spelled visibility prop instead.");
    }
    return React293.createElement(PageContext.Consumer, null, ({ width, getBreakpoint: getBreakpoint2 }) => React293.createElement(ToolbarContext.Consumer, null, ({ isExpanded, toggleIsExpanded }) => React293.createElement(ToolbarContentContext.Consumer, null, ({ expandableContentRef, expandableContentId }) => {
      if (expandableContentRef.current && expandableContentRef.current.classList) {
        if (isExpanded) {
          expandableContentRef.current.classList.add(toolbar_default.modifiers.expanded);
        } else {
          expandableContentRef.current.classList.remove(toolbar_default.modifiers.expanded);
        }
      }
      const breakpointMod = {};
      breakpointMod[breakpoint] = "show";
      return React293.createElement(
        "div",
        Object.assign({ className: css(toolbar_default.toolbarGroup, toolbar_default.modifiers.toggleGroup, variant && toolbar_default.modifiers[toCamel(variant)], formatBreakpointMods(breakpointMod, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(visibility || visiblity, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(alignment, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(spacer, toolbar_default, "", getBreakpoint2(width)), formatBreakpointMods(spaceItems, toolbar_default, "", getBreakpoint2(width)), className) }, props),
        React293.createElement(
          "div",
          { className: css(toolbar_default.toolbarToggle) },
          React293.createElement(Button, Object.assign({ variant: "plain", onClick: toggleIsExpanded, "aria-label": "Show Filters" }, isExpanded && { "aria-expanded": true }, { "aria-haspopup": isExpanded && this.isContentPopup(), "aria-controls": expandableContentId }), toggleIcon)
        ),
        isExpanded ? ReactDOM5.createPortal(children, expandableContentRef.current.firstElementChild) : children
      );
    })));
  }
};
ToolbarToggleGroup.displayName = "ToolbarToggleGroup";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NumberInput/NumberInput.js
var React294 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/NumberInput/number-input.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/NumberInput/number-input.css";
var number_input_default = {
  "formControl": "pf-c-form-control",
  "inputGroup": "pf-c-input-group",
  "modifiers": {
    "status": "pf-m-status"
  },
  "numberInput": "pf-c-number-input",
  "numberInputIcon": "pf-c-number-input__icon",
  "numberInputUnit": "pf-c-number-input__unit"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/NumberInput/NumberInput.js
var defaultKeyDownHandler = (args) => (event) => {
  if (KeyTypes.ArrowUp === event.key && args.onPlus) {
    event.preventDefault();
    args.onPlus(null, args.inputName);
  }
  if (KeyTypes.ArrowDown === event.key && args.onMinus) {
    event.preventDefault();
    args.onMinus(null, args.inputName);
  }
};
var NumberInput = (_a) => {
  var { value = 0, className, widthChars, isDisabled = false, validated = ValidatedOptions.default, onMinus = () => {
  }, onChange, onBlur, onPlus = () => {
  }, unit, unitPosition = "after", min, max, inputName, inputAriaLabel = "Input", minusBtnAriaLabel = "Minus", plusBtnAriaLabel = "Plus", inputProps, minusBtnProps, plusBtnProps, allowEmptyInput = false } = _a, props = __rest(_a, ["value", "className", "widthChars", "isDisabled", "validated", "onMinus", "onChange", "onBlur", "onPlus", "unit", "unitPosition", "min", "max", "inputName", "inputAriaLabel", "minusBtnAriaLabel", "plusBtnAriaLabel", "inputProps", "minusBtnProps", "plusBtnProps", "allowEmptyInput"]);
  if (!allowEmptyInput) {
    value = value || 0;
  }
  const numberInputUnit = React294.createElement("div", { className: css(number_input_default.numberInputUnit) }, unit);
  const keyDownHandler = inputProps && inputProps.onKeyDown ? inputProps.onKeyDown : defaultKeyDownHandler({ inputName, onMinus, onPlus });
  const handleBlur = (event) => {
    event.target.value = Number(event.target.value).toString();
    if (onChange) {
      onChange(event);
    }
    if (onBlur) {
      onBlur(event);
    }
  };
  return React294.createElement(
    "div",
    Object.assign({ className: css(number_input_default.numberInput, validated !== "default" && number_input_default.modifiers.status, className) }, widthChars && {
      style: Object.assign({ "--pf-c-number-input--c-form-control--width-chars": widthChars }, props.style)
    }, props),
    unit && unitPosition === "before" && numberInputUnit,
    React294.createElement(
      InputGroup,
      null,
      React294.createElement(
        Button,
        Object.assign({ variant: "control", "aria-label": minusBtnAriaLabel, isDisabled: isDisabled || value <= min, onClick: (evt) => onMinus(evt, inputName) }, minusBtnProps),
        React294.createElement(
          "span",
          { className: css(number_input_default.numberInputIcon) },
          React294.createElement(minus_icon_default, { "aria-hidden": "true" })
        )
      ),
      React294.createElement(TextInput, Object.assign({}, inputProps, { type: "number", value, name: inputName, "aria-label": inputAriaLabel }, isDisabled && { isDisabled }, onChange && { onChange: (value2, event) => onChange(event) }, { onBlur: handleBlur }, !onChange && { isReadOnly: true }, { onKeyDown: keyDownHandler, validated })),
      React294.createElement(
        Button,
        Object.assign({ variant: "control", "aria-label": plusBtnAriaLabel, isDisabled: isDisabled || value >= max, onClick: (evt) => onPlus(evt, inputName) }, plusBtnProps),
        React294.createElement(
          "span",
          { className: css(number_input_default.numberInputIcon) },
          React294.createElement(plus_icon_default, { "aria-hidden": "true" })
        )
      )
    ),
    unit && unitPosition === "after" && numberInputUnit
  );
};
NumberInput.displayName = "NumberInput";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeView.js
var React298 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewList.js
var React295 = __toESM(require_react());
var TreeViewList = (_a) => {
  var { isNested = false, toolbar, children } = _a, props = __rest(_a, ["isNested", "toolbar", "children"]);
  return React295.createElement(
    React295.Fragment,
    null,
    toolbar && React295.createElement(
      React295.Fragment,
      null,
      toolbar,
      React295.createElement(Divider, null)
    ),
    React295.createElement("ul", Object.assign({ className: css("pf-c-tree-view__list"), role: isNested ? "group" : "tree" }, props), children)
  );
};
TreeViewList.displayName = "TreeViewList";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewListItem.js
var import_react11 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/TreeView/tree-view.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/TreeView/tree-view.css";
var tree_view_default = {
  "badge": "pf-c-badge",
  "modifiers": {
    "compact": "pf-m-compact",
    "guides": "pf-m-guides",
    "expanded": "pf-m-expanded",
    "noBackground": "pf-m-no-background",
    "current": "pf-m-current",
    "read": "pf-m-read",
    "selectable": "pf-m-selectable",
    "truncate": "pf-m-truncate"
  },
  "themeDark": "pf-theme-dark",
  "treeView": "pf-c-tree-view",
  "treeViewAction": "pf-c-tree-view__action",
  "treeViewContent": "pf-c-tree-view__content",
  "treeViewListItem": "pf-c-tree-view__list-item",
  "treeViewNode": "pf-c-tree-view__node",
  "treeViewNodeCheck": "pf-c-tree-view__node-check",
  "treeViewNodeContainer": "pf-c-tree-view__node-container",
  "treeViewNodeContent": "pf-c-tree-view__node-content",
  "treeViewNodeCount": "pf-c-tree-view__node-count",
  "treeViewNodeIcon": "pf-c-tree-view__node-icon",
  "treeViewNodeText": "pf-c-tree-view__node-text",
  "treeViewNodeTitle": "pf-c-tree-view__node-title",
  "treeViewNodeToggle": "pf-c-tree-view__node-toggle",
  "treeViewNodeToggleIcon": "pf-c-tree-view__node-toggle-icon",
  "treeViewSearch": "pf-c-tree-view__search"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewListItem.js
var TreeViewListItemBase = ({
  name,
  title,
  id,
  isExpanded,
  defaultExpanded = false,
  children = null,
  onSelect,
  onCheck,
  hasCheck = false,
  checkProps = {
    checked: false
  },
  hasBadge = false,
  customBadgeContent,
  badgeProps = { isRead: true },
  isSelectable = false,
  isCompact,
  activeItems = [],
  itemData,
  parentItem,
  icon,
  expandedIcon,
  action,
  compareItems,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  useMemo: useMemo4
}) => {
  const [internalIsExpanded, setIsExpanded] = (0, import_react11.useState)(defaultExpanded);
  (0, import_react11.useEffect)(() => {
    if (isExpanded !== void 0 && isExpanded !== null) {
      setIsExpanded(isExpanded);
    } else if (defaultExpanded !== void 0 && defaultExpanded !== null) {
      setIsExpanded(internalIsExpanded || defaultExpanded);
    }
  }, [isExpanded, defaultExpanded]);
  let Component47 = "button";
  if (hasCheck) {
    Component47 = "label";
  } else if (isSelectable) {
    Component47 = "div";
  }
  const ToggleComponent = hasCheck || isSelectable ? "button" : "span";
  const renderToggle = (randomId) => import_react11.default.createElement(
    ToggleComponent,
    Object.assign({ className: css(tree_view_default.treeViewNodeToggle), onClick: (evt) => {
      if (isSelectable || hasCheck) {
        setIsExpanded(!internalIsExpanded);
      }
      if (isSelectable) {
        evt.stopPropagation();
      }
    } }, (hasCheck || isSelectable) && { "aria-labelledby": `label-${randomId}` }, { tabIndex: -1 }),
    import_react11.default.createElement(
      "span",
      { className: css(tree_view_default.treeViewNodeToggleIcon) },
      import_react11.default.createElement(angle_right_icon_default, { "aria-hidden": "true" })
    )
  );
  const renderCheck = (randomId) => import_react11.default.createElement(
    "span",
    { className: css(tree_view_default.treeViewNodeCheck) },
    import_react11.default.createElement("input", Object.assign({ type: "checkbox", onChange: (evt) => onCheck && onCheck(evt, itemData, parentItem), onClick: (evt) => evt.stopPropagation(), ref: (elem) => elem && (elem.indeterminate = checkProps.checked === null) }, checkProps, { checked: checkProps.checked === null ? false : checkProps.checked, id: randomId, tabIndex: -1 }))
  );
  const iconRendered = import_react11.default.createElement(
    "span",
    { className: css(tree_view_default.treeViewNodeIcon) },
    !internalIsExpanded && icon,
    internalIsExpanded && (expandedIcon || icon)
  );
  const renderNodeContent = () => {
    const content = import_react11.default.createElement(
      import_react11.default.Fragment,
      null,
      isCompact && title && import_react11.default.createElement("span", { className: css(tree_view_default.treeViewNodeTitle) }, title),
      isSelectable ? import_react11.default.createElement("button", { tabIndex: -1, className: css(tree_view_default.treeViewNodeText) }, name) : import_react11.default.createElement("span", { className: css(tree_view_default.treeViewNodeText) }, name)
    );
    return isCompact ? import_react11.default.createElement("span", { className: css(tree_view_default.treeViewNodeContent) }, content) : content;
  };
  const badgeRendered = import_react11.default.createElement(
    import_react11.default.Fragment,
    null,
    hasBadge && children && import_react11.default.createElement(
      "span",
      { className: css(tree_view_default.treeViewNodeCount) },
      import_react11.default.createElement(Badge, Object.assign({}, badgeProps), customBadgeContent ? customBadgeContent : children.props.data.length)
    ),
    hasBadge && !children && customBadgeContent !== void 0 && import_react11.default.createElement(
      "span",
      { className: css(tree_view_default.treeViewNodeCount) },
      import_react11.default.createElement(Badge, Object.assign({}, badgeProps), customBadgeContent)
    )
  );
  return import_react11.default.createElement(
    "li",
    Object.assign({ id, className: css(tree_view_default.treeViewListItem, internalIsExpanded && tree_view_default.modifiers.expanded) }, internalIsExpanded && { "aria-expanded": "true" }, { role: "treeitem", tabIndex: -1 }),
    import_react11.default.createElement(
      "div",
      { className: css(tree_view_default.treeViewContent) },
      import_react11.default.createElement(GenerateId, { prefix: isSelectable ? "selectable-id" : "checkbox-id" }, (randomId) => import_react11.default.createElement(
        Component47,
        Object.assign({ className: css(tree_view_default.treeViewNode, children && (isSelectable || hasCheck) && tree_view_default.modifiers.selectable, (!children || isSelectable) && activeItems && activeItems.length > 0 && activeItems.some((item) => compareItems && item && compareItems(item, itemData)) ? tree_view_default.modifiers.current : ""), onClick: (evt) => {
          if (!hasCheck) {
            onSelect && onSelect(evt, itemData, parentItem);
            if (!isSelectable && children && evt.isDefaultPrevented() !== true) {
              setIsExpanded(!internalIsExpanded);
            }
          }
        } }, hasCheck && { htmlFor: randomId }, (hasCheck || isSelectable && children) && { id: `label-${randomId}` }),
        import_react11.default.createElement(
          "span",
          { className: css(tree_view_default.treeViewNodeContainer) },
          children && renderToggle(randomId),
          hasCheck && renderCheck(randomId),
          icon && iconRendered,
          renderNodeContent(),
          badgeRendered
        )
      )),
      action && import_react11.default.createElement("div", { className: css(tree_view_default.treeViewAction) }, action)
    ),
    internalIsExpanded && children
  );
};
var TreeViewListItem = import_react11.default.memo(TreeViewListItemBase, (prevProps, nextProps) => {
  if (!nextProps.useMemo) {
    return false;
  }
  const prevIncludes = prevProps.activeItems && prevProps.activeItems.length > 0 && prevProps.activeItems.some((item) => prevProps.compareItems && item && prevProps.compareItems(item, prevProps.itemData));
  const nextIncludes = nextProps.activeItems && nextProps.activeItems.length > 0 && nextProps.activeItems.some((item) => nextProps.compareItems && item && nextProps.compareItems(item, nextProps.itemData));
  if (prevIncludes || nextIncludes) {
    return false;
  }
  if (prevProps.name !== nextProps.name || prevProps.title !== nextProps.title || prevProps.id !== nextProps.id || prevProps.isExpanded !== nextProps.isExpanded || prevProps.defaultExpanded !== nextProps.defaultExpanded || prevProps.onSelect !== nextProps.onSelect || prevProps.onCheck !== nextProps.onCheck || prevProps.hasCheck !== nextProps.hasCheck || prevProps.checkProps !== nextProps.checkProps || prevProps.hasBadge !== nextProps.hasBadge || prevProps.customBadgeContent !== nextProps.customBadgeContent || prevProps.badgeProps !== nextProps.badgeProps || prevProps.isCompact !== nextProps.isCompact || prevProps.icon !== nextProps.icon || prevProps.expandedIcon !== nextProps.expandedIcon || prevProps.action !== nextProps.action || prevProps.parentItem !== nextProps.parentItem || prevProps.itemData !== nextProps.itemData) {
    return false;
  }
  return true;
});
TreeViewListItem.displayName = "TreeViewListItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewRoot.js
var React297 = __toESM(require_react());
var TreeViewRoot = class extends React297.Component {
  constructor() {
    super(...arguments);
    this.displayName = "TreeViewRoot";
    this.treeRef = React297.createRef();
    this.handleKeys = (event) => {
      var _a, _b, _c, _d, _e, _f, _g;
      if (!this.treeRef.current.contains(event.target)) {
        return;
      }
      const activeElement = document.activeElement;
      const key = event.key;
      const treeItems = Array.from((_a = this.treeRef.current) === null || _a === void 0 ? void 0 : _a.getElementsByClassName("pf-c-tree-view__node")).filter((el) => !el.classList.contains("pf-m-disabled"));
      if (key === KeyTypes.Space) {
        activeElement.click();
        event.preventDefault();
      }
      handleArrows(event, treeItems, (element) => activeElement === element, void 0, [], void 0, true, true);
      if (["ArrowLeft", "ArrowRight"].includes(key)) {
        const isExpandable = (_c = (_b = activeElement === null || activeElement === void 0 ? void 0 : activeElement.firstElementChild) === null || _b === void 0 ? void 0 : _b.firstElementChild) === null || _c === void 0 ? void 0 : _c.classList.contains("pf-c-tree-view__node-toggle");
        const isExpanded = (_d = activeElement === null || activeElement === void 0 ? void 0 : activeElement.closest("li")) === null || _d === void 0 ? void 0 : _d.classList.contains("pf-m-expanded");
        if (key === "ArrowLeft") {
          if (isExpandable && isExpanded) {
            activeElement.click();
          } else {
            const parentList = (_e = activeElement === null || activeElement === void 0 ? void 0 : activeElement.closest("ul")) === null || _e === void 0 ? void 0 : _e.parentElement;
            if ((parentList === null || parentList === void 0 ? void 0 : parentList.tagName) !== "DIV") {
              const parentButton = parentList === null || parentList === void 0 ? void 0 : parentList.querySelector("button");
              activeElement.tabIndex = -1;
              if (parentButton) {
                parentButton.tabIndex = 0;
                parentButton.focus();
              }
            }
          }
        } else {
          if (isExpandable && !isExpanded) {
            activeElement.tabIndex = -1;
            activeElement.click();
            const childElement = (_g = (_f = activeElement === null || activeElement === void 0 ? void 0 : activeElement.closest("li")) === null || _f === void 0 ? void 0 : _f.querySelector("ul > li")) === null || _g === void 0 ? void 0 : _g.querySelector("button");
            if (childElement) {
              childElement.tabIndex = 0;
              childElement.focus();
            }
          }
        }
        event.preventDefault();
      }
    };
    this.handleKeysCheckbox = (event) => {
      var _a, _b, _c, _d, _e;
      if (!this.treeRef.current.contains(event.target)) {
        return;
      }
      const activeElement = document.activeElement;
      const key = event.key;
      if (key === KeyTypes.Space) {
        activeElement.click();
        event.preventDefault();
      }
      const treeNodes = Array.from((_a = this.treeRef.current) === null || _a === void 0 ? void 0 : _a.getElementsByClassName("pf-c-tree-view__node"));
      handleArrows(event, treeNodes, (element) => element.contains(activeElement), (element) => element.querySelector("button,input"), [], void 0, true, true);
      if (["ArrowLeft", "ArrowRight"].includes(key)) {
        if (key === "ArrowLeft") {
          if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === "INPUT") {
            ((_b = activeElement === null || activeElement === void 0 ? void 0 : activeElement.parentElement) === null || _b === void 0 ? void 0 : _b.previousSibling) && activeElement.parentElement.previousSibling.focus();
          } else if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.previousSibling) {
            if (((_c = activeElement.previousElementSibling) === null || _c === void 0 ? void 0 : _c.tagName) === "SPAN") {
              activeElement.previousSibling.firstChild.focus();
            } else {
              activeElement.previousSibling.focus();
            }
          }
        } else {
          if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === "INPUT") {
            ((_d = activeElement.parentElement) === null || _d === void 0 ? void 0 : _d.nextSibling) && activeElement.parentElement.nextSibling.focus();
          } else if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.nextSibling) {
            if (((_e = activeElement.nextElementSibling) === null || _e === void 0 ? void 0 : _e.tagName) === "SPAN") {
              activeElement.nextSibling.firstChild.focus();
            } else {
              activeElement.nextSibling.focus();
            }
          }
        }
        event.preventDefault();
      }
    };
    this.variantStyleModifiers = {
      default: "",
      compact: tree_view_default.modifiers.compact,
      compactNoBackground: [tree_view_default.modifiers.compact, tree_view_default.modifiers.noBackground]
    };
  }
  componentDidMount() {
    var _a;
    if (canUseDOM) {
      window.addEventListener("keydown", this.props.hasChecks || this.props.hasSelectableNodes ? this.handleKeysCheckbox : this.handleKeys);
    }
    if (this.props.hasChecks || this.props.hasSelectableNodes) {
      const firstToggle = this.treeRef.current.getElementsByClassName("pf-c-tree-view__node-toggle")[0];
      if (firstToggle) {
        firstToggle.tabIndex = 0;
      }
      if (this.props.hasChecks) {
        const firstInput = this.treeRef.current.getElementsByTagName("INPUT")[0];
        if (firstInput) {
          firstInput.tabIndex = 0;
        }
      }
      if (this.props.hasSelectableNodes) {
        const firstTextButton = this.treeRef.current.getElementsByClassName("pf-c-tree-view__node-text")[0];
        if (firstTextButton) {
          firstTextButton.tabIndex = 0;
        }
      }
    } else {
      ((_a = this.treeRef.current) === null || _a === void 0 ? void 0 : _a.getElementsByClassName("pf-c-tree-view__node")[0]).tabIndex = 0;
    }
  }
  componentWillUnmount() {
    if (canUseDOM) {
      window.removeEventListener("keydown", this.props.hasChecks || this.props.hasSelectableNodes ? this.handleKeysCheckbox : this.handleKeys);
    }
  }
  render() {
    const _a = this.props, { children, hasChecks, hasGuides, variant, className, hasSelectableNodes } = _a, props = __rest(_a, ["children", "hasChecks", "hasGuides", "variant", "className", "hasSelectableNodes"]);
    return React297.createElement("div", Object.assign({ className: css(tree_view_default.treeView, hasGuides && tree_view_default.modifiers.guides, this.variantStyleModifiers[variant], className), ref: this.treeRef }, props), children);
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeView.js
var TreeView = (_a) => {
  var { data, isNested = false, hasChecks = false, hasBadges = false, hasGuides = false, hasSelectableNodes = false, variant = "default", defaultAllExpanded = false, allExpanded, icon, expandedIcon, parentItem, onSelect, onCheck, toolbar, activeItems, compareItems = (item, itemToCheck) => item.id === itemToCheck.id, className, useMemo: useMemo4 } = _a, props = __rest(_a, ["data", "isNested", "hasChecks", "hasBadges", "hasGuides", "hasSelectableNodes", "variant", "defaultAllExpanded", "allExpanded", "icon", "expandedIcon", "parentItem", "onSelect", "onCheck", "toolbar", "activeItems", "compareItems", "className", "useMemo"]);
  const treeViewList = React298.createElement(TreeViewList, { isNested, toolbar }, data.map((item) => {
    var _a2, _b;
    return React298.createElement(TreeViewListItem, Object.assign({ key: ((_a2 = item.id) === null || _a2 === void 0 ? void 0 : _a2.toString()) || ((_b = item.name) === null || _b === void 0 ? void 0 : _b.toString()), name: item.name, title: item.title, id: item.id, isExpanded: allExpanded, isSelectable: hasSelectableNodes, defaultExpanded: item.defaultExpanded !== void 0 ? item.defaultExpanded : defaultAllExpanded, onSelect, onCheck, hasCheck: item.hasCheck !== void 0 ? item.hasCheck : hasChecks, checkProps: item.checkProps, hasBadge: item.hasBadge !== void 0 ? item.hasBadge : hasBadges, customBadgeContent: item.customBadgeContent, badgeProps: item.badgeProps, activeItems, parentItem, itemData: item, icon: item.icon !== void 0 ? item.icon : icon, expandedIcon: item.expandedIcon !== void 0 ? item.expandedIcon : expandedIcon, action: item.action, compareItems, isCompact: variant === "compact" || variant === "compactNoBackground", useMemo: useMemo4 }, item.children && {
      children: React298.createElement(TreeView, { data: item.children, isNested: true, parentItem: item, hasChecks, hasBadges, hasGuides, hasSelectableNodes, variant, allExpanded, defaultAllExpanded, onSelect, onCheck, activeItems, icon, expandedIcon })
    }));
  }));
  return React298.createElement(React298.Fragment, null, parentItem ? treeViewList : React298.createElement(TreeViewRoot, Object.assign({ hasSelectableNodes, hasChecks, hasGuides, variant, className }, props), treeViewList));
};
TreeView.displayName = "TreeView";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewSearch.js
var React299 = __toESM(require_react());
var TreeViewSearch = (_a) => {
  var { className, onSearch, id, name, "aria-label": ariaLabel } = _a, props = __rest(_a, ["className", "onSearch", "id", "name", "aria-label"]);
  return React299.createElement(
    "div",
    { className: css(tree_view_default.treeViewSearch, className) },
    React299.createElement("input", Object.assign({ className: css(form_control_default.formControl, form_control_default.modifiers.search), onChange: onSearch, id, name, "aria-label": ariaLabel, type: "search" }, props))
  );
};
TreeViewSearch.displayName = "TreeViewSearch";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/Wizard.js
var React307 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Wizard/wizard.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Wizard/wizard.css";
var wizard_default = {
  "button": "pf-c-button",
  "card": "pf-c-card",
  "drawer": "pf-c-drawer",
  "modalBox": "pf-c-modal-box",
  "modifiers": {
    "finished": "pf-m-finished",
    "expanded": "pf-m-expanded",
    "current": "pf-m-current",
    "expandable": "pf-m-expandable",
    "disabled": "pf-m-disabled",
    "noPadding": "pf-m-no-padding"
  },
  "pageMainWizard": "pf-c-page__main-wizard",
  "themeDark": "pf-theme-dark",
  "wizard": "pf-c-wizard",
  "wizardClose": "pf-c-wizard__close",
  "wizardDescription": "pf-c-wizard__description",
  "wizardFooter": "pf-c-wizard__footer",
  "wizardFooterCancel": "pf-c-wizard__footer-cancel",
  "wizardHeader": "pf-c-wizard__header",
  "wizardInnerWrap": "pf-c-wizard__inner-wrap",
  "wizardMain": "pf-c-wizard__main",
  "wizardMainBody": "pf-c-wizard__main-body",
  "wizardNav": "pf-c-wizard__nav",
  "wizardNavItem": "pf-c-wizard__nav-item",
  "wizardNavLink": "pf-c-wizard__nav-link",
  "wizardNavLinkText": "pf-c-wizard__nav-link-text",
  "wizardNavLinkToggle": "pf-c-wizard__nav-link-toggle",
  "wizardNavLinkToggleIcon": "pf-c-wizard__nav-link-toggle-icon",
  "wizardNavList": "pf-c-wizard__nav-list",
  "wizardOuterWrap": "pf-c-wizard__outer-wrap",
  "wizardTitle": "pf-c-wizard__title",
  "wizardToggle": "pf-c-wizard__toggle",
  "wizardToggleIcon": "pf-c-wizard__toggle-icon",
  "wizardToggleList": "pf-c-wizard__toggle-list",
  "wizardToggleListItem": "pf-c-wizard__toggle-list-item",
  "wizardToggleNum": "pf-c-wizard__toggle-num",
  "wizardToggleSeparator": "pf-c-wizard__toggle-separator"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardFooterInternal.js
var React300 = __toESM(require_react());
var WizardFooterInternal = ({ onNext, onBack, onClose, isValid, firstStep, activeStep, nextButtonText, backButtonText, cancelButtonText }) => React300.createElement(
  "footer",
  { className: css(wizard_default.wizardFooter) },
  React300.createElement(Button, { variant: ButtonVariant.primary, type: "submit", onClick: onNext, isDisabled: !isValid }, nextButtonText),
  !activeStep.hideBackButton && React300.createElement(Button, { variant: ButtonVariant.secondary, onClick: onBack, isDisabled: firstStep }, backButtonText),
  !activeStep.hideCancelButton && React300.createElement(
    "div",
    { className: wizard_default.wizardFooterCancel },
    React300.createElement(Button, { variant: ButtonVariant.link, onClick: onClose }, cancelButtonText)
  )
);
WizardFooterInternal.displayName = "WizardFooterInternal";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardToggle.js
var React302 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardBody.js
var React301 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardDrawerWrapper.js
var WizardDrawerWrapper = ({ hasDrawer, wrapper, children }) => hasDrawer ? wrapper(children) : children;
WizardDrawerWrapper.displayName = "WizardDrawerWrapper";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardBody.js
var WizardBody = ({ children, hasNoBodyPadding = false, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledBy, mainComponent = "div", hasDrawer, isDrawerExpanded, onExpandDrawer, activeStep }) => {
  const MainComponent = mainComponent;
  return React301.createElement(
    MainComponent,
    { "aria-label": ariaLabel, "aria-labelledby": ariaLabelledBy, className: css(wizard_default.wizardMain) },
    React301.createElement(
      WizardDrawerWrapper,
      { hasDrawer: hasDrawer && activeStep.drawerPanelContent, wrapper: (children2) => React301.createElement(
        Drawer,
        { isInline: true, isExpanded: isDrawerExpanded, onExpand: onExpandDrawer },
        React301.createElement(DrawerContent, { panelContent: activeStep.drawerPanelContent }, children2)
      ) },
      React301.createElement("div", { className: css(wizard_default.wizardMainBody, hasNoBodyPadding && wizard_default.modifiers.noPadding) }, children)
    )
  );
};
WizardBody.displayName = "WizardBody";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardToggle.js
var WizardToggle = ({ isNavOpen, onNavToggle, nav, steps, activeStep, children, hasNoBodyPadding = false, "aria-label": ariaLabel = "Wizard Toggle", mainAriaLabelledBy = null, mainAriaLabel = null, isInPage = true, hasDrawer, isDrawerExpanded, onExpandDrawer }) => {
  let activeStepIndex;
  let activeStepName;
  let activeStepSubName;
  for (let i = 0; i < steps.length; i++) {
    if (activeStep.id && steps[i].id === activeStep.id || steps[i].name === activeStep.name) {
      activeStepIndex = i + 1;
      activeStepName = steps[i].name;
      break;
    } else if (steps[i].steps) {
      for (const step of steps[i].steps) {
        if (activeStep.id && step.id === activeStep.id || step.name === activeStep.name) {
          activeStepIndex = i + 1;
          activeStepName = steps[i].name;
          activeStepSubName = step.name;
          break;
        }
      }
    }
  }
  return React302.createElement(
    React302.Fragment,
    null,
    React302.createElement(
      "button",
      { onClick: () => onNavToggle(!isNavOpen), className: css(wizard_default.wizardToggle, isNavOpen && "pf-m-expanded"), "aria-label": ariaLabel, "aria-expanded": isNavOpen },
      React302.createElement(
        "span",
        { className: css(wizard_default.wizardToggleList) },
        React302.createElement(
          "span",
          { className: css(wizard_default.wizardToggleListItem) },
          React302.createElement("span", { className: css(wizard_default.wizardToggleNum) }, activeStepIndex),
          " ",
          activeStepName,
          activeStepSubName && React302.createElement(angle_right_icon_default, { className: css(wizard_default.wizardToggleSeparator), "aria-hidden": "true" })
        ),
        activeStepSubName && React302.createElement("span", { className: css(wizard_default.wizardToggleListItem) }, activeStepSubName)
      ),
      React302.createElement(
        "span",
        { className: css(wizard_default.wizardToggleIcon) },
        React302.createElement(caret_down_icon_default, { "aria-hidden": "true" })
      )
    ),
    React302.createElement(
      "div",
      { className: css(wizard_default.wizardOuterWrap) },
      React302.createElement(
        "div",
        { className: css(wizard_default.wizardInnerWrap) },
        nav(isNavOpen),
        React302.createElement(
          WizardBody,
          { mainComponent: isInPage ? "div" : "main", "aria-label": mainAriaLabel, "aria-labelledby": mainAriaLabelledBy, hasNoBodyPadding, activeStep, isDrawerExpanded, onExpandDrawer, hasDrawer },
          hasDrawer && !isDrawerExpanded && activeStep.drawerToggleButton,
          activeStep.component
        )
      ),
      children
    )
  );
};
WizardToggle.displayName = "WizardToggle";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardNav.js
var React303 = __toESM(require_react());
var WizardNav = ({ children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledBy, isOpen = false, returnList = false, ouiaId, ouiaSafe = true }) => {
  const ouiaProps = useOUIAProps(WizardNav.displayName, ouiaId, ouiaSafe);
  const innerList = React303.createElement("ol", { className: css(wizard_default.wizardNavList) }, children);
  if (returnList) {
    return innerList;
  }
  return React303.createElement(
    "nav",
    Object.assign({ className: css(wizard_default.wizardNav, isOpen && wizard_default.modifiers.expanded), "aria-label": ariaLabel, "aria-labelledby": ariaLabelledBy }, ouiaProps),
    React303.createElement("ol", { className: css(wizard_default.wizardNavList) }, children)
  );
};
WizardNav.displayName = "WizardNav";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardNavItem.js
var React304 = __toESM(require_react());
var WizardNavItem = (_a) => {
  var { children = null, content = "", isCurrent = false, isDisabled = false, step, onNavItemClick = () => void 0, navItemComponent = "button", href = null, isExpandable = false, id, ouiaId, ouiaSafe = true } = _a, rest = __rest(_a, ["children", "content", "isCurrent", "isDisabled", "step", "onNavItemClick", "navItemComponent", "href", "isExpandable", "id", "ouiaId", "ouiaSafe"]);
  const ouiaProps = useOUIAProps(WizardNavItem.displayName, ouiaId, ouiaSafe);
  const NavItemComponent = navItemComponent;
  const [isExpanded, setIsExpanded] = React304.useState(false);
  React304.useEffect(() => {
    setIsExpanded(isCurrent);
  }, [isCurrent]);
  if (navItemComponent === "a" && !href && true) {
    console.error("WizardNavItem: When using an anchor, please provide an href");
  }
  const btnProps = {
    disabled: isDisabled
  };
  const linkProps = {
    tabIndex: isDisabled ? -1 : void 0,
    href
  };
  return React304.createElement(
    "li",
    { className: css(wizard_default.wizardNavItem, isExpandable && wizard_default.modifiers.expandable, isExpandable && isExpanded && wizard_default.modifiers.expanded) },
    React304.createElement(NavItemComponent, Object.assign({}, rest, navItemComponent === "a" ? Object.assign({}, linkProps) : Object.assign({}, btnProps), id && { id: id.toString() }, { onClick: () => isExpandable ? setIsExpanded(!isExpanded || isCurrent) : onNavItemClick(step), className: css(wizard_default.wizardNavLink, isCurrent && wizard_default.modifiers.current, isDisabled && wizard_default.modifiers.disabled), "aria-disabled": isDisabled ? true : null, "aria-current": isCurrent && !children ? "step" : false }, isExpandable && { "aria-expanded": isExpanded }, ouiaProps), isExpandable ? React304.createElement(
      React304.Fragment,
      null,
      React304.createElement("span", { className: css(wizard_default.wizardNavLinkText) }, content),
      React304.createElement(
        "span",
        { className: css(wizard_default.wizardNavLinkToggle) },
        React304.createElement(
          "span",
          { className: css(wizard_default.wizardNavLinkToggleIcon) },
          React304.createElement(angle_right_icon_default, null)
        )
      )
    ) : content),
    children
  );
};
WizardNavItem.displayName = "WizardNavItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardContext.js
var React305 = __toESM(require_react());
var WizardContext = React305.createContext({
  goToStepById: () => null,
  goToStepByName: () => null,
  onNext: () => null,
  onBack: () => null,
  onClose: () => null,
  activeStep: { name: null }
});
var WizardContextProvider = WizardContext.Provider;
var WizardContextConsumer = WizardContext.Consumer;

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardHeader.js
var React306 = __toESM(require_react());
var WizardHeader = ({ onClose = () => void 0, title, description, hideClose, closeButtonAriaLabel, titleId, descriptionComponent: Component47 = "p", descriptionId }) => React306.createElement(
  "div",
  { className: css(wizard_default.wizardHeader) },
  !hideClose && React306.createElement(
    Button,
    { variant: "plain", className: css(wizard_default.wizardClose), "aria-label": closeButtonAriaLabel, onClick: onClose },
    React306.createElement(times_icon_default, { "aria-hidden": "true" })
  ),
  React306.createElement(Title, { headingLevel: "h2", size: "3xl", className: css(wizard_default.wizardTitle), "aria-label": title, id: titleId }, title || React306.createElement(React306.Fragment, null, " ")),
  description && React306.createElement(Component47, { className: css(wizard_default.wizardDescription), id: descriptionId }, description)
);
WizardHeader.displayName = "WizardHeader";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/Wizard.js
var Wizard = class _Wizard extends React307.Component {
  constructor(props) {
    super(props);
    this.handleKeyClicks = (event) => {
      if (event.key === KeyTypes.Escape) {
        if (this.state.isNavOpen) {
          this.setState({ isNavOpen: !this.state.isNavOpen });
        } else if (this.props.isOpen) {
          this.props.onClose();
        }
      }
    };
    this.onNext = () => {
      const { onNext, onClose, onSave } = this.props;
      const { currentStep } = this.state;
      const flattenedSteps = this.getFlattenedSteps();
      const maxSteps = flattenedSteps.length;
      if (currentStep >= maxSteps) {
        if (onSave) {
          return onSave();
        }
        return onClose();
      } else {
        let newStep = currentStep;
        for (let nextStep = currentStep; nextStep <= maxSteps; nextStep++) {
          if (!flattenedSteps[nextStep]) {
            return;
          }
          if (!flattenedSteps[nextStep].isDisabled) {
            newStep = nextStep + 1;
            break;
          }
        }
        this.setCurrentStep(newStep, flattenedSteps[newStep - 1]);
        const { id: prevId, name: prevName } = flattenedSteps[currentStep - 1];
        const { id, name } = flattenedSteps[newStep - 1];
        return onNext && onNext({ id, name }, { prevId, prevName });
      }
    };
    this.onBack = () => {
      const { onBack } = this.props;
      const { currentStep } = this.state;
      const flattenedSteps = this.getFlattenedSteps();
      if (flattenedSteps.length < currentStep) {
        const adjustedStep = flattenedSteps.length;
        this.setCurrentStep(adjustedStep, flattenedSteps[adjustedStep - 1]);
      } else {
        let newStep = currentStep;
        for (let prevStep = currentStep; prevStep >= 0; prevStep--) {
          if (!flattenedSteps[prevStep - 2]) {
            return;
          }
          if (!flattenedSteps[prevStep - 2].isDisabled) {
            newStep = prevStep - 1 <= 1 ? 1 : prevStep - 1;
            break;
          }
        }
        this.setCurrentStep(newStep, flattenedSteps[newStep - 1]);
        const { id: prevId, name: prevName } = flattenedSteps[newStep];
        const { id, name } = flattenedSteps[newStep - 1];
        return onBack && onBack({ id, name }, { prevId, prevName });
      }
    };
    this.goToStep = (step) => {
      const flattenedSteps = this.getFlattenedSteps();
      if (flattenedSteps[step - 1].isDisabled) {
        return;
      }
      const { onGoToStep } = this.props;
      const { currentStep } = this.state;
      const maxSteps = flattenedSteps.length;
      if (step < 1) {
        step = 1;
      } else if (step > maxSteps) {
        step = maxSteps;
      }
      this.setCurrentStep(step, flattenedSteps[step - 1]);
      this.setState({ isNavOpen: false });
      const { id: prevId, name: prevName } = flattenedSteps[currentStep - 1];
      const { id, name } = flattenedSteps[step - 1];
      return onGoToStep && onGoToStep({ id, name }, { prevId, prevName });
    };
    this.goToStepById = (stepId) => {
      const flattenedSteps = this.getFlattenedSteps();
      let step;
      for (let i = 0; i < flattenedSteps.length; i++) {
        if (flattenedSteps[i].id === stepId) {
          step = i + 1;
          break;
        }
      }
      if (step) {
        this.setCurrentStep(step, flattenedSteps[step - 1]);
      }
    };
    this.goToStepByName = (stepName) => {
      const flattenedSteps = this.getFlattenedSteps();
      let step;
      for (let i = 0; i < flattenedSteps.length; i++) {
        if (flattenedSteps[i].name === stepName) {
          step = i + 1;
          break;
        }
      }
      if (step) {
        this.setCurrentStep(step, flattenedSteps[step - 1]);
      }
    };
    this.getFlattenedSteps = () => {
      const { steps } = this.props;
      const flattenedSteps = [];
      for (const step of steps) {
        if (step.steps) {
          for (const childStep of step.steps) {
            flattenedSteps.push(childStep);
          }
        } else {
          flattenedSteps.push(step);
        }
      }
      return flattenedSteps;
    };
    this.getFlattenedStepsIndex = (flattenedSteps, stepName) => {
      for (let i = 0; i < flattenedSteps.length; i++) {
        if (flattenedSteps[i].name === stepName) {
          return i + 1;
        }
      }
      return 0;
    };
    this.initSteps = (steps) => {
      for (let i = 0; i < steps.length; i++) {
        if (steps[i].steps) {
          for (let j = 0; j < steps[i].steps.length; j++) {
            steps[i].steps[j] = Object.assign({ canJumpTo: true }, steps[i].steps[j]);
          }
        }
        steps[i] = Object.assign({ canJumpTo: true }, steps[i]);
      }
      return steps;
    };
    this.getElement = (appendTo) => {
      if (typeof appendTo === "function") {
        return appendTo();
      }
      return appendTo || document.body;
    };
    const newId = _Wizard.currentId++;
    this.titleId = props.titleId || `pf-wizard-title-${newId}`;
    this.descriptionId = props.descriptionId || `pf-wizard-description-${newId}`;
    this.state = {
      currentStep: this.props.startAtStep && Number.isInteger(this.props.startAtStep) ? this.props.startAtStep : 1,
      isNavOpen: false
    };
    if (props.onCurrentStepChanged) {
      const flattenedSteps = this.getFlattenedSteps();
      if (flattenedSteps.length >= this.state.currentStep) {
        const currentStep = flattenedSteps[this.state.currentStep - 1];
        props.onCurrentStepChanged(currentStep);
      }
    }
    this.drawerRef = React307.createRef();
  }
  setCurrentStep(currentStep, currentStepObject) {
    this.setState({
      currentStep
    });
    if (this.props.onCurrentStepChanged) {
      this.props.onCurrentStepChanged(currentStepObject);
    }
  }
  componentDidMount() {
    const target = typeof document !== "undefined" ? document.body : null;
    if (target) {
      target.addEventListener("keydown", this.handleKeyClicks, false);
    }
  }
  componentWillUnmount() {
    const target = typeof document !== "undefined" && document.body || null;
    if (target) {
      target.removeEventListener("keydown", this.handleKeyClicks, false);
    }
  }
  componentDidUpdate(prevProps) {
    if (prevProps.startAtStep !== this.props.startAtStep) {
      this.setState({ currentStep: this.props.startAtStep });
    }
  }
  render() {
    const _a = this.props, {
      /* eslint-disable @typescript-eslint/no-unused-vars */
      width,
      height,
      title,
      description,
      descriptionComponent,
      onClose,
      onSave,
      onBack,
      onNext,
      onGoToStep,
      className,
      steps,
      startAtStep,
      nextButtonText = "Next",
      backButtonText = "Back",
      cancelButtonText = "Cancel",
      hideClose,
      closeButtonAriaLabel = "Close",
      navAriaLabel,
      navAriaLabelledBy,
      mainAriaLabel,
      mainAriaLabelledBy,
      hasNoBodyPadding,
      footer,
      appendTo,
      isOpen,
      titleId,
      descriptionId,
      isNavExpandable,
      onCurrentStepChanged,
      hasDrawer,
      isDrawerExpanded,
      onExpandDrawer
    } = _a, rest = __rest(_a, ["width", "height", "title", "description", "descriptionComponent", "onClose", "onSave", "onBack", "onNext", "onGoToStep", "className", "steps", "startAtStep", "nextButtonText", "backButtonText", "cancelButtonText", "hideClose", "closeButtonAriaLabel", "navAriaLabel", "navAriaLabelledBy", "mainAriaLabel", "mainAriaLabelledBy", "hasNoBodyPadding", "footer", "appendTo", "isOpen", "titleId", "descriptionId", "isNavExpandable", "onCurrentStepChanged", "hasDrawer", "isDrawerExpanded", "onExpandDrawer"]);
    const { currentStep } = this.state;
    const flattenedSteps = this.getFlattenedSteps();
    const adjustedStep = flattenedSteps.length < currentStep ? flattenedSteps.length : currentStep;
    const activeStep = flattenedSteps[adjustedStep - 1];
    const computedSteps = this.initSteps(steps);
    const firstStep = activeStep === flattenedSteps[0];
    const isValid = activeStep && activeStep.enableNext !== void 0 ? activeStep.enableNext : true;
    const nav = (isWizardNavOpen) => {
      const wizNavAProps = {
        isOpen: isWizardNavOpen,
        "aria-label": navAriaLabel,
        "aria-labelledby": (title || navAriaLabelledBy) && (navAriaLabelledBy || this.titleId)
      };
      return React307.createElement(WizardNav, Object.assign({}, wizNavAProps), computedSteps.map((step, index) => {
        if (step.isFinishedStep) {
          return;
        }
        let enabled;
        let navItemStep;
        if (step.steps) {
          let hasActiveChild = false;
          let canJumpToParent = false;
          for (const subStep of step.steps) {
            if (activeStep.name === subStep.name) {
              hasActiveChild = true;
            }
            if (subStep.canJumpTo) {
              canJumpToParent = true;
            }
          }
          navItemStep = this.getFlattenedStepsIndex(flattenedSteps, step.steps[0].name);
          return React307.createElement(
            WizardNavItem,
            { key: index, id: step.id, content: step.name, isExpandable: isNavExpandable, isCurrent: hasActiveChild, isDisabled: !canJumpToParent, step: navItemStep, onNavItemClick: this.goToStep },
            React307.createElement(WizardNav, Object.assign({}, wizNavAProps, { returnList: true }), step.steps.map((childStep, indexChild) => {
              if (childStep.isFinishedStep) {
                return;
              }
              navItemStep = this.getFlattenedStepsIndex(flattenedSteps, childStep.name);
              enabled = childStep.canJumpTo && !childStep.isDisabled;
              return React307.createElement(WizardNavItem, { key: `child_${indexChild}`, id: childStep.id, content: childStep.name, isCurrent: activeStep.name === childStep.name, isDisabled: !enabled, step: navItemStep, onNavItemClick: this.goToStep });
            }))
          );
        }
        navItemStep = this.getFlattenedStepsIndex(flattenedSteps, step.name);
        enabled = step.canJumpTo && !step.isDisabled;
        return React307.createElement(WizardNavItem, Object.assign({}, step.stepNavItemProps, { key: index, id: step.id, content: step.name, isCurrent: activeStep.name === step.name, isDisabled: !enabled, step: navItemStep, onNavItemClick: this.goToStep }));
      }));
    };
    const context = {
      goToStepById: this.goToStepById,
      goToStepByName: this.goToStepByName,
      onNext: this.onNext,
      onBack: this.onBack,
      onClose,
      activeStep
    };
    const divStyles = Object.assign(Object.assign({}, height ? { height } : {}), width ? { width } : {});
    const wizard = React307.createElement(
      WizardContextProvider,
      { value: context },
      React307.createElement(
        "div",
        Object.assign({}, rest, { className: css(wizard_default.wizard, activeStep && activeStep.isFinishedStep && "pf-m-finished", className), style: Object.keys(divStyles).length ? divStyles : void 0 }),
        title && React307.createElement(WizardHeader, { titleId: this.titleId, descriptionId: this.descriptionId, onClose, title, description, descriptionComponent, closeButtonAriaLabel, hideClose }),
        React307.createElement(WizardToggle, { hasDrawer, isDrawerExpanded, onExpandDrawer, mainAriaLabel, isInPage: isOpen === void 0, mainAriaLabelledBy: (title || mainAriaLabelledBy) && (mainAriaLabelledBy || this.titleId), isNavOpen: this.state.isNavOpen, onNavToggle: (isNavOpen) => this.setState({ isNavOpen }), nav, steps, activeStep, hasNoBodyPadding }, footer || React307.createElement(WizardFooterInternal, { onNext: this.onNext, onBack: this.onBack, onClose, isValid, firstStep, activeStep, nextButtonText: activeStep && activeStep.nextButtonText || nextButtonText, backButtonText, cancelButtonText }))
      )
    );
    if (isOpen !== void 0) {
      return React307.createElement(Modal, { width: width !== null ? width : void 0, isOpen, variant: ModalVariant.large, "aria-labelledby": this.titleId, "aria-describedby": this.descriptionId, showClose: false, hasNoBodyWrapper: true }, wizard);
    }
    return wizard;
  }
};
Wizard.displayName = "Wizard";
Wizard.currentId = 0;
Wizard.defaultProps = {
  title: null,
  description: "",
  descriptionComponent: "p",
  className: "",
  startAtStep: 1,
  nextButtonText: "Next",
  backButtonText: "Back",
  cancelButtonText: "Cancel",
  hideClose: false,
  closeButtonAriaLabel: "Close",
  navAriaLabel: null,
  navAriaLabelledBy: null,
  mainAriaLabel: null,
  mainAriaLabelledBy: null,
  hasNoBodyPadding: false,
  onBack: null,
  onNext: null,
  onGoToStep: null,
  width: null,
  height: null,
  footer: null,
  onClose: () => void 0,
  appendTo: null,
  isOpen: void 0,
  isNavExpandable: false,
  hasDrawer: false,
  isDrawerExpanded: false,
  onExpandDrawer: () => void 0
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Wizard/WizardFooter.js
var React308 = __toESM(require_react());
var WizardFooter = ({ children }) => React308.createElement("footer", { className: css(wizard_default.wizardFooter) }, children);
WizardFooter.displayName = "WizardFooter";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DragDrop/DragDrop.js
var React309 = __toESM(require_react());
var DragDropContext = React309.createContext({
  onDrag: (_source) => true,
  onDragMove: (_source, _dest) => {
  },
  onDrop: (_source, _dest) => false
});
var DragDrop = ({ children, onDrag = () => true, onDragMove = () => {
}, onDrop = () => false }) => React309.createElement(DragDropContext.Provider, { value: { onDrag, onDragMove, onDrop } }, children);
DragDrop.displayName = "DragDrop";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DragDrop/Draggable.js
var React311 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DragDrop/drag-drop.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/DragDrop/drag-drop.css";
var drag_drop_default = {
  "draggable": "pf-c-draggable",
  "droppable": "pf-c-droppable",
  "modifiers": {
    "dragging": "pf-m-dragging",
    "dragOutside": "pf-m-drag-outside"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DragDrop/DroppableContext.js
var React310 = __toESM(require_react());
var DroppableContext = React310.createContext({
  zone: "defaultDroppableZone",
  droppableId: "defaultDroppableId"
});

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DragDrop/Draggable.js
function getDefaultBackground() {
  const div = document.createElement("div");
  document.head.appendChild(div);
  const bg = window.getComputedStyle(div).backgroundColor;
  document.head.removeChild(div);
  return bg;
}
function getInheritedBackgroundColor(el) {
  const defaultStyle = getDefaultBackground();
  const backgroundColor = window.getComputedStyle(el).backgroundColor;
  if (backgroundColor !== defaultStyle) {
    return backgroundColor;
  } else if (!el.parentElement) {
    return defaultStyle;
  }
  return getInheritedBackgroundColor(el.parentElement);
}
function removeBlankDiv(node) {
  if (node.getAttribute("blankDiv") === "true") {
    for (let i = 0; i < node.children.length; i++) {
      const child = node.children[i];
      if (child.getAttribute("blankDiv") === "true") {
        node.removeChild(child);
        node.setAttribute("blankDiv", "false");
        break;
      }
    }
  }
}
function resetDroppableItem(droppableItem) {
  removeBlankDiv(droppableItem.node);
  droppableItem.node.classList.remove(drag_drop_default.modifiers.dragging);
  droppableItem.node.classList.remove(drag_drop_default.modifiers.dragOutside);
  droppableItem.draggableNodes.forEach((n, i) => {
    n.style.transform = "";
    n.style.transition = "";
    droppableItem.draggableNodesRects[i] = n.getBoundingClientRect();
  });
}
function overlaps(ev, rect) {
  return ev.clientX > rect.x && ev.clientX < rect.x + rect.width && ev.clientY > rect.y && ev.clientY < rect.y + rect.height;
}
var Draggable = (_a) => {
  var { className, children, style: styleProp = {}, hasNoWrapper = false } = _a, props = __rest(_a, ["className", "children", "style", "hasNoWrapper"]);
  let [style, setStyle] = React311.useState(styleProp);
  const [isDragging, setIsDragging] = React311.useState(false);
  const [isValidDrag, setIsValidDrag] = React311.useState(true);
  const { zone, droppableId } = React311.useContext(DroppableContext);
  const { onDrag, onDragMove, onDrop } = React311.useContext(DragDropContext);
  let startX = 0;
  let startY = 0;
  let index = null;
  let hoveringDroppable;
  let hoveringIndex = null;
  let mouseMoveListener;
  let mouseUpListener;
  let startYOffset = 0;
  const onTransitionEnd = (_ev) => {
    if (isDragging) {
      setIsDragging(false);
      setStyle(styleProp);
    }
  };
  function getSourceAndDest() {
    const hoveringDroppableId = hoveringDroppable ? hoveringDroppable.getAttribute("data-pf-droppableid") : null;
    const source = {
      droppableId,
      index
    };
    const dest = hoveringDroppableId !== null && hoveringIndex !== null ? {
      droppableId: hoveringDroppableId,
      index: hoveringIndex
    } : void 0;
    return { source, dest, hoveringDroppableId };
  }
  const onMouseUpWhileDragging = (droppableItems) => {
    droppableItems.forEach(resetDroppableItem);
    document.removeEventListener("mousemove", mouseMoveListener);
    document.removeEventListener("mouseup", mouseUpListener);
    document.removeEventListener("contextmenu", mouseUpListener);
    const { source, dest, hoveringDroppableId } = getSourceAndDest();
    const consumerReordered = onDrop(source, dest);
    if (consumerReordered && droppableId === hoveringDroppableId) {
      setIsDragging(false);
      setStyle(styleProp);
    } else if (!consumerReordered) {
      setStyle(Object.assign(Object.assign({}, style), { transition: "transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s", transform: "", background: styleProp.background, boxShadow: styleProp.boxShadow }));
    }
  };
  const onMouseMoveWhileDragging = (ev, droppableItems, blankDivRect) => {
    hoveringDroppable = null;
    droppableItems.forEach((droppableItem) => {
      const { node, rect, isDraggingHost, draggableNodes, draggableNodesRects } = droppableItem;
      if (overlaps(ev, rect)) {
        node.classList.remove(drag_drop_default.modifiers.dragOutside);
        hoveringDroppable = node;
        if (node.getAttribute("blankDiv") !== "true" && !isDraggingHost) {
          const blankDiv = document.createElement("div");
          blankDiv.setAttribute("blankDiv", "true");
          let blankDivPos = -1;
          for (let i = 0; i < draggableNodes.length; i++) {
            const childRect = draggableNodesRects[i];
            const isLast = i === draggableNodes.length - 1;
            const startOverlaps = childRect.y >= startY - startYOffset;
            if ((startOverlaps || isLast) && blankDivPos === -1) {
              if (isLast && !startOverlaps) {
                draggableNodes[i].after(blankDiv);
              } else {
                draggableNodes[i].before(blankDiv);
              }
              blankDiv.style.height = `${blankDivRect.height}px`;
              blankDiv.style.width = `${blankDivRect.width}px`;
              node.setAttribute("blankDiv", "true");
              blankDivPos = i;
            }
            if (blankDivPos !== -1) {
              childRect.y += blankDivRect.height;
            }
          }
          draggableNodes.splice(blankDivPos, 0, blankDiv);
          draggableNodesRects.splice(blankDivPos, 0, blankDivRect);
          rect.height += blankDivRect.height;
        }
      } else {
        resetDroppableItem(droppableItem);
        node.classList.add(drag_drop_default.modifiers.dragging);
        node.classList.add(drag_drop_default.modifiers.dragOutside);
      }
    });
    setStyle(Object.assign(Object.assign({}, style), { transform: `translate(${ev.pageX - startX}px, ${ev.pageY - startY}px)` }));
    setIsValidDrag(Boolean(hoveringDroppable));
    hoveringIndex = null;
    if (hoveringDroppable) {
      const { draggableNodes, draggableNodesRects } = droppableItems.find((item) => item.node === hoveringDroppable);
      let lastTranslate = 0;
      draggableNodes.forEach((n, i) => {
        n.style.transition = "transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s";
        const rect = draggableNodesRects[i];
        const halfway = rect.y + rect.height / 2;
        let translateY = 0;
        if (startY < halfway && ev.pageY + (blankDivRect.height - startYOffset) > halfway) {
          translateY -= blankDivRect.height;
        } else if (startY >= halfway && ev.pageY - startYOffset <= halfway) {
          translateY += blankDivRect.height;
        }
        if (translateY <= lastTranslate && translateY < 0 || translateY > lastTranslate && translateY > 0) {
          hoveringIndex = i;
        }
        n.style.transform = `translate(0, ${translateY}px`;
        lastTranslate = translateY;
      });
    }
    const { source, dest } = getSourceAndDest();
    onDragMove(source, dest);
  };
  const onDragStart = (ev) => {
    ev.preventDefault();
    if (isDragging) {
      return;
    }
    const dragging = ev.target;
    const rect = dragging.getBoundingClientRect();
    const droppableNodes = Array.from(document.querySelectorAll(`[data-pf-droppable="${zone}"]`));
    const droppableItems = droppableNodes.reduce((acc, cur) => {
      cur.classList.add(drag_drop_default.modifiers.dragging);
      const draggableNodes = Array.from(cur.querySelectorAll(`[data-pf-draggable-zone="${zone}"]`));
      const isDraggingHost = cur.contains(dragging);
      if (isDraggingHost) {
        index = draggableNodes.indexOf(dragging);
      }
      const droppableItem = {
        node: cur,
        rect: cur.getBoundingClientRect(),
        isDraggingHost,
        // We don't want styles to apply to the left behind div in onMouseMoveWhileDragging
        draggableNodes: draggableNodes.map((node) => node === dragging ? node.cloneNode(false) : node),
        draggableNodesRects: draggableNodes.map((node) => node.getBoundingClientRect())
      };
      acc.push(droppableItem);
      return acc;
    }, []);
    if (!onDrag({ droppableId, index })) {
      return;
    }
    style = Object.assign(Object.assign({}, style), { top: rect.y, left: rect.x, width: rect.width, height: rect.height, "--pf-c-draggable--m-dragging--BackgroundColor": getInheritedBackgroundColor(dragging), position: "fixed", zIndex: 5e3 });
    setStyle(style);
    startX = ev.pageX;
    startY = ev.pageY;
    startYOffset = startY - rect.y;
    setIsDragging(true);
    mouseMoveListener = (ev2) => onMouseMoveWhileDragging(ev2, droppableItems, rect);
    mouseUpListener = () => onMouseUpWhileDragging(droppableItems);
    document.addEventListener("mousemove", mouseMoveListener);
    document.addEventListener("mouseup", mouseUpListener);
  };
  const childProps = Object.assign({
    "data-pf-draggable-zone": isDragging ? null : zone,
    draggable: true,
    className: css(drag_drop_default.draggable, isDragging && drag_drop_default.modifiers.dragging, !isValidDrag && drag_drop_default.modifiers.dragOutside, className),
    onDragStart,
    onTransitionEnd,
    style
  }, props);
  return React311.createElement(
    React311.Fragment,
    null,
    isDragging && React311.createElement("div", Object.assign({ draggable: true }, props, { style: Object.assign(Object.assign({}, styleProp), { visibility: "hidden" }) }), children),
    hasNoWrapper ? React311.cloneElement(children, childProps) : React311.createElement("div", Object.assign({}, childProps), children)
  );
};
Draggable.displayName = "Draggable";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/DragDrop/Droppable.js
var React312 = __toESM(require_react());
var Droppable = (_a) => {
  var { className, children, zone = "defaultZone", droppableId = "defaultId", hasNoWrapper = false } = _a, props = __rest(_a, ["className", "children", "zone", "droppableId", "hasNoWrapper"]);
  const childProps = Object.assign({
    "data-pf-droppable": zone,
    "data-pf-droppableid": droppableId,
    // if has no wrapper is set, don't overwrite children className with the className prop
    className: hasNoWrapper && React312.Children.count(children) === 1 ? css(drag_drop_default.droppable, className, children.props.className) : css(drag_drop_default.droppable, className)
  }, props);
  return React312.createElement(DroppableContext.Provider, { value: { zone, droppableId } }, hasNoWrapper ? React312.cloneElement(children, childProps) : React312.createElement("div", Object.assign({}, childProps), children));
};
Droppable.displayName = "Droppable";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Truncate/Truncate.js
var React313 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Truncate/truncate.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/components/Truncate/truncate.css";
var truncate_default = {
  "truncate": "pf-c-truncate",
  "truncateEnd": "pf-c-truncate__end",
  "truncateStart": "pf-c-truncate__start"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/components/Truncate/Truncate.js
var TruncatePosition;
(function(TruncatePosition2) {
  TruncatePosition2["start"] = "start";
  TruncatePosition2["end"] = "end";
  TruncatePosition2["middle"] = "middle";
})(TruncatePosition || (TruncatePosition = {}));
var truncateStyles = {
  start: truncate_default.truncateEnd,
  end: truncate_default.truncateStart
};
var minWidthCharacters = 12;
var sliceContent = (str, slice) => [str.slice(0, str.length - slice), str.slice(-slice)];
var Truncate = (_a) => {
  var { className, position = "end", tooltipPosition = "top", trailingNumChars = 7, content, removeFindDomNode } = _a, props = __rest(_a, ["className", "position", "tooltipPosition", "trailingNumChars", "content", "removeFindDomNode"]);
  return React313.createElement(
    Tooltip,
    { position: tooltipPosition, content, removeFindDomNode },
    React313.createElement(
      "span",
      Object.assign({ className: css(truncate_default.truncate, className) }, props),
      (position === TruncatePosition.end || position === TruncatePosition.start) && React313.createElement(
        "span",
        { className: truncateStyles[position] },
        content,
        position === TruncatePosition.start && React313.createElement(React313.Fragment, null, "‎")
      ),
      position === TruncatePosition.middle && content.slice(0, content.length - trailingNumChars).length > minWidthCharacters && React313.createElement(
        React313.Fragment,
        null,
        React313.createElement("span", { className: truncate_default.truncateStart }, sliceContent(content, trailingNumChars)[0]),
        React313.createElement("span", { className: truncate_default.truncateEnd }, sliceContent(content, trailingNumChars)[1])
      ),
      position === TruncatePosition.middle && content.slice(0, content.length - trailingNumChars).length <= minWidthCharacters && content
    )
  );
};
Truncate.displayName = "Truncate";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Flex/Flex.js
var React314 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Flex/flex.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Flex/flex.css";
var flex_default = {
  "flex": "pf-l-flex",
  "modifiers": {
    "flex": "pf-m-flex",
    "inlineFlex": "pf-m-inline-flex",
    "column": "pf-m-column",
    "columnReverse": "pf-m-column-reverse",
    "row": "pf-m-row",
    "rowReverse": "pf-m-row-reverse",
    "wrap": "pf-m-wrap",
    "wrapReverse": "pf-m-wrap-reverse",
    "nowrap": "pf-m-nowrap",
    "justifyContentFlexStart": "pf-m-justify-content-flex-start",
    "justifyContentFlexEnd": "pf-m-justify-content-flex-end",
    "justifyContentCenter": "pf-m-justify-content-center",
    "justifyContentSpaceBetween": "pf-m-justify-content-space-between",
    "justifyContentSpaceAround": "pf-m-justify-content-space-around",
    "justifyContentSpaceEvenly": "pf-m-justify-content-space-evenly",
    "alignItemsFlexStart": "pf-m-align-items-flex-start",
    "alignItemsFlexEnd": "pf-m-align-items-flex-end",
    "alignItemsCenter": "pf-m-align-items-center",
    "alignItemsStretch": "pf-m-align-items-stretch",
    "alignItemsBaseline": "pf-m-align-items-baseline",
    "alignContentFlexStart": "pf-m-align-content-flex-start",
    "alignContentFlexEnd": "pf-m-align-content-flex-end",
    "alignContentCenter": "pf-m-align-content-center",
    "alignContentStretch": "pf-m-align-content-stretch",
    "alignContentSpaceBetween": "pf-m-align-content-space-between",
    "alignContentSpaceAround": "pf-m-align-content-space-around",
    "alignRight": "pf-m-align-right",
    "alignLeft": "pf-m-align-left",
    "grow": "pf-m-grow",
    "shrink": "pf-m-shrink",
    "fullWidth": "pf-m-full-width",
    "flex_1": "pf-m-flex-1",
    "flex_2": "pf-m-flex-2",
    "flex_3": "pf-m-flex-3",
    "flex_4": "pf-m-flex-4",
    "flexDefault": "pf-m-flex-default",
    "flexNone": "pf-m-flex-none",
    "alignSelfFlexStart": "pf-m-align-self-flex-start",
    "alignSelfFlexEnd": "pf-m-align-self-flex-end",
    "alignSelfCenter": "pf-m-align-self-center",
    "alignSelfBaseline": "pf-m-align-self-baseline",
    "alignSelfStretch": "pf-m-align-self-stretch",
    "flexOnSm": "pf-m-flex-on-sm",
    "inlineFlexOnSm": "pf-m-inline-flex-on-sm",
    "columnOnSm": "pf-m-column-on-sm",
    "columnReverseOnSm": "pf-m-column-reverse-on-sm",
    "rowOnSm": "pf-m-row-on-sm",
    "rowReverseOnSm": "pf-m-row-reverse-on-sm",
    "wrapOnSm": "pf-m-wrap-on-sm",
    "wrapReverseOnSm": "pf-m-wrap-reverse-on-sm",
    "nowrapOnSm": "pf-m-nowrap-on-sm",
    "justifyContentFlexStartOnSm": "pf-m-justify-content-flex-start-on-sm",
    "justifyContentFlexEndOnSm": "pf-m-justify-content-flex-end-on-sm",
    "justifyContentCenterOnSm": "pf-m-justify-content-center-on-sm",
    "justifyContentSpaceBetweenOnSm": "pf-m-justify-content-space-between-on-sm",
    "justifyContentSpaceAroundOnSm": "pf-m-justify-content-space-around-on-sm",
    "justifyContentSpaceEvenlyOnSm": "pf-m-justify-content-space-evenly-on-sm",
    "alignItemsFlexStartOnSm": "pf-m-align-items-flex-start-on-sm",
    "alignItemsFlexEndOnSm": "pf-m-align-items-flex-end-on-sm",
    "alignItemsCenterOnSm": "pf-m-align-items-center-on-sm",
    "alignItemsStretchOnSm": "pf-m-align-items-stretch-on-sm",
    "alignItemsBaselineOnSm": "pf-m-align-items-baseline-on-sm",
    "alignContentFlexStartOnSm": "pf-m-align-content-flex-start-on-sm",
    "alignContentFlexEndOnSm": "pf-m-align-content-flex-end-on-sm",
    "alignContentCenterOnSm": "pf-m-align-content-center-on-sm",
    "alignContentStretchOnSm": "pf-m-align-content-stretch-on-sm",
    "alignContentSpaceBetweenOnSm": "pf-m-align-content-space-between-on-sm",
    "alignContentSpaceAroundOnSm": "pf-m-align-content-space-around-on-sm",
    "alignRightOnSm": "pf-m-align-right-on-sm",
    "alignLeftOnSm": "pf-m-align-left-on-sm",
    "growOnSm": "pf-m-grow-on-sm",
    "shrinkOnSm": "pf-m-shrink-on-sm",
    "fullWidthOnSm": "pf-m-full-width-on-sm",
    "flex_1OnSm": "pf-m-flex-1-on-sm",
    "flex_2OnSm": "pf-m-flex-2-on-sm",
    "flex_3OnSm": "pf-m-flex-3-on-sm",
    "flex_4OnSm": "pf-m-flex-4-on-sm",
    "flexDefaultOnSm": "pf-m-flex-default-on-sm",
    "flexNoneOnSm": "pf-m-flex-none-on-sm",
    "alignSelfFlexStartOnSm": "pf-m-align-self-flex-start-on-sm",
    "alignSelfFlexEndOnSm": "pf-m-align-self-flex-end-on-sm",
    "alignSelfCenterOnSm": "pf-m-align-self-center-on-sm",
    "alignSelfBaselineOnSm": "pf-m-align-self-baseline-on-sm",
    "alignSelfStretchOnSm": "pf-m-align-self-stretch-on-sm",
    "flexOnMd": "pf-m-flex-on-md",
    "inlineFlexOnMd": "pf-m-inline-flex-on-md",
    "columnOnMd": "pf-m-column-on-md",
    "columnReverseOnMd": "pf-m-column-reverse-on-md",
    "rowOnMd": "pf-m-row-on-md",
    "rowReverseOnMd": "pf-m-row-reverse-on-md",
    "wrapOnMd": "pf-m-wrap-on-md",
    "wrapReverseOnMd": "pf-m-wrap-reverse-on-md",
    "nowrapOnMd": "pf-m-nowrap-on-md",
    "justifyContentFlexStartOnMd": "pf-m-justify-content-flex-start-on-md",
    "justifyContentFlexEndOnMd": "pf-m-justify-content-flex-end-on-md",
    "justifyContentCenterOnMd": "pf-m-justify-content-center-on-md",
    "justifyContentSpaceBetweenOnMd": "pf-m-justify-content-space-between-on-md",
    "justifyContentSpaceAroundOnMd": "pf-m-justify-content-space-around-on-md",
    "justifyContentSpaceEvenlyOnMd": "pf-m-justify-content-space-evenly-on-md",
    "alignItemsFlexStartOnMd": "pf-m-align-items-flex-start-on-md",
    "alignItemsFlexEndOnMd": "pf-m-align-items-flex-end-on-md",
    "alignItemsCenterOnMd": "pf-m-align-items-center-on-md",
    "alignItemsStretchOnMd": "pf-m-align-items-stretch-on-md",
    "alignItemsBaselineOnMd": "pf-m-align-items-baseline-on-md",
    "alignContentFlexStartOnMd": "pf-m-align-content-flex-start-on-md",
    "alignContentFlexEndOnMd": "pf-m-align-content-flex-end-on-md",
    "alignContentCenterOnMd": "pf-m-align-content-center-on-md",
    "alignContentStretchOnMd": "pf-m-align-content-stretch-on-md",
    "alignContentSpaceBetweenOnMd": "pf-m-align-content-space-between-on-md",
    "alignContentSpaceAroundOnMd": "pf-m-align-content-space-around-on-md",
    "alignRightOnMd": "pf-m-align-right-on-md",
    "alignLeftOnMd": "pf-m-align-left-on-md",
    "growOnMd": "pf-m-grow-on-md",
    "shrinkOnMd": "pf-m-shrink-on-md",
    "fullWidthOnMd": "pf-m-full-width-on-md",
    "flex_1OnMd": "pf-m-flex-1-on-md",
    "flex_2OnMd": "pf-m-flex-2-on-md",
    "flex_3OnMd": "pf-m-flex-3-on-md",
    "flex_4OnMd": "pf-m-flex-4-on-md",
    "flexDefaultOnMd": "pf-m-flex-default-on-md",
    "flexNoneOnMd": "pf-m-flex-none-on-md",
    "alignSelfFlexStartOnMd": "pf-m-align-self-flex-start-on-md",
    "alignSelfFlexEndOnMd": "pf-m-align-self-flex-end-on-md",
    "alignSelfCenterOnMd": "pf-m-align-self-center-on-md",
    "alignSelfBaselineOnMd": "pf-m-align-self-baseline-on-md",
    "alignSelfStretchOnMd": "pf-m-align-self-stretch-on-md",
    "flexOnLg": "pf-m-flex-on-lg",
    "inlineFlexOnLg": "pf-m-inline-flex-on-lg",
    "columnOnLg": "pf-m-column-on-lg",
    "columnReverseOnLg": "pf-m-column-reverse-on-lg",
    "rowOnLg": "pf-m-row-on-lg",
    "rowReverseOnLg": "pf-m-row-reverse-on-lg",
    "wrapOnLg": "pf-m-wrap-on-lg",
    "wrapReverseOnLg": "pf-m-wrap-reverse-on-lg",
    "nowrapOnLg": "pf-m-nowrap-on-lg",
    "justifyContentFlexStartOnLg": "pf-m-justify-content-flex-start-on-lg",
    "justifyContentFlexEndOnLg": "pf-m-justify-content-flex-end-on-lg",
    "justifyContentCenterOnLg": "pf-m-justify-content-center-on-lg",
    "justifyContentSpaceBetweenOnLg": "pf-m-justify-content-space-between-on-lg",
    "justifyContentSpaceAroundOnLg": "pf-m-justify-content-space-around-on-lg",
    "justifyContentSpaceEvenlyOnLg": "pf-m-justify-content-space-evenly-on-lg",
    "alignItemsFlexStartOnLg": "pf-m-align-items-flex-start-on-lg",
    "alignItemsFlexEndOnLg": "pf-m-align-items-flex-end-on-lg",
    "alignItemsCenterOnLg": "pf-m-align-items-center-on-lg",
    "alignItemsStretchOnLg": "pf-m-align-items-stretch-on-lg",
    "alignItemsBaselineOnLg": "pf-m-align-items-baseline-on-lg",
    "alignContentFlexStartOnLg": "pf-m-align-content-flex-start-on-lg",
    "alignContentFlexEndOnLg": "pf-m-align-content-flex-end-on-lg",
    "alignContentCenterOnLg": "pf-m-align-content-center-on-lg",
    "alignContentStretchOnLg": "pf-m-align-content-stretch-on-lg",
    "alignContentSpaceBetweenOnLg": "pf-m-align-content-space-between-on-lg",
    "alignContentSpaceAroundOnLg": "pf-m-align-content-space-around-on-lg",
    "alignRightOnLg": "pf-m-align-right-on-lg",
    "alignLeftOnLg": "pf-m-align-left-on-lg",
    "growOnLg": "pf-m-grow-on-lg",
    "shrinkOnLg": "pf-m-shrink-on-lg",
    "fullWidthOnLg": "pf-m-full-width-on-lg",
    "flex_1OnLg": "pf-m-flex-1-on-lg",
    "flex_2OnLg": "pf-m-flex-2-on-lg",
    "flex_3OnLg": "pf-m-flex-3-on-lg",
    "flex_4OnLg": "pf-m-flex-4-on-lg",
    "flexDefaultOnLg": "pf-m-flex-default-on-lg",
    "flexNoneOnLg": "pf-m-flex-none-on-lg",
    "alignSelfFlexStartOnLg": "pf-m-align-self-flex-start-on-lg",
    "alignSelfFlexEndOnLg": "pf-m-align-self-flex-end-on-lg",
    "alignSelfCenterOnLg": "pf-m-align-self-center-on-lg",
    "alignSelfBaselineOnLg": "pf-m-align-self-baseline-on-lg",
    "alignSelfStretchOnLg": "pf-m-align-self-stretch-on-lg",
    "flexOnXl": "pf-m-flex-on-xl",
    "inlineFlexOnXl": "pf-m-inline-flex-on-xl",
    "columnOnXl": "pf-m-column-on-xl",
    "columnReverseOnXl": "pf-m-column-reverse-on-xl",
    "rowOnXl": "pf-m-row-on-xl",
    "rowReverseOnXl": "pf-m-row-reverse-on-xl",
    "wrapOnXl": "pf-m-wrap-on-xl",
    "wrapReverseOnXl": "pf-m-wrap-reverse-on-xl",
    "nowrapOnXl": "pf-m-nowrap-on-xl",
    "justifyContentFlexStartOnXl": "pf-m-justify-content-flex-start-on-xl",
    "justifyContentFlexEndOnXl": "pf-m-justify-content-flex-end-on-xl",
    "justifyContentCenterOnXl": "pf-m-justify-content-center-on-xl",
    "justifyContentSpaceBetweenOnXl": "pf-m-justify-content-space-between-on-xl",
    "justifyContentSpaceAroundOnXl": "pf-m-justify-content-space-around-on-xl",
    "justifyContentSpaceEvenlyOnXl": "pf-m-justify-content-space-evenly-on-xl",
    "alignItemsFlexStartOnXl": "pf-m-align-items-flex-start-on-xl",
    "alignItemsFlexEndOnXl": "pf-m-align-items-flex-end-on-xl",
    "alignItemsCenterOnXl": "pf-m-align-items-center-on-xl",
    "alignItemsStretchOnXl": "pf-m-align-items-stretch-on-xl",
    "alignItemsBaselineOnXl": "pf-m-align-items-baseline-on-xl",
    "alignContentFlexStartOnXl": "pf-m-align-content-flex-start-on-xl",
    "alignContentFlexEndOnXl": "pf-m-align-content-flex-end-on-xl",
    "alignContentCenterOnXl": "pf-m-align-content-center-on-xl",
    "alignContentStretchOnXl": "pf-m-align-content-stretch-on-xl",
    "alignContentSpaceBetweenOnXl": "pf-m-align-content-space-between-on-xl",
    "alignContentSpaceAroundOnXl": "pf-m-align-content-space-around-on-xl",
    "alignRightOnXl": "pf-m-align-right-on-xl",
    "alignLeftOnXl": "pf-m-align-left-on-xl",
    "growOnXl": "pf-m-grow-on-xl",
    "shrinkOnXl": "pf-m-shrink-on-xl",
    "fullWidthOnXl": "pf-m-full-width-on-xl",
    "flex_1OnXl": "pf-m-flex-1-on-xl",
    "flex_2OnXl": "pf-m-flex-2-on-xl",
    "flex_3OnXl": "pf-m-flex-3-on-xl",
    "flex_4OnXl": "pf-m-flex-4-on-xl",
    "flexDefaultOnXl": "pf-m-flex-default-on-xl",
    "flexNoneOnXl": "pf-m-flex-none-on-xl",
    "alignSelfFlexStartOnXl": "pf-m-align-self-flex-start-on-xl",
    "alignSelfFlexEndOnXl": "pf-m-align-self-flex-end-on-xl",
    "alignSelfCenterOnXl": "pf-m-align-self-center-on-xl",
    "alignSelfBaselineOnXl": "pf-m-align-self-baseline-on-xl",
    "alignSelfStretchOnXl": "pf-m-align-self-stretch-on-xl",
    "flexOn_2xl": "pf-m-flex-on-2xl",
    "inlineFlexOn_2xl": "pf-m-inline-flex-on-2xl",
    "columnOn_2xl": "pf-m-column-on-2xl",
    "columnReverseOn_2xl": "pf-m-column-reverse-on-2xl",
    "rowOn_2xl": "pf-m-row-on-2xl",
    "rowReverseOn_2xl": "pf-m-row-reverse-on-2xl",
    "wrapOn_2xl": "pf-m-wrap-on-2xl",
    "wrapReverseOn_2xl": "pf-m-wrap-reverse-on-2xl",
    "nowrapOn_2xl": "pf-m-nowrap-on-2xl",
    "justifyContentFlexStartOn_2xl": "pf-m-justify-content-flex-start-on-2xl",
    "justifyContentFlexEndOn_2xl": "pf-m-justify-content-flex-end-on-2xl",
    "justifyContentCenterOn_2xl": "pf-m-justify-content-center-on-2xl",
    "justifyContentSpaceBetweenOn_2xl": "pf-m-justify-content-space-between-on-2xl",
    "justifyContentSpaceAroundOn_2xl": "pf-m-justify-content-space-around-on-2xl",
    "justifyContentSpaceEvenlyOn_2xl": "pf-m-justify-content-space-evenly-on-2xl",
    "alignItemsFlexStartOn_2xl": "pf-m-align-items-flex-start-on-2xl",
    "alignItemsFlexEndOn_2xl": "pf-m-align-items-flex-end-on-2xl",
    "alignItemsCenterOn_2xl": "pf-m-align-items-center-on-2xl",
    "alignItemsStretchOn_2xl": "pf-m-align-items-stretch-on-2xl",
    "alignItemsBaselineOn_2xl": "pf-m-align-items-baseline-on-2xl",
    "alignContentFlexStartOn_2xl": "pf-m-align-content-flex-start-on-2xl",
    "alignContentFlexEndOn_2xl": "pf-m-align-content-flex-end-on-2xl",
    "alignContentCenterOn_2xl": "pf-m-align-content-center-on-2xl",
    "alignContentStretchOn_2xl": "pf-m-align-content-stretch-on-2xl",
    "alignContentSpaceBetweenOn_2xl": "pf-m-align-content-space-between-on-2xl",
    "alignContentSpaceAroundOn_2xl": "pf-m-align-content-space-around-on-2xl",
    "alignRightOn_2xl": "pf-m-align-right-on-2xl",
    "alignLeftOn_2xl": "pf-m-align-left-on-2xl",
    "growOn_2xl": "pf-m-grow-on-2xl",
    "shrinkOn_2xl": "pf-m-shrink-on-2xl",
    "fullWidthOn_2xl": "pf-m-full-width-on-2xl",
    "flex_1On_2xl": "pf-m-flex-1-on-2xl",
    "flex_2On_2xl": "pf-m-flex-2-on-2xl",
    "flex_3On_2xl": "pf-m-flex-3-on-2xl",
    "flex_4On_2xl": "pf-m-flex-4-on-2xl",
    "flexDefaultOn_2xl": "pf-m-flex-default-on-2xl",
    "flexNoneOn_2xl": "pf-m-flex-none-on-2xl",
    "alignSelfFlexStartOn_2xl": "pf-m-align-self-flex-start-on-2xl",
    "alignSelfFlexEndOn_2xl": "pf-m-align-self-flex-end-on-2xl",
    "alignSelfCenterOn_2xl": "pf-m-align-self-center-on-2xl",
    "alignSelfBaselineOn_2xl": "pf-m-align-self-baseline-on-2xl",
    "alignSelfStretchOn_2xl": "pf-m-align-self-stretch-on-2xl",
    "spaceItemsNone": "pf-m-space-items-none",
    "spaceItemsXs": "pf-m-space-items-xs",
    "spaceItemsSm": "pf-m-space-items-sm",
    "spaceItemsMd": "pf-m-space-items-md",
    "spaceItemsLg": "pf-m-space-items-lg",
    "spaceItemsXl": "pf-m-space-items-xl",
    "spaceItems_2xl": "pf-m-space-items-2xl",
    "spaceItems_3xl": "pf-m-space-items-3xl",
    "spaceItems_4xl": "pf-m-space-items-4xl",
    "spaceItemsNoneOnSm": "pf-m-space-items-none-on-sm",
    "spaceItemsXsOnSm": "pf-m-space-items-xs-on-sm",
    "spaceItemsSmOnSm": "pf-m-space-items-sm-on-sm",
    "spaceItemsMdOnSm": "pf-m-space-items-md-on-sm",
    "spaceItemsLgOnSm": "pf-m-space-items-lg-on-sm",
    "spaceItemsXlOnSm": "pf-m-space-items-xl-on-sm",
    "spaceItems_2xlOnSm": "pf-m-space-items-2xl-on-sm",
    "spaceItems_3xlOnSm": "pf-m-space-items-3xl-on-sm",
    "spaceItems_4xlOnSm": "pf-m-space-items-4xl-on-sm",
    "spaceItemsNoneOnMd": "pf-m-space-items-none-on-md",
    "spaceItemsXsOnMd": "pf-m-space-items-xs-on-md",
    "spaceItemsSmOnMd": "pf-m-space-items-sm-on-md",
    "spaceItemsMdOnMd": "pf-m-space-items-md-on-md",
    "spaceItemsLgOnMd": "pf-m-space-items-lg-on-md",
    "spaceItemsXlOnMd": "pf-m-space-items-xl-on-md",
    "spaceItems_2xlOnMd": "pf-m-space-items-2xl-on-md",
    "spaceItems_3xlOnMd": "pf-m-space-items-3xl-on-md",
    "spaceItems_4xlOnMd": "pf-m-space-items-4xl-on-md",
    "spaceItemsNoneOnLg": "pf-m-space-items-none-on-lg",
    "spaceItemsXsOnLg": "pf-m-space-items-xs-on-lg",
    "spaceItemsSmOnLg": "pf-m-space-items-sm-on-lg",
    "spaceItemsMdOnLg": "pf-m-space-items-md-on-lg",
    "spaceItemsLgOnLg": "pf-m-space-items-lg-on-lg",
    "spaceItemsXlOnLg": "pf-m-space-items-xl-on-lg",
    "spaceItems_2xlOnLg": "pf-m-space-items-2xl-on-lg",
    "spaceItems_3xlOnLg": "pf-m-space-items-3xl-on-lg",
    "spaceItems_4xlOnLg": "pf-m-space-items-4xl-on-lg",
    "spaceItemsNoneOnXl": "pf-m-space-items-none-on-xl",
    "spaceItemsXsOnXl": "pf-m-space-items-xs-on-xl",
    "spaceItemsSmOnXl": "pf-m-space-items-sm-on-xl",
    "spaceItemsMdOnXl": "pf-m-space-items-md-on-xl",
    "spaceItemsLgOnXl": "pf-m-space-items-lg-on-xl",
    "spaceItemsXlOnXl": "pf-m-space-items-xl-on-xl",
    "spaceItems_2xlOnXl": "pf-m-space-items-2xl-on-xl",
    "spaceItems_3xlOnXl": "pf-m-space-items-3xl-on-xl",
    "spaceItems_4xlOnXl": "pf-m-space-items-4xl-on-xl",
    "spaceItemsNoneOn_2xl": "pf-m-space-items-none-on-2xl",
    "spaceItemsXsOn_2xl": "pf-m-space-items-xs-on-2xl",
    "spaceItemsSmOn_2xl": "pf-m-space-items-sm-on-2xl",
    "spaceItemsMdOn_2xl": "pf-m-space-items-md-on-2xl",
    "spaceItemsLgOn_2xl": "pf-m-space-items-lg-on-2xl",
    "spaceItemsXlOn_2xl": "pf-m-space-items-xl-on-2xl",
    "spaceItems_2xlOn_2xl": "pf-m-space-items-2xl-on-2xl",
    "spaceItems_3xlOn_2xl": "pf-m-space-items-3xl-on-2xl",
    "spaceItems_4xlOn_2xl": "pf-m-space-items-4xl-on-2xl",
    "spacerNone": "pf-m-spacer-none",
    "spacerXs": "pf-m-spacer-xs",
    "spacerSm": "pf-m-spacer-sm",
    "spacerMd": "pf-m-spacer-md",
    "spacerLg": "pf-m-spacer-lg",
    "spacerXl": "pf-m-spacer-xl",
    "spacer_2xl": "pf-m-spacer-2xl",
    "spacer_3xl": "pf-m-spacer-3xl",
    "spacer_4xl": "pf-m-spacer-4xl",
    "spacerNoneOnSm": "pf-m-spacer-none-on-sm",
    "spacerXsOnSm": "pf-m-spacer-xs-on-sm",
    "spacerSmOnSm": "pf-m-spacer-sm-on-sm",
    "spacerMdOnSm": "pf-m-spacer-md-on-sm",
    "spacerLgOnSm": "pf-m-spacer-lg-on-sm",
    "spacerXlOnSm": "pf-m-spacer-xl-on-sm",
    "spacer_2xlOnSm": "pf-m-spacer-2xl-on-sm",
    "spacer_3xlOnSm": "pf-m-spacer-3xl-on-sm",
    "spacer_4xlOnSm": "pf-m-spacer-4xl-on-sm",
    "spacerNoneOnMd": "pf-m-spacer-none-on-md",
    "spacerXsOnMd": "pf-m-spacer-xs-on-md",
    "spacerSmOnMd": "pf-m-spacer-sm-on-md",
    "spacerMdOnMd": "pf-m-spacer-md-on-md",
    "spacerLgOnMd": "pf-m-spacer-lg-on-md",
    "spacerXlOnMd": "pf-m-spacer-xl-on-md",
    "spacer_2xlOnMd": "pf-m-spacer-2xl-on-md",
    "spacer_3xlOnMd": "pf-m-spacer-3xl-on-md",
    "spacer_4xlOnMd": "pf-m-spacer-4xl-on-md",
    "spacerNoneOnLg": "pf-m-spacer-none-on-lg",
    "spacerXsOnLg": "pf-m-spacer-xs-on-lg",
    "spacerSmOnLg": "pf-m-spacer-sm-on-lg",
    "spacerMdOnLg": "pf-m-spacer-md-on-lg",
    "spacerLgOnLg": "pf-m-spacer-lg-on-lg",
    "spacerXlOnLg": "pf-m-spacer-xl-on-lg",
    "spacer_2xlOnLg": "pf-m-spacer-2xl-on-lg",
    "spacer_3xlOnLg": "pf-m-spacer-3xl-on-lg",
    "spacer_4xlOnLg": "pf-m-spacer-4xl-on-lg",
    "spacerNoneOnXl": "pf-m-spacer-none-on-xl",
    "spacerXsOnXl": "pf-m-spacer-xs-on-xl",
    "spacerSmOnXl": "pf-m-spacer-sm-on-xl",
    "spacerMdOnXl": "pf-m-spacer-md-on-xl",
    "spacerLgOnXl": "pf-m-spacer-lg-on-xl",
    "spacerXlOnXl": "pf-m-spacer-xl-on-xl",
    "spacer_2xlOnXl": "pf-m-spacer-2xl-on-xl",
    "spacer_3xlOnXl": "pf-m-spacer-3xl-on-xl",
    "spacer_4xlOnXl": "pf-m-spacer-4xl-on-xl",
    "spacerNoneOn_2xl": "pf-m-spacer-none-on-2xl",
    "spacerXsOn_2xl": "pf-m-spacer-xs-on-2xl",
    "spacerSmOn_2xl": "pf-m-spacer-sm-on-2xl",
    "spacerMdOn_2xl": "pf-m-spacer-md-on-2xl",
    "spacerLgOn_2xl": "pf-m-spacer-lg-on-2xl",
    "spacerXlOn_2xl": "pf-m-spacer-xl-on-2xl",
    "spacer_2xlOn_2xl": "pf-m-spacer-2xl-on-2xl",
    "spacer_3xlOn_2xl": "pf-m-spacer-3xl-on-2xl",
    "spacer_4xlOn_2xl": "pf-m-spacer-4xl-on-2xl"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/l_flex_item_Order.js
var l_flex_item_Order = {
  "name": "--pf-l-flex--item--Order",
  "value": "0",
  "var": "var(--pf-l-flex--item--Order)"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Flex/Flex.js
var Flex = (_a) => {
  var { children = null, className = "", component = "div", spacer, spaceItems, grow, shrink, flex, direction, alignItems, alignContent, alignSelf, align, justifyContent, display, fullWidth, flexWrap, order, style } = _a, props = __rest(_a, ["children", "className", "component", "spacer", "spaceItems", "grow", "shrink", "flex", "direction", "alignItems", "alignContent", "alignSelf", "align", "justifyContent", "display", "fullWidth", "flexWrap", "order", "style"]);
  const Component47 = component;
  return React314.createElement(Component47, Object.assign({ className: css(flex_default.flex, formatBreakpointMods(spacer, flex_default), formatBreakpointMods(spaceItems, flex_default), formatBreakpointMods(grow, flex_default), formatBreakpointMods(shrink, flex_default), formatBreakpointMods(flex, flex_default), formatBreakpointMods(direction, flex_default), formatBreakpointMods(alignItems, flex_default), formatBreakpointMods(alignContent, flex_default), formatBreakpointMods(alignSelf, flex_default), formatBreakpointMods(align, flex_default), formatBreakpointMods(justifyContent, flex_default), formatBreakpointMods(display, flex_default), formatBreakpointMods(fullWidth, flex_default), formatBreakpointMods(flexWrap, flex_default), className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, l_flex_item_Order.name)) : void 0 }, props), children);
};
Flex.displayName = "Flex";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Flex/FlexItem.js
var React315 = __toESM(require_react());
var FlexItem = (_a) => {
  var { children = null, className = "", component = "div", spacer, grow, shrink, flex, alignSelf, align, fullWidth, order, style } = _a, props = __rest(_a, ["children", "className", "component", "spacer", "grow", "shrink", "flex", "alignSelf", "align", "fullWidth", "order", "style"]);
  const Component47 = component;
  return React315.createElement(Component47, Object.assign({}, props, { className: css(formatBreakpointMods(spacer, flex_default), formatBreakpointMods(grow, flex_default), formatBreakpointMods(shrink, flex_default), formatBreakpointMods(flex, flex_default), formatBreakpointMods(alignSelf, flex_default), formatBreakpointMods(align, flex_default), formatBreakpointMods(fullWidth, flex_default), className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, l_flex_item_Order.name)) : void 0 }), children);
};
FlexItem.displayName = "FlexItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Gallery/Gallery.js
var React316 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Gallery/gallery.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Gallery/gallery.css";
var gallery_default = {
  "gallery": "pf-l-gallery",
  "modifiers": {
    "gutter": "pf-m-gutter"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Gallery/Gallery.js
var Gallery = (_a) => {
  var { children = null, className = "", component = "div", hasGutter = false, minWidths, maxWidths } = _a, props = __rest(_a, ["children", "className", "component", "hasGutter", "minWidths", "maxWidths"]);
  const minWidthStyles = {};
  const Component47 = component;
  if (minWidths) {
    Object.entries(minWidths || {}).map(([breakpoint, value]) => minWidthStyles[`--pf-l-gallery--GridTemplateColumns--min${breakpoint !== "default" ? `-on-${breakpoint}` : ""}`] = value);
  }
  const maxWidthStyles = {};
  if (maxWidths) {
    Object.entries(maxWidths || {}).map(([breakpoint, value]) => maxWidthStyles[`--pf-l-gallery--GridTemplateColumns--max${breakpoint !== "default" ? `-on-${breakpoint}` : ""}`] = value);
  }
  const widthStyles = Object.assign(Object.assign({}, minWidthStyles), maxWidthStyles);
  return React316.createElement(Component47, Object.assign({ className: css(gallery_default.gallery, hasGutter && gallery_default.modifiers.gutter, className) }, props, (minWidths || maxWidths) && { style: Object.assign(Object.assign({}, widthStyles), props.style) }), children);
};
Gallery.displayName = "Gallery";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Gallery/GalleryItem.js
var React317 = __toESM(require_react());
var GalleryItem = (_a) => {
  var { children = null, component = "div" } = _a, props = __rest(_a, ["children", "component"]);
  const Component47 = component;
  return React317.createElement(Component47, Object.assign({}, props), children);
};
GalleryItem.displayName = "GalleryItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Grid/Grid.js
var React318 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Grid/grid.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Grid/grid.css";
var grid_default = {
  "grid": "pf-l-grid",
  "gridItem": "pf-l-grid__item",
  "modifiers": {
    "all_1Col": "pf-m-all-1-col",
    "all_2Col": "pf-m-all-2-col",
    "all_3Col": "pf-m-all-3-col",
    "all_4Col": "pf-m-all-4-col",
    "all_5Col": "pf-m-all-5-col",
    "all_6Col": "pf-m-all-6-col",
    "all_7Col": "pf-m-all-7-col",
    "all_8Col": "pf-m-all-8-col",
    "all_9Col": "pf-m-all-9-col",
    "all_10Col": "pf-m-all-10-col",
    "all_11Col": "pf-m-all-11-col",
    "all_12Col": "pf-m-all-12-col",
    "all_1ColOnSm": "pf-m-all-1-col-on-sm",
    "all_2ColOnSm": "pf-m-all-2-col-on-sm",
    "all_3ColOnSm": "pf-m-all-3-col-on-sm",
    "all_4ColOnSm": "pf-m-all-4-col-on-sm",
    "all_5ColOnSm": "pf-m-all-5-col-on-sm",
    "all_6ColOnSm": "pf-m-all-6-col-on-sm",
    "all_7ColOnSm": "pf-m-all-7-col-on-sm",
    "all_8ColOnSm": "pf-m-all-8-col-on-sm",
    "all_9ColOnSm": "pf-m-all-9-col-on-sm",
    "all_10ColOnSm": "pf-m-all-10-col-on-sm",
    "all_11ColOnSm": "pf-m-all-11-col-on-sm",
    "all_12ColOnSm": "pf-m-all-12-col-on-sm",
    "all_1ColOnMd": "pf-m-all-1-col-on-md",
    "all_2ColOnMd": "pf-m-all-2-col-on-md",
    "all_3ColOnMd": "pf-m-all-3-col-on-md",
    "all_4ColOnMd": "pf-m-all-4-col-on-md",
    "all_5ColOnMd": "pf-m-all-5-col-on-md",
    "all_6ColOnMd": "pf-m-all-6-col-on-md",
    "all_7ColOnMd": "pf-m-all-7-col-on-md",
    "all_8ColOnMd": "pf-m-all-8-col-on-md",
    "all_9ColOnMd": "pf-m-all-9-col-on-md",
    "all_10ColOnMd": "pf-m-all-10-col-on-md",
    "all_11ColOnMd": "pf-m-all-11-col-on-md",
    "all_12ColOnMd": "pf-m-all-12-col-on-md",
    "all_1ColOnLg": "pf-m-all-1-col-on-lg",
    "all_2ColOnLg": "pf-m-all-2-col-on-lg",
    "all_3ColOnLg": "pf-m-all-3-col-on-lg",
    "all_4ColOnLg": "pf-m-all-4-col-on-lg",
    "all_5ColOnLg": "pf-m-all-5-col-on-lg",
    "all_6ColOnLg": "pf-m-all-6-col-on-lg",
    "all_7ColOnLg": "pf-m-all-7-col-on-lg",
    "all_8ColOnLg": "pf-m-all-8-col-on-lg",
    "all_9ColOnLg": "pf-m-all-9-col-on-lg",
    "all_10ColOnLg": "pf-m-all-10-col-on-lg",
    "all_11ColOnLg": "pf-m-all-11-col-on-lg",
    "all_12ColOnLg": "pf-m-all-12-col-on-lg",
    "all_1ColOnXl": "pf-m-all-1-col-on-xl",
    "all_2ColOnXl": "pf-m-all-2-col-on-xl",
    "all_3ColOnXl": "pf-m-all-3-col-on-xl",
    "all_4ColOnXl": "pf-m-all-4-col-on-xl",
    "all_5ColOnXl": "pf-m-all-5-col-on-xl",
    "all_6ColOnXl": "pf-m-all-6-col-on-xl",
    "all_7ColOnXl": "pf-m-all-7-col-on-xl",
    "all_8ColOnXl": "pf-m-all-8-col-on-xl",
    "all_9ColOnXl": "pf-m-all-9-col-on-xl",
    "all_10ColOnXl": "pf-m-all-10-col-on-xl",
    "all_11ColOnXl": "pf-m-all-11-col-on-xl",
    "all_12ColOnXl": "pf-m-all-12-col-on-xl",
    "all_1ColOn_2xl": "pf-m-all-1-col-on-2xl",
    "all_2ColOn_2xl": "pf-m-all-2-col-on-2xl",
    "all_3ColOn_2xl": "pf-m-all-3-col-on-2xl",
    "all_4ColOn_2xl": "pf-m-all-4-col-on-2xl",
    "all_5ColOn_2xl": "pf-m-all-5-col-on-2xl",
    "all_6ColOn_2xl": "pf-m-all-6-col-on-2xl",
    "all_7ColOn_2xl": "pf-m-all-7-col-on-2xl",
    "all_8ColOn_2xl": "pf-m-all-8-col-on-2xl",
    "all_9ColOn_2xl": "pf-m-all-9-col-on-2xl",
    "all_10ColOn_2xl": "pf-m-all-10-col-on-2xl",
    "all_11ColOn_2xl": "pf-m-all-11-col-on-2xl",
    "all_12ColOn_2xl": "pf-m-all-12-col-on-2xl",
    "1Col": "pf-m-1-col",
    "2Col": "pf-m-2-col",
    "3Col": "pf-m-3-col",
    "4Col": "pf-m-4-col",
    "5Col": "pf-m-5-col",
    "6Col": "pf-m-6-col",
    "7Col": "pf-m-7-col",
    "8Col": "pf-m-8-col",
    "9Col": "pf-m-9-col",
    "10Col": "pf-m-10-col",
    "11Col": "pf-m-11-col",
    "12Col": "pf-m-12-col",
    "offset_1Col": "pf-m-offset-1-col",
    "offset_2Col": "pf-m-offset-2-col",
    "offset_3Col": "pf-m-offset-3-col",
    "offset_4Col": "pf-m-offset-4-col",
    "offset_5Col": "pf-m-offset-5-col",
    "offset_6Col": "pf-m-offset-6-col",
    "offset_7Col": "pf-m-offset-7-col",
    "offset_8Col": "pf-m-offset-8-col",
    "offset_9Col": "pf-m-offset-9-col",
    "offset_10Col": "pf-m-offset-10-col",
    "offset_11Col": "pf-m-offset-11-col",
    "offset_12Col": "pf-m-offset-12-col",
    "1Row": "pf-m-1-row",
    "2Row": "pf-m-2-row",
    "3Row": "pf-m-3-row",
    "4Row": "pf-m-4-row",
    "5Row": "pf-m-5-row",
    "6Row": "pf-m-6-row",
    "7Row": "pf-m-7-row",
    "8Row": "pf-m-8-row",
    "9Row": "pf-m-9-row",
    "10Row": "pf-m-10-row",
    "11Row": "pf-m-11-row",
    "12Row": "pf-m-12-row",
    "1ColOnSm": "pf-m-1-col-on-sm",
    "2ColOnSm": "pf-m-2-col-on-sm",
    "3ColOnSm": "pf-m-3-col-on-sm",
    "4ColOnSm": "pf-m-4-col-on-sm",
    "5ColOnSm": "pf-m-5-col-on-sm",
    "6ColOnSm": "pf-m-6-col-on-sm",
    "7ColOnSm": "pf-m-7-col-on-sm",
    "8ColOnSm": "pf-m-8-col-on-sm",
    "9ColOnSm": "pf-m-9-col-on-sm",
    "10ColOnSm": "pf-m-10-col-on-sm",
    "11ColOnSm": "pf-m-11-col-on-sm",
    "12ColOnSm": "pf-m-12-col-on-sm",
    "offset_1ColOnSm": "pf-m-offset-1-col-on-sm",
    "offset_2ColOnSm": "pf-m-offset-2-col-on-sm",
    "offset_3ColOnSm": "pf-m-offset-3-col-on-sm",
    "offset_4ColOnSm": "pf-m-offset-4-col-on-sm",
    "offset_5ColOnSm": "pf-m-offset-5-col-on-sm",
    "offset_6ColOnSm": "pf-m-offset-6-col-on-sm",
    "offset_7ColOnSm": "pf-m-offset-7-col-on-sm",
    "offset_8ColOnSm": "pf-m-offset-8-col-on-sm",
    "offset_9ColOnSm": "pf-m-offset-9-col-on-sm",
    "offset_10ColOnSm": "pf-m-offset-10-col-on-sm",
    "offset_11ColOnSm": "pf-m-offset-11-col-on-sm",
    "offset_12ColOnSm": "pf-m-offset-12-col-on-sm",
    "1RowOnSm": "pf-m-1-row-on-sm",
    "2RowOnSm": "pf-m-2-row-on-sm",
    "3RowOnSm": "pf-m-3-row-on-sm",
    "4RowOnSm": "pf-m-4-row-on-sm",
    "5RowOnSm": "pf-m-5-row-on-sm",
    "6RowOnSm": "pf-m-6-row-on-sm",
    "7RowOnSm": "pf-m-7-row-on-sm",
    "8RowOnSm": "pf-m-8-row-on-sm",
    "9RowOnSm": "pf-m-9-row-on-sm",
    "10RowOnSm": "pf-m-10-row-on-sm",
    "11RowOnSm": "pf-m-11-row-on-sm",
    "12RowOnSm": "pf-m-12-row-on-sm",
    "1ColOnMd": "pf-m-1-col-on-md",
    "2ColOnMd": "pf-m-2-col-on-md",
    "3ColOnMd": "pf-m-3-col-on-md",
    "4ColOnMd": "pf-m-4-col-on-md",
    "5ColOnMd": "pf-m-5-col-on-md",
    "6ColOnMd": "pf-m-6-col-on-md",
    "7ColOnMd": "pf-m-7-col-on-md",
    "8ColOnMd": "pf-m-8-col-on-md",
    "9ColOnMd": "pf-m-9-col-on-md",
    "10ColOnMd": "pf-m-10-col-on-md",
    "11ColOnMd": "pf-m-11-col-on-md",
    "12ColOnMd": "pf-m-12-col-on-md",
    "offset_1ColOnMd": "pf-m-offset-1-col-on-md",
    "offset_2ColOnMd": "pf-m-offset-2-col-on-md",
    "offset_3ColOnMd": "pf-m-offset-3-col-on-md",
    "offset_4ColOnMd": "pf-m-offset-4-col-on-md",
    "offset_5ColOnMd": "pf-m-offset-5-col-on-md",
    "offset_6ColOnMd": "pf-m-offset-6-col-on-md",
    "offset_7ColOnMd": "pf-m-offset-7-col-on-md",
    "offset_8ColOnMd": "pf-m-offset-8-col-on-md",
    "offset_9ColOnMd": "pf-m-offset-9-col-on-md",
    "offset_10ColOnMd": "pf-m-offset-10-col-on-md",
    "offset_11ColOnMd": "pf-m-offset-11-col-on-md",
    "offset_12ColOnMd": "pf-m-offset-12-col-on-md",
    "1RowOnMd": "pf-m-1-row-on-md",
    "2RowOnMd": "pf-m-2-row-on-md",
    "3RowOnMd": "pf-m-3-row-on-md",
    "4RowOnMd": "pf-m-4-row-on-md",
    "5RowOnMd": "pf-m-5-row-on-md",
    "6RowOnMd": "pf-m-6-row-on-md",
    "7RowOnMd": "pf-m-7-row-on-md",
    "8RowOnMd": "pf-m-8-row-on-md",
    "9RowOnMd": "pf-m-9-row-on-md",
    "10RowOnMd": "pf-m-10-row-on-md",
    "11RowOnMd": "pf-m-11-row-on-md",
    "12RowOnMd": "pf-m-12-row-on-md",
    "1ColOnLg": "pf-m-1-col-on-lg",
    "2ColOnLg": "pf-m-2-col-on-lg",
    "3ColOnLg": "pf-m-3-col-on-lg",
    "4ColOnLg": "pf-m-4-col-on-lg",
    "5ColOnLg": "pf-m-5-col-on-lg",
    "6ColOnLg": "pf-m-6-col-on-lg",
    "7ColOnLg": "pf-m-7-col-on-lg",
    "8ColOnLg": "pf-m-8-col-on-lg",
    "9ColOnLg": "pf-m-9-col-on-lg",
    "10ColOnLg": "pf-m-10-col-on-lg",
    "11ColOnLg": "pf-m-11-col-on-lg",
    "12ColOnLg": "pf-m-12-col-on-lg",
    "offset_1ColOnLg": "pf-m-offset-1-col-on-lg",
    "offset_2ColOnLg": "pf-m-offset-2-col-on-lg",
    "offset_3ColOnLg": "pf-m-offset-3-col-on-lg",
    "offset_4ColOnLg": "pf-m-offset-4-col-on-lg",
    "offset_5ColOnLg": "pf-m-offset-5-col-on-lg",
    "offset_6ColOnLg": "pf-m-offset-6-col-on-lg",
    "offset_7ColOnLg": "pf-m-offset-7-col-on-lg",
    "offset_8ColOnLg": "pf-m-offset-8-col-on-lg",
    "offset_9ColOnLg": "pf-m-offset-9-col-on-lg",
    "offset_10ColOnLg": "pf-m-offset-10-col-on-lg",
    "offset_11ColOnLg": "pf-m-offset-11-col-on-lg",
    "offset_12ColOnLg": "pf-m-offset-12-col-on-lg",
    "1RowOnLg": "pf-m-1-row-on-lg",
    "2RowOnLg": "pf-m-2-row-on-lg",
    "3RowOnLg": "pf-m-3-row-on-lg",
    "4RowOnLg": "pf-m-4-row-on-lg",
    "5RowOnLg": "pf-m-5-row-on-lg",
    "6RowOnLg": "pf-m-6-row-on-lg",
    "7RowOnLg": "pf-m-7-row-on-lg",
    "8RowOnLg": "pf-m-8-row-on-lg",
    "9RowOnLg": "pf-m-9-row-on-lg",
    "10RowOnLg": "pf-m-10-row-on-lg",
    "11RowOnLg": "pf-m-11-row-on-lg",
    "12RowOnLg": "pf-m-12-row-on-lg",
    "1ColOnXl": "pf-m-1-col-on-xl",
    "2ColOnXl": "pf-m-2-col-on-xl",
    "3ColOnXl": "pf-m-3-col-on-xl",
    "4ColOnXl": "pf-m-4-col-on-xl",
    "5ColOnXl": "pf-m-5-col-on-xl",
    "6ColOnXl": "pf-m-6-col-on-xl",
    "7ColOnXl": "pf-m-7-col-on-xl",
    "8ColOnXl": "pf-m-8-col-on-xl",
    "9ColOnXl": "pf-m-9-col-on-xl",
    "10ColOnXl": "pf-m-10-col-on-xl",
    "11ColOnXl": "pf-m-11-col-on-xl",
    "12ColOnXl": "pf-m-12-col-on-xl",
    "offset_1ColOnXl": "pf-m-offset-1-col-on-xl",
    "offset_2ColOnXl": "pf-m-offset-2-col-on-xl",
    "offset_3ColOnXl": "pf-m-offset-3-col-on-xl",
    "offset_4ColOnXl": "pf-m-offset-4-col-on-xl",
    "offset_5ColOnXl": "pf-m-offset-5-col-on-xl",
    "offset_6ColOnXl": "pf-m-offset-6-col-on-xl",
    "offset_7ColOnXl": "pf-m-offset-7-col-on-xl",
    "offset_8ColOnXl": "pf-m-offset-8-col-on-xl",
    "offset_9ColOnXl": "pf-m-offset-9-col-on-xl",
    "offset_10ColOnXl": "pf-m-offset-10-col-on-xl",
    "offset_11ColOnXl": "pf-m-offset-11-col-on-xl",
    "offset_12ColOnXl": "pf-m-offset-12-col-on-xl",
    "1RowOnXl": "pf-m-1-row-on-xl",
    "2RowOnXl": "pf-m-2-row-on-xl",
    "3RowOnXl": "pf-m-3-row-on-xl",
    "4RowOnXl": "pf-m-4-row-on-xl",
    "5RowOnXl": "pf-m-5-row-on-xl",
    "6RowOnXl": "pf-m-6-row-on-xl",
    "7RowOnXl": "pf-m-7-row-on-xl",
    "8RowOnXl": "pf-m-8-row-on-xl",
    "9RowOnXl": "pf-m-9-row-on-xl",
    "10RowOnXl": "pf-m-10-row-on-xl",
    "11RowOnXl": "pf-m-11-row-on-xl",
    "12RowOnXl": "pf-m-12-row-on-xl",
    "1ColOn_2xl": "pf-m-1-col-on-2xl",
    "2ColOn_2xl": "pf-m-2-col-on-2xl",
    "3ColOn_2xl": "pf-m-3-col-on-2xl",
    "4ColOn_2xl": "pf-m-4-col-on-2xl",
    "5ColOn_2xl": "pf-m-5-col-on-2xl",
    "6ColOn_2xl": "pf-m-6-col-on-2xl",
    "7ColOn_2xl": "pf-m-7-col-on-2xl",
    "8ColOn_2xl": "pf-m-8-col-on-2xl",
    "9ColOn_2xl": "pf-m-9-col-on-2xl",
    "10ColOn_2xl": "pf-m-10-col-on-2xl",
    "11ColOn_2xl": "pf-m-11-col-on-2xl",
    "12ColOn_2xl": "pf-m-12-col-on-2xl",
    "offset_1ColOn_2xl": "pf-m-offset-1-col-on-2xl",
    "offset_2ColOn_2xl": "pf-m-offset-2-col-on-2xl",
    "offset_3ColOn_2xl": "pf-m-offset-3-col-on-2xl",
    "offset_4ColOn_2xl": "pf-m-offset-4-col-on-2xl",
    "offset_5ColOn_2xl": "pf-m-offset-5-col-on-2xl",
    "offset_6ColOn_2xl": "pf-m-offset-6-col-on-2xl",
    "offset_7ColOn_2xl": "pf-m-offset-7-col-on-2xl",
    "offset_8ColOn_2xl": "pf-m-offset-8-col-on-2xl",
    "offset_9ColOn_2xl": "pf-m-offset-9-col-on-2xl",
    "offset_10ColOn_2xl": "pf-m-offset-10-col-on-2xl",
    "offset_11ColOn_2xl": "pf-m-offset-11-col-on-2xl",
    "offset_12ColOn_2xl": "pf-m-offset-12-col-on-2xl",
    "1RowOn_2xl": "pf-m-1-row-on-2xl",
    "2RowOn_2xl": "pf-m-2-row-on-2xl",
    "3RowOn_2xl": "pf-m-3-row-on-2xl",
    "4RowOn_2xl": "pf-m-4-row-on-2xl",
    "5RowOn_2xl": "pf-m-5-row-on-2xl",
    "6RowOn_2xl": "pf-m-6-row-on-2xl",
    "7RowOn_2xl": "pf-m-7-row-on-2xl",
    "8RowOn_2xl": "pf-m-8-row-on-2xl",
    "9RowOn_2xl": "pf-m-9-row-on-2xl",
    "10RowOn_2xl": "pf-m-10-row-on-2xl",
    "11RowOn_2xl": "pf-m-11-row-on-2xl",
    "12RowOn_2xl": "pf-m-12-row-on-2xl",
    "gutter": "pf-m-gutter"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/styles/sizes.js
var BaseSizes;
(function(BaseSizes2) {
  BaseSizes2["xs"] = "xs";
  BaseSizes2["sm"] = "sm";
  BaseSizes2["md"] = "md";
  BaseSizes2["lg"] = "lg";
  BaseSizes2["xl"] = "xl";
  BaseSizes2["2xl"] = "2xl";
  BaseSizes2["3xl"] = "3xl";
  BaseSizes2["4xl"] = "4xl";
})(BaseSizes || (BaseSizes = {}));
var DeviceSizes;
(function(DeviceSizes2) {
  DeviceSizes2["sm"] = "Sm";
  DeviceSizes2["md"] = "Md";
  DeviceSizes2["lg"] = "Lg";
  DeviceSizes2["xl"] = "Xl";
  DeviceSizes2["xl2"] = "_2xl";
})(DeviceSizes || (DeviceSizes = {}));

// ../../node_modules/.pnpm/@patternfly+react-tokens@4.94.7/node_modules/@patternfly/react-tokens/dist/esm/l_grid_item_Order.js
var l_grid_item_Order = {
  "name": "--pf-l-grid--item--Order",
  "value": "0",
  "var": "var(--pf-l-grid--item--Order)"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Grid/Grid.js
var Grid = (_a) => {
  var { children = null, className = "", component = "div", hasGutter, span = null, order, style } = _a, props = __rest(_a, ["children", "className", "component", "hasGutter", "span", "order", "style"]);
  const classes = [grid_default.grid, span && grid_default.modifiers[`all_${span}Col`]];
  const Component47 = component;
  Object.entries(DeviceSizes).forEach(([propKey, gridSpanModifier]) => {
    const key = propKey;
    const propValue = props[key];
    if (propValue) {
      classes.push(grid_default.modifiers[`all_${propValue}ColOn${gridSpanModifier}`]);
    }
    delete props[key];
  });
  return React318.createElement(Component47, Object.assign({ className: css(...classes, hasGutter && grid_default.modifiers.gutter, className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, l_grid_item_Order.name)) : void 0 }, props), children);
};
Grid.displayName = "Grid";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Grid/GridItem.js
var React319 = __toESM(require_react());
var GridItem = (_a) => {
  var { children = null, className = "", component = "div", span = null, rowSpan = null, offset = null, order, style } = _a, props = __rest(_a, ["children", "className", "component", "span", "rowSpan", "offset", "order", "style"]);
  const classes = [
    grid_default.gridItem,
    span && grid_default.modifiers[`${span}Col`],
    rowSpan && grid_default.modifiers[`${rowSpan}Row`],
    offset && grid_default.modifiers[`offset_${offset}Col`]
  ];
  const Component47 = component;
  Object.entries(DeviceSizes).forEach(([propKey, classModifier]) => {
    const key = propKey;
    const rowSpanKey = `${key}RowSpan`;
    const offsetKey = `${key}Offset`;
    const spanValue = props[key];
    const rowSpanValue = props[rowSpanKey];
    const offsetValue = props[offsetKey];
    if (spanValue) {
      classes.push(grid_default.modifiers[`${spanValue}ColOn${classModifier}`]);
    }
    if (rowSpanValue) {
      classes.push(grid_default.modifiers[`${rowSpanValue}RowOn${classModifier}`]);
    }
    if (offsetValue) {
      classes.push(grid_default.modifiers[`offset_${offsetValue}ColOn${classModifier}`]);
    }
    delete props[key];
    delete props[rowSpanKey];
    delete props[offsetKey];
  });
  return React319.createElement(Component47, Object.assign({ className: css(...classes, className), style: style || order ? Object.assign(Object.assign({}, style), setBreakpointCssVars(order, l_grid_item_Order.name)) : void 0 }, props), children);
};
GridItem.displayName = "GridItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Level/Level.js
var React320 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Level/level.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Level/level.css";
var level_default = {
  "level": "pf-l-level",
  "modifiers": {
    "gutter": "pf-m-gutter"
  }
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Level/Level.js
var Level = (_a) => {
  var { hasGutter, className = "", children = null } = _a, props = __rest(_a, ["hasGutter", "className", "children"]);
  return React320.createElement("div", Object.assign({}, props, { className: css(level_default.level, hasGutter && level_default.modifiers.gutter, className) }), children);
};
Level.displayName = "Level";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Level/LevelItem.js
var React321 = __toESM(require_react());
var LevelItem = (_a) => {
  var { children = null } = _a, props = __rest(_a, ["children"]);
  return React321.createElement("div", Object.assign({}, props), children);
};
LevelItem.displayName = "LevelItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Split/Split.js
var React322 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Split/split.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Split/split.css";
var split_default = {
  "modifiers": {
    "wrap": "pf-m-wrap",
    "fill": "pf-m-fill",
    "gutter": "pf-m-gutter"
  },
  "split": "pf-l-split",
  "splitItem": "pf-l-split__item"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Split/Split.js
var Split = (_a) => {
  var { hasGutter = false, isWrappable = false, className = "", children = null, component = "div" } = _a, props = __rest(_a, ["hasGutter", "isWrappable", "className", "children", "component"]);
  const Component47 = component;
  return React322.createElement(Component47, Object.assign({}, props, { className: css(split_default.split, hasGutter && split_default.modifiers.gutter, isWrappable && split_default.modifiers.wrap, className) }), children);
};
Split.displayName = "Split";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Split/SplitItem.js
var React323 = __toESM(require_react());
var SplitItem = (_a) => {
  var { isFilled = false, className = "", children = null } = _a, props = __rest(_a, ["isFilled", "className", "children"]);
  return React323.createElement("div", Object.assign({}, props, { className: css(split_default.splitItem, isFilled && split_default.modifiers.fill, className) }), children);
};
SplitItem.displayName = "SplitItem";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Stack/Stack.js
var React324 = __toESM(require_react());

// ../../node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Stack/stack.mjs
import "/Users/aleksejstarodubcev/Downloads/keycloak-main/js/node_modules/.pnpm/@patternfly+react-styles@4.92.8/node_modules/@patternfly/react-styles/css/layouts/Stack/stack.css";
var stack_default = {
  "modifiers": {
    "fill": "pf-m-fill",
    "gutter": "pf-m-gutter"
  },
  "stack": "pf-l-stack",
  "stackItem": "pf-l-stack__item"
};

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Stack/Stack.js
var Stack = (_a) => {
  var { hasGutter = false, className = "", children = null, component = "div" } = _a, props = __rest(_a, ["hasGutter", "className", "children", "component"]);
  const Component47 = component;
  return React324.createElement(Component47, Object.assign({}, props, { className: css(stack_default.stack, hasGutter && stack_default.modifiers.gutter, className) }), children);
};
Stack.displayName = "Stack";

// ../../node_modules/.pnpm/@patternfly+react-core@4.278.0_react-dom@18.2.0_react@18.2.0/node_modules/@patternfly/react-core/dist/esm/layouts/Stack/StackItem.js
var React325 = __toESM(require_react());
var StackItem = (_a) => {
  var { isFilled = false, className = "", children = null } = _a, props = __rest(_a, ["isFilled", "className", "children"]);
  return React325.createElement("div", Object.assign({}, props, { className: css(stack_default.stackItem, isFilled && stack_default.modifiers.fill, className) }), children);
};
StackItem.displayName = "StackItem";
export {
  ASTERISK,
  AboutModal,
  Accordion,
  AccordionContent,
  AccordionExpandedContentBody,
  AccordionItem,
  AccordionToggle,
  ActionGroup,
  ActionList,
  ActionListGroup,
  ActionListItem,
  Alert,
  AlertActionCloseButton,
  AlertActionLink,
  AlertContext,
  AlertGroup,
  AlertVariant,
  ApplicationLauncher,
  ApplicationLauncherContent,
  ApplicationLauncherContext,
  ApplicationLauncherGroup,
  ApplicationLauncherIcon,
  ApplicationLauncherItem,
  ApplicationLauncherItemContext,
  ApplicationLauncherSeparator,
  ApplicationLauncherText,
  Avatar,
  BackToTop,
  Backdrop,
  BackgroundImage,
  Badge,
  BadgeToggle,
  Banner,
  BaseSizes,
  Brand,
  Breadcrumb,
  BreadcrumbHeading,
  BreadcrumbItem,
  Bullseye,
  Button,
  ButtonType,
  ButtonVariant,
  CalendarMonth,
  Card,
  CardActions,
  CardBody,
  CardContext,
  CardExpandableContent,
  CardFooter,
  CardHeader,
  CardHeaderMain,
  CardTitle,
  Checkbox,
  Chip,
  ChipGroup,
  ClipboardCopy,
  ClipboardCopyAction,
  ClipboardCopyButton,
  ClipboardCopyVariant,
  CodeBlock,
  CodeBlockAction,
  CodeBlockCode,
  ContextSelector,
  ContextSelectorFooter,
  ContextSelectorItem,
  DataList,
  DataListAction,
  DataListCell,
  DataListCheck,
  DataListContent,
  DataListContext,
  DataListControl,
  DataListDragButton,
  DataListItem,
  DataListItemCells,
  DataListItemRow,
  DataListText,
  DataListToggle,
  DataListWrapModifier,
  DatePicker,
  DescriptionList,
  DescriptionListDescription,
  DescriptionListGroup,
  DescriptionListTerm,
  DescriptionListTermHelpText,
  DescriptionListTermHelpTextButton,
  DeviceSizes,
  Divider,
  DividerVariant,
  DragDrop,
  DragDropContext,
  Draggable,
  Drawer,
  DrawerActions,
  DrawerCloseButton,
  DrawerColorVariant,
  DrawerContent,
  DrawerContentBody,
  DrawerContext,
  DrawerHead,
  DrawerPanelBody,
  DrawerPanelContent,
  DrawerSection,
  DrilldownMenu,
  Dropdown,
  DropdownArrowContext,
  DropdownContext,
  DropdownDirection,
  DropdownGroup,
  DropdownItem,
  DropdownMenu,
  DropdownPosition,
  DropdownSeparator,
  DropdownToggle,
  DropdownToggleAction,
  DropdownToggleCheckbox,
  DropdownWithContext,
  Droppable,
  DualListSelector,
  DualListSelectorControl,
  DualListSelectorControlBase,
  DualListSelectorControlsWrapper,
  DualListSelectorControlsWrapperBase,
  DualListSelectorList,
  DualListSelectorListItem,
  DualListSelectorListItemBase,
  DualListSelectorPane,
  DualListSelectorTree,
  EmptyState,
  EmptyStateBody,
  EmptyStateIcon,
  EmptyStatePrimary,
  EmptyStateSecondaryActions,
  EmptyStateVariant,
  ExpandableSection,
  ExpandableSectionToggle,
  ExpandableSectionVariant,
  FileUpload,
  FileUploadField,
  Flex,
  FlexItem,
  FocusTrap,
  Form,
  FormAlert,
  FormFieldGroup,
  FormFieldGroupExpandable,
  FormFieldGroupHeader,
  FormGroup,
  FormHelperText,
  FormSection,
  FormSelect,
  FormSelectOption,
  FormSelectOptionGroup,
  Gallery,
  GalleryItem,
  GenerateId,
  Grid,
  GridItem,
  HelperText,
  HelperTextItem,
  Hint,
  HintBody,
  HintFooter,
  HintTitle,
  Icon,
  InputGroup,
  InputGroupText,
  InputGroupTextVariant,
  JumpLinks,
  JumpLinksItem,
  JumpLinksList,
  KEYHANDLER_DIRECTION,
  KEY_CODES,
  KebabToggle,
  KeyTypes,
  KeyboardHandler,
  Label,
  LabelGroup,
  Level,
  LevelItem,
  List,
  ListComponent,
  ListItem,
  ListVariant,
  Login,
  LoginFooter,
  LoginFooterItem,
  LoginForm,
  LoginHeader,
  LoginMainBody,
  LoginMainFooter,
  LoginMainFooterBandItem,
  LoginMainFooterLinksItem,
  LoginMainHeader,
  LoginPage,
  Masthead,
  MastheadBrand,
  MastheadContent,
  MastheadMain,
  MastheadToggle,
  Menu,
  MenuBreadcrumb,
  MenuContent,
  MenuFooter,
  MenuGroup,
  MenuInput,
  MenuItem,
  MenuItemAction,
  MenuList,
  MenuToggle,
  MenuToggleAction,
  MenuToggleBase,
  MenuToggleCheckbox,
  Modal,
  ModalBox,
  ModalBoxBody,
  ModalBoxCloseButton,
  ModalBoxFooter,
  ModalBoxHeader,
  ModalContent,
  ModalVariant,
  MultipleFileUpload,
  MultipleFileUploadContext,
  MultipleFileUploadMain,
  MultipleFileUploadStatus,
  MultipleFileUploadStatusItem,
  Nav,
  NavContext,
  NavExpandable,
  NavGroup,
  NavItem,
  NavItemSeparator,
  NavList,
  NotificationBadge,
  NotificationBadgeVariant,
  NotificationDrawer,
  NotificationDrawerBody,
  NotificationDrawerGroup,
  NotificationDrawerGroupList,
  NotificationDrawerHeader,
  NotificationDrawerList,
  NotificationDrawerListItem,
  NotificationDrawerListItemBody,
  NotificationDrawerListItemHeader,
  NumberInput,
  OptionsMenu,
  OptionsMenuDirection,
  OptionsMenuItem,
  OptionsMenuItemGroup,
  OptionsMenuPosition,
  OptionsMenuSeparator,
  OptionsMenuToggle,
  OptionsMenuToggleWithText,
  OrderType,
  OverflowMenu,
  OverflowMenuContent,
  OverflowMenuControl,
  OverflowMenuDropdownItem,
  OverflowMenuGroup,
  OverflowMenuItem,
  Page,
  PageBreadcrumb,
  PageContext,
  PageContextConsumer,
  PageContextProvider,
  PageGroup,
  PageHeader,
  PageHeaderTools,
  PageHeaderToolsGroup,
  PageHeaderToolsItem,
  PageLayouts,
  PageNavigation,
  PageSection,
  PageSectionTypes,
  PageSectionVariants,
  PageSidebar,
  PageSidebarContext,
  PageToggleButton,
  Pagination,
  PaginationVariant,
  Panel,
  PanelFooter,
  PanelHeader,
  PanelMain,
  PanelMainBody,
  Popover,
  PopoverPosition,
  Popper,
  Progress,
  ProgressBar,
  ProgressContainer,
  ProgressMeasureLocation,
  ProgressSize,
  ProgressStep,
  ProgressStepVariant,
  ProgressStepper,
  ProgressVariant,
  Radio,
  SIDE,
  SearchInput,
  Select,
  SelectConsumer,
  SelectContext,
  SelectDirection,
  SelectFooterTabbableItems,
  SelectGroup,
  SelectOption,
  SelectPosition,
  SelectProvider,
  SelectVariant,
  Sidebar,
  SidebarContent,
  SidebarPanel,
  SidebarPanelWidthType,
  SimpleList,
  SimpleListContext,
  SimpleListGroup,
  SimpleListItem,
  Skeleton,
  SkipToContent,
  Slider,
  Spinner,
  Split,
  SplitItem,
  Stack,
  StackItem,
  Switch,
  Tab,
  TabAction,
  TabContent,
  TabContentBody,
  TabTitleIcon,
  TabTitleText,
  Tabs,
  TabsComponent,
  TabsContext,
  TabsContextConsumer,
  TabsContextProvider,
  Text,
  TextAreResizeOrientation,
  TextArea,
  TextAreaBase,
  TextAreaReadOnlyVariant,
  TextContent,
  TextInput,
  TextInputBase,
  TextInputGroup,
  TextInputGroupContext,
  TextInputGroupMain,
  TextInputGroupUtilities,
  TextInputReadOnlyVariant,
  TextInputTypes,
  TextList,
  TextListItem,
  TextListItemVariants,
  TextListVariants,
  TextVariants,
  Tile,
  TimePicker,
  Timestamp,
  TimestampFormat,
  TimestampTooltipVariant,
  Title,
  TitleSizes,
  ToggleGroup,
  ToggleGroupItem,
  ToggleTemplate,
  Toolbar,
  ToolbarContent,
  ToolbarContentContext,
  ToolbarContext,
  ToolbarExpandIconWrapper,
  ToolbarFilter,
  ToolbarGroup,
  ToolbarGroupVariant,
  ToolbarItem,
  ToolbarItemVariant,
  ToolbarToggleGroup,
  Tooltip,
  TooltipPosition,
  TreeView,
  TreeViewSearch,
  Truncate,
  TruncatePosition,
  ValidatedOptions,
  Weekday,
  Wizard,
  WizardBody,
  WizardContext,
  WizardContextConsumer,
  WizardContextProvider,
  WizardFooter,
  WizardHeader,
  WizardNav,
  WizardNavItem,
  WizardToggle,
  canUseDOM,
  capitalize,
  clipboardCopyFunc,
  debounce,
  fillTemplate,
  findTabbableElements,
  formatBreakpointMods,
  getBreakpoint,
  getDefaultOUIAId,
  getNextIndex,
  getOUIAProps,
  getOpacityTransition,
  getResizeObserver,
  getTextWidth,
  getUniqueId,
  getVerticalBreakpoint,
  globalBreakpoints,
  globalHeightBreakpoints,
  globalWidthBreakpoints,
  handleArrows,
  innerDimensions,
  isElementInView,
  isValidDate,
  keyHandler,
  navContextDefaults,
  pageContextDefaults,
  pageSidebarContextDefaults,
  pluralize,
  preventedEvents,
  setBreakpointCssVars,
  setTabIndex,
  sideElementIsOutOfView,
  spinnerSize,
  toCamel,
  trimLeft,
  useInterval,
  useIsomorphicLayoutEffect,
  useOUIAId,
  useOUIAProps,
  variantIcons2 as variantIcons,
  yyyyMMddFormat
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
//# sourceMappingURL=@patternfly_react-core.js.map
